-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Auto-generated iex-haskell-sdk API Client
--   
--   Client library for calling the IEX Haskell SDK API based on
--   http-client.
--   
--   host: api.iextrading.com
--   
--   base path: <a>http://api.iextrading.com/1.0</a>
--   
--   IEX Haskell SDK API version: 1.0
--   
--   OpenAPI version: 3.0.0
@package iex-haskell-sdk
@version 0.1.0.0


-- | Logging functions
module IEXHaskellSDK.Logging

-- | Runs a Katip logging block with the Log environment
type LogExecWithContext = forall m. MonadIO m => LogContext -> LogExec m

-- | A Katip logging block
type LogExec m = forall a. KatipT m a -> m a

-- | A Katip Log environment
type LogContext = LogEnv

-- | A Katip Log severity
type LogLevel = Severity

-- | the default log environment
initLogContext :: IO LogContext

-- | Runs a Katip logging block with the Log environment
runDefaultLogExecWithContext :: LogExecWithContext

-- | Runs a Katip logging block with the Log environment
stdoutLoggingExec :: LogExecWithContext

-- | A Katip Log environment which targets stdout
stdoutLoggingContext :: LogContext -> IO LogContext

-- | Runs a Katip logging block with the Log environment
stderrLoggingExec :: LogExecWithContext

-- | A Katip Log environment which targets stderr
stderrLoggingContext :: LogContext -> IO LogContext

-- | Disables Katip logging
runNullLogExec :: LogExecWithContext

-- | Log a katip message
_log :: (Applicative m, Katip m) => Text -> LogLevel -> Text -> m ()

-- | re-throws exceptions after logging them
logExceptions :: (Katip m, MonadCatch m, Applicative m) => Text -> m a -> m a
levelInfo :: LogLevel
levelError :: LogLevel
levelDebug :: LogLevel


module IEXHaskellSDK.MimeTypes
data ContentType a
ContentType :: a -> ContentType a
[unContentType] :: ContentType a -> a
data Accept a
Accept :: a -> Accept a
[unAccept] :: Accept a -> a
class MimeType mtype => Consumes req mtype
class MimeType mtype => Produces req mtype
data MimeJSON
MimeJSON :: MimeJSON
data MimeXML
MimeXML :: MimeXML
data MimePlainText
MimePlainText :: MimePlainText
data MimeFormUrlEncoded
MimeFormUrlEncoded :: MimeFormUrlEncoded
data MimeMultipartFormData
MimeMultipartFormData :: MimeMultipartFormData
data MimeOctetStream
MimeOctetStream :: MimeOctetStream
data MimeNoContent
MimeNoContent :: MimeNoContent
data MimeAny
MimeAny :: MimeAny

-- | A type for responses without content-body.
data NoContent
NoContent :: NoContent
class Typeable mtype => MimeType mtype
mimeTypes :: MimeType mtype => Proxy mtype -> [MediaType]
mimeType :: MimeType mtype => Proxy mtype -> Maybe MediaType
mimeType' :: MimeType mtype => mtype -> Maybe MediaType
mimeTypes' :: MimeType mtype => mtype -> [MediaType]
class MimeType mtype => MimeRender mtype x
mimeRender :: MimeRender mtype x => Proxy mtype -> x -> ByteString
mimeRender' :: MimeRender mtype x => mtype -> x -> ByteString
mimeRenderDefaultMultipartFormData :: ToHttpApiData a => a -> ByteString
class MimeType mtype => MimeUnrender mtype o
mimeUnrender :: MimeUnrender mtype o => Proxy mtype -> ByteString -> Either String o
mimeUnrender' :: MimeUnrender mtype o => mtype -> ByteString -> Either String o
instance GHC.Classes.Eq IEXHaskellSDK.MimeTypes.NoContent
instance GHC.Show.Show IEXHaskellSDK.MimeTypes.NoContent
instance Data.Aeson.Types.FromJSON.FromJSON a => IEXHaskellSDK.MimeTypes.MimeUnrender IEXHaskellSDK.MimeTypes.MimeJSON a
instance Web.Internal.FormUrlEncoded.FromForm a => IEXHaskellSDK.MimeTypes.MimeUnrender IEXHaskellSDK.MimeTypes.MimeFormUrlEncoded a
instance IEXHaskellSDK.MimeTypes.MimeUnrender IEXHaskellSDK.MimeTypes.MimePlainText Data.ByteString.Lazy.Internal.ByteString
instance IEXHaskellSDK.MimeTypes.MimeUnrender IEXHaskellSDK.MimeTypes.MimePlainText Data.Text.Internal.Text
instance IEXHaskellSDK.MimeTypes.MimeUnrender IEXHaskellSDK.MimeTypes.MimePlainText GHC.Base.String
instance IEXHaskellSDK.MimeTypes.MimeUnrender IEXHaskellSDK.MimeTypes.MimeOctetStream Data.ByteString.Lazy.Internal.ByteString
instance IEXHaskellSDK.MimeTypes.MimeUnrender IEXHaskellSDK.MimeTypes.MimeOctetStream Data.Text.Internal.Text
instance IEXHaskellSDK.MimeTypes.MimeUnrender IEXHaskellSDK.MimeTypes.MimeOctetStream GHC.Base.String
instance IEXHaskellSDK.MimeTypes.MimeUnrender IEXHaskellSDK.MimeTypes.MimeNoContent IEXHaskellSDK.MimeTypes.NoContent
instance Data.Aeson.Types.ToJSON.ToJSON a => IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeJSON a
instance Web.Internal.FormUrlEncoded.ToForm a => IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeFormUrlEncoded a
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimePlainText Data.ByteString.Lazy.Internal.ByteString
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimePlainText Data.Text.Internal.Text
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimePlainText GHC.Base.String
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeOctetStream Data.ByteString.Lazy.Internal.ByteString
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeOctetStream Data.Text.Internal.Text
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeOctetStream GHC.Base.String
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData Data.ByteString.Lazy.Internal.ByteString
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData GHC.Types.Bool
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData GHC.Types.Char
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData GHC.Types.Double
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData GHC.Types.Float
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData GHC.Types.Int
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData GHC.Integer.Type.Integer
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData GHC.Base.String
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData Data.Text.Internal.Text
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeNoContent IEXHaskellSDK.MimeTypes.NoContent
instance IEXHaskellSDK.MimeTypes.MimeType IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.MimeType IEXHaskellSDK.MimeTypes.MimeXML
instance IEXHaskellSDK.MimeTypes.MimeType IEXHaskellSDK.MimeTypes.MimeFormUrlEncoded
instance IEXHaskellSDK.MimeTypes.MimeType IEXHaskellSDK.MimeTypes.MimeMultipartFormData
instance IEXHaskellSDK.MimeTypes.MimeType IEXHaskellSDK.MimeTypes.MimePlainText
instance IEXHaskellSDK.MimeTypes.MimeType IEXHaskellSDK.MimeTypes.MimeOctetStream
instance IEXHaskellSDK.MimeTypes.MimeType IEXHaskellSDK.MimeTypes.MimeAny
instance IEXHaskellSDK.MimeTypes.MimeType IEXHaskellSDK.MimeTypes.MimeNoContent


module IEXHaskellSDK.Core

data IEXHaskellSDKConfig
IEXHaskellSDKConfig :: ByteString -> Text -> LogExecWithContext -> LogContext -> [AnyAuthMethod] -> Bool -> IEXHaskellSDKConfig

-- | host supplied in the Request
[configHost] :: IEXHaskellSDKConfig -> ByteString

-- | user-agent supplied in the Request
[configUserAgent] :: IEXHaskellSDKConfig -> Text

-- | Run a block using a Logger instance
[configLogExecWithContext] :: IEXHaskellSDKConfig -> LogExecWithContext

-- | Configures the logger
[configLogContext] :: IEXHaskellSDKConfig -> LogContext

-- | List of configured auth methods
[configAuthMethods] :: IEXHaskellSDKConfig -> [AnyAuthMethod]

-- | throw exceptions if auth methods are not configured
[configValidateAuthMethods] :: IEXHaskellSDKConfig -> Bool

-- | constructs a default IEXHaskellSDKConfig
--   
--   configHost:
--   
--   <pre>
--   <a>http://api.iextrading.com/1.0</a>
--   </pre>
--   
--   configUserAgent:
--   
--   <pre>
--   "iex-haskell-sdk/0.1.0.0"
--   </pre>
newConfig :: IO IEXHaskellSDKConfig

-- | updates config use AuthMethod on matching requests
addAuthMethod :: AuthMethod auth => IEXHaskellSDKConfig -> auth -> IEXHaskellSDKConfig

-- | updates the config to use stdout logging
withStdoutLogging :: IEXHaskellSDKConfig -> IO IEXHaskellSDKConfig

-- | updates the config to use stderr logging
withStderrLogging :: IEXHaskellSDKConfig -> IO IEXHaskellSDKConfig

-- | updates the config to disable logging
withNoLogging :: IEXHaskellSDKConfig -> IEXHaskellSDKConfig

-- | Represents a request.
--   
--   Type Variables:
--   
--   <ul>
--   <li>req - request operation</li>
--   <li>contentType - <a>MimeType</a> associated with request body</li>
--   <li>res - response model</li>
--   <li>accept - <a>MimeType</a> associated with response body</li>
--   </ul>
data IEXHaskellSDKRequest req contentType res accept
IEXHaskellSDKRequest :: Method -> [ByteString] -> Params -> [TypeRep] -> IEXHaskellSDKRequest req contentType res accept

-- | Method of IEXHaskellSDKRequest
[rMethod] :: IEXHaskellSDKRequest req contentType res accept -> Method

-- | Endpoint of IEXHaskellSDKRequest
[rUrlPath] :: IEXHaskellSDKRequest req contentType res accept -> [ByteString]

-- | params of IEXHaskellSDKRequest
[rParams] :: IEXHaskellSDKRequest req contentType res accept -> Params

-- | types of auth methods
[rAuthTypes] :: IEXHaskellSDKRequest req contentType res accept -> [TypeRep]

-- | <a>rMethod</a> Lens
rMethodL :: Lens_' (IEXHaskellSDKRequest req contentType res accept) Method

-- | <a>rUrlPath</a> Lens
rUrlPathL :: Lens_' (IEXHaskellSDKRequest req contentType res accept) [ByteString]

-- | <a>rParams</a> Lens
rParamsL :: Lens_' (IEXHaskellSDKRequest req contentType res accept) Params

-- | <a>rParams</a> Lens
rAuthTypesL :: Lens_' (IEXHaskellSDKRequest req contentType res accept) [TypeRep]

-- | Designates the body parameter of a request
class HasBodyParam req param
setBodyParam :: forall contentType res accept. (HasBodyParam req param, Consumes req contentType, MimeRender contentType param) => IEXHaskellSDKRequest req contentType res accept -> param -> IEXHaskellSDKRequest req contentType res accept

-- | Designates the optional parameters of a request
class HasOptionalParam req param

-- | Apply an optional parameter to a request
applyOptionalParam :: HasOptionalParam req param => IEXHaskellSDKRequest req contentType res accept -> param -> IEXHaskellSDKRequest req contentType res accept

-- | infix operator / alias for <tt>addOptionalParam</tt>
(-&-) :: HasOptionalParam req param => IEXHaskellSDKRequest req contentType res accept -> param -> IEXHaskellSDKRequest req contentType res accept
infixl 2 -&-

-- | Request Params
data Params
Params :: Query -> RequestHeaders -> ParamBody -> Params
[paramsQuery] :: Params -> Query
[paramsHeaders] :: Params -> RequestHeaders
[paramsBody] :: Params -> ParamBody

-- | <a>paramsQuery</a> Lens
paramsQueryL :: Lens_' Params Query

-- | <a>paramsHeaders</a> Lens
paramsHeadersL :: Lens_' Params RequestHeaders

-- | <a>paramsBody</a> Lens
paramsBodyL :: Lens_' Params ParamBody

-- | Request Body
data ParamBody
ParamBodyNone :: ParamBody
ParamBodyB :: ByteString -> ParamBody
ParamBodyBL :: ByteString -> ParamBody
ParamBodyFormUrlEncoded :: Form -> ParamBody
ParamBodyMultipartFormData :: [Part] -> ParamBody
_mkRequest :: Method -> [ByteString] -> IEXHaskellSDKRequest req contentType res accept
_mkParams :: Params
setHeader :: IEXHaskellSDKRequest req contentType res accept -> [Header] -> IEXHaskellSDKRequest req contentType res accept
removeHeader :: IEXHaskellSDKRequest req contentType res accept -> [HeaderName] -> IEXHaskellSDKRequest req contentType res accept
_setContentTypeHeader :: forall req contentType res accept. MimeType contentType => IEXHaskellSDKRequest req contentType res accept -> IEXHaskellSDKRequest req contentType res accept
_setAcceptHeader :: forall req contentType res accept. MimeType accept => IEXHaskellSDKRequest req contentType res accept -> IEXHaskellSDKRequest req contentType res accept
setQuery :: IEXHaskellSDKRequest req contentType res accept -> [QueryItem] -> IEXHaskellSDKRequest req contentType res accept
addForm :: IEXHaskellSDKRequest req contentType res accept -> Form -> IEXHaskellSDKRequest req contentType res accept
_addMultiFormPart :: IEXHaskellSDKRequest req contentType res accept -> Part -> IEXHaskellSDKRequest req contentType res accept
_setBodyBS :: IEXHaskellSDKRequest req contentType res accept -> ByteString -> IEXHaskellSDKRequest req contentType res accept
_setBodyLBS :: IEXHaskellSDKRequest req contentType res accept -> ByteString -> IEXHaskellSDKRequest req contentType res accept
_hasAuthType :: AuthMethod authMethod => IEXHaskellSDKRequest req contentType res accept -> Proxy authMethod -> IEXHaskellSDKRequest req contentType res accept
toPath :: ToHttpApiData a => a -> ByteString
toHeader :: ToHttpApiData a => (HeaderName, a) -> [Header]
toForm :: ToHttpApiData v => (ByteString, v) -> Form
toQuery :: ToHttpApiData a => (ByteString, Maybe a) -> [QueryItem]

-- | Determines the format of the array if type array is used.
data CollectionFormat

-- | CSV format for multiple parameters.
CommaSeparated :: CollectionFormat

-- | Also called <a>SSV</a>
SpaceSeparated :: CollectionFormat

-- | Also called <a>TSV</a>
TabSeparated :: CollectionFormat

-- | `value1|value2|value2`
PipeSeparated :: CollectionFormat

-- | Using multiple GET parameters, e.g. `foo=bar&amp;foo=baz`. This is
--   valid only for parameters in "query" (<a>Query</a>) or "formData"
--   (<a>Form</a>)
MultiParamArray :: CollectionFormat
toHeaderColl :: ToHttpApiData a => CollectionFormat -> (HeaderName, [a]) -> [Header]
toFormColl :: ToHttpApiData v => CollectionFormat -> (ByteString, [v]) -> Form
toQueryColl :: ToHttpApiData a => CollectionFormat -> (ByteString, Maybe [a]) -> Query
_toColl :: Traversable f => CollectionFormat -> (f a -> [(b, ByteString)]) -> f [a] -> [(b, ByteString)]
_toCollA :: (Traversable f, Traversable t, Alternative t) => CollectionFormat -> (f (t a) -> [(b, t ByteString)]) -> f (t [a]) -> [(b, t ByteString)]
_toCollA' :: (Monoid c, Traversable f, Traversable t, Alternative t) => CollectionFormat -> (f (t a) -> [(b, t c)]) -> (Char -> c) -> f (t [a]) -> [(b, t c)]

-- | Provides a method to apply auth methods to requests
class Typeable a => AuthMethod a
applyAuthMethod :: AuthMethod a => IEXHaskellSDKConfig -> a -> IEXHaskellSDKRequest req contentType res accept -> IO (IEXHaskellSDKRequest req contentType res accept)

-- | An existential wrapper for any AuthMethod
data AnyAuthMethod
AnyAuthMethod :: a -> AnyAuthMethod

-- | indicates exceptions related to AuthMethods
data AuthMethodException
AuthMethodException :: String -> AuthMethodException

-- | apply all matching AuthMethods in config to request
_applyAuthMethods :: IEXHaskellSDKRequest req contentType res accept -> IEXHaskellSDKConfig -> IO (IEXHaskellSDKRequest req contentType res accept)

-- | Removes Null fields. (OpenAPI-Specification 2.0 does not allow Null in
--   JSON)
_omitNulls :: [(Text, Value)] -> Value

-- | Encodes fields using WH.toQueryParam
_toFormItem :: (ToHttpApiData a, Functor f) => t -> f a -> f (t, [Text])

-- | Collapse (Just "") to Nothing
_emptyToNothing :: Maybe String -> Maybe String

-- | Collapse (Just mempty) to Nothing
_memptyToNothing :: (Monoid a, Eq a) => Maybe a -> Maybe a
newtype DateTime
DateTime :: UTCTime -> DateTime
[unDateTime] :: DateTime -> UTCTime

-- | <pre>
--   _parseISO8601
--   </pre>
_readDateTime :: (MonadFail m, Alternative m) => String -> m DateTime

-- | <pre>
--   TI.formatISO8601Millis
--   </pre>
_showDateTime :: (t ~ UTCTime, FormatTime t) => t -> String

-- | parse an ISO8601 date-time string
_parseISO8601 :: (ParseTime t, MonadFail m, Alternative m) => String -> m t
newtype Date
Date :: Day -> Date
[unDate] :: Date -> Day

-- | <pre>
--   TI.parseTimeM True TI.defaultTimeLocale "%Y-%m-%d"
--   </pre>
_readDate :: MonadFail m => String -> m Date

-- | <pre>
--   TI.formatTime TI.defaultTimeLocale "%Y-%m-%d"
--   </pre>
_showDate :: FormatTime t => t -> String

-- | base64 encoded characters
newtype ByteArray
ByteArray :: ByteString -> ByteArray
[unByteArray] :: ByteArray -> ByteString

-- | read base64 encoded characters
_readByteArray :: MonadFail m => Text -> m ByteArray

-- | show base64 encoded characters
_showByteArray :: ByteArray -> Text

-- | any sequence of octets
newtype Binary
Binary :: ByteString -> Binary
[unBinary] :: Binary -> ByteString
_readBinaryBase64 :: MonadFail m => Text -> m Binary
_showBinaryBase64 :: Binary -> Text
type Lens_' s a = Lens_ s s a a
type Lens_ s t a b = forall (f :: * -> *). Functor f => (a -> f b) -> s -> f t
instance Control.DeepSeq.NFData IEXHaskellSDK.Core.Binary
instance GHC.Classes.Ord IEXHaskellSDK.Core.Binary
instance Data.Data.Data IEXHaskellSDK.Core.Binary
instance GHC.Classes.Eq IEXHaskellSDK.Core.Binary
instance Control.DeepSeq.NFData IEXHaskellSDK.Core.ByteArray
instance GHC.Classes.Ord IEXHaskellSDK.Core.ByteArray
instance Data.Data.Data IEXHaskellSDK.Core.ByteArray
instance GHC.Classes.Eq IEXHaskellSDK.Core.ByteArray
instance Control.DeepSeq.NFData IEXHaskellSDK.Core.Date
instance GHC.Arr.Ix IEXHaskellSDK.Core.Date
instance GHC.Classes.Ord IEXHaskellSDK.Core.Date
instance Data.Data.Data IEXHaskellSDK.Core.Date
instance GHC.Classes.Eq IEXHaskellSDK.Core.Date
instance GHC.Enum.Enum IEXHaskellSDK.Core.Date
instance Control.DeepSeq.NFData IEXHaskellSDK.Core.DateTime
instance GHC.Classes.Ord IEXHaskellSDK.Core.DateTime
instance Data.Data.Data IEXHaskellSDK.Core.DateTime
instance GHC.Classes.Eq IEXHaskellSDK.Core.DateTime
instance GHC.Show.Show IEXHaskellSDK.Core.AuthMethodException
instance GHC.Show.Show (IEXHaskellSDK.Core.IEXHaskellSDKRequest req contentType res accept)
instance GHC.Show.Show IEXHaskellSDK.Core.Params
instance GHC.Show.Show IEXHaskellSDK.Core.ParamBody
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Core.Binary
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Core.Binary
instance Web.Internal.HttpApiData.FromHttpApiData IEXHaskellSDK.Core.Binary
instance Web.Internal.HttpApiData.ToHttpApiData IEXHaskellSDK.Core.Binary
instance GHC.Show.Show IEXHaskellSDK.Core.Binary
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData IEXHaskellSDK.Core.Binary
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Core.ByteArray
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Core.ByteArray
instance Web.Internal.HttpApiData.FromHttpApiData IEXHaskellSDK.Core.ByteArray
instance Web.Internal.HttpApiData.ToHttpApiData IEXHaskellSDK.Core.ByteArray
instance GHC.Show.Show IEXHaskellSDK.Core.ByteArray
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData IEXHaskellSDK.Core.ByteArray
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Core.Date
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Core.Date
instance Web.Internal.HttpApiData.FromHttpApiData IEXHaskellSDK.Core.Date
instance Web.Internal.HttpApiData.ToHttpApiData IEXHaskellSDK.Core.Date
instance GHC.Show.Show IEXHaskellSDK.Core.Date
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData IEXHaskellSDK.Core.Date
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Core.DateTime
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Core.DateTime
instance Web.Internal.HttpApiData.FromHttpApiData IEXHaskellSDK.Core.DateTime
instance Web.Internal.HttpApiData.ToHttpApiData IEXHaskellSDK.Core.DateTime
instance GHC.Show.Show IEXHaskellSDK.Core.DateTime
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData IEXHaskellSDK.Core.DateTime
instance GHC.Exception.Type.Exception IEXHaskellSDK.Core.AuthMethodException
instance GHC.Show.Show IEXHaskellSDK.Core.IEXHaskellSDKConfig
instance IEXHaskellSDK.Core.AuthMethod IEXHaskellSDK.Core.AnyAuthMethod


module IEXHaskellSDK.Client

-- | send a request returning the raw http response
dispatchLbs :: (Produces req accept, MimeType contentType) => Manager -> IEXHaskellSDKConfig -> IEXHaskellSDKRequest req contentType res accept -> IO (Response ByteString)

-- | pair of decoded http body and http response
data MimeResult res
MimeResult :: Either MimeError res -> Response ByteString -> MimeResult res

-- | decoded http body
[mimeResult] :: MimeResult res -> Either MimeError res

-- | http response
[mimeResultResponse] :: MimeResult res -> Response ByteString

-- | pair of unrender/parser error and http response
data MimeError
MimeError :: String -> Response ByteString -> MimeError

-- | unrender/parser error
[mimeError] :: MimeError -> String

-- | http response
[mimeErrorResponse] :: MimeError -> Response ByteString

-- | send a request returning the <a>MimeResult</a>
dispatchMime :: forall req contentType res accept. (Produces req accept, MimeUnrender accept res, MimeType contentType) => Manager -> IEXHaskellSDKConfig -> IEXHaskellSDKRequest req contentType res accept -> IO (MimeResult res)

-- | like <a>dispatchMime</a>, but only returns the decoded http body
dispatchMime' :: (Produces req accept, MimeUnrender accept res, MimeType contentType) => Manager -> IEXHaskellSDKConfig -> IEXHaskellSDKRequest req contentType res accept -> IO (Either MimeError res)

-- | like <tt>dispatchReqLbs</tt>, but does not validate the operation is a
--   <tt>Producer</tt> of the "accept" <a>MimeType</a>. (Useful if the
--   server's response is undocumented)
dispatchLbsUnsafe :: (MimeType accept, MimeType contentType) => Manager -> IEXHaskellSDKConfig -> IEXHaskellSDKRequest req contentType res accept -> IO (Response ByteString)

-- | dispatch an InitRequest
dispatchInitUnsafe :: Manager -> IEXHaskellSDKConfig -> InitRequest req contentType res accept -> IO (Response ByteString)

-- | wraps an http-client <tt>Request</tt> with request/response type
--   parameters
newtype InitRequest req contentType res accept
InitRequest :: Request -> InitRequest req contentType res accept
[unInitRequest] :: InitRequest req contentType res accept -> Request

-- | Build an http-client <tt>Request</tt> record from the supplied config
--   and request
_toInitRequest :: (MimeType accept, MimeType contentType) => IEXHaskellSDKConfig -> IEXHaskellSDKRequest req contentType res accept -> IO (InitRequest req contentType res accept)

-- | modify the underlying Request
modifyInitRequest :: InitRequest req contentType res accept -> (Request -> Request) -> InitRequest req contentType res accept

-- | modify the underlying Request (monadic)
modifyInitRequestM :: Monad m => InitRequest req contentType res accept -> (Request -> m Request) -> m (InitRequest req contentType res accept)

-- | Run a block using the configured logger instance
runConfigLog :: MonadIO m => IEXHaskellSDKConfig -> LogExec m

-- | Run a block using the configured logger instance (logs exceptions)
runConfigLogWithExceptions :: (MonadCatch m, MonadIO m) => Text -> IEXHaskellSDKConfig -> LogExec m
instance GHC.Show.Show (IEXHaskellSDK.Client.InitRequest req contentType res accept)
instance Data.Traversable.Traversable IEXHaskellSDK.Client.MimeResult
instance Data.Foldable.Foldable IEXHaskellSDK.Client.MimeResult
instance GHC.Base.Functor IEXHaskellSDK.Client.MimeResult
instance GHC.Show.Show res => GHC.Show.Show (IEXHaskellSDK.Client.MimeResult res)
instance GHC.Show.Show IEXHaskellSDK.Client.MimeError
instance GHC.Classes.Eq IEXHaskellSDK.Client.MimeError


module IEXHaskellSDK.Model
newtype ChangeFromClose
ChangeFromClose :: Bool -> ChangeFromClose
[unChangeFromClose] :: ChangeFromClose -> Bool
newtype ChartInterval
ChartInterval :: Int -> ChartInterval
[unChartInterval] :: ChartInterval -> Int
newtype ChartLast
ChartLast :: Int -> ChartLast
[unChartLast] :: ChartLast -> Int
newtype ChartReset
ChartReset :: Bool -> ChartReset
[unChartReset] :: ChartReset -> Bool
newtype ChartSimplify
ChartSimplify :: Bool -> ChartSimplify
[unChartSimplify] :: ChartSimplify -> Bool
newtype CollectionName
CollectionName :: Sector -> CollectionName
[unCollectionName] :: CollectionName -> Sector
newtype CollectionName2
CollectionName2 :: ModelList -> CollectionName2
[unCollectionName2] :: CollectionName2 -> ModelList
newtype DisplayPercent
DisplayPercent :: Bool -> DisplayPercent
[unDisplayPercent] :: DisplayPercent -> Bool
newtype Format
Format :: E'Format -> Format
[unFormat] :: Format -> E'Format
newtype Format2
Format2 :: E'Format2 -> Format2
[unFormat2] :: Format2 -> E'Format2
newtype Last
Last :: Int -> Last
[unLast] :: Last -> Int
newtype ListType
ListType :: E'ListType -> ListType
[unListType] :: ListType -> E'ListType
newtype ParamDate
ParamDate :: Text -> ParamDate
[unParamDate] :: ParamDate -> Text
newtype ParamDateInt
ParamDateInt :: Int -> ParamDateInt
[unParamDateInt] :: ParamDateInt -> Int
newtype Period
Period :: E'Period -> Period
[unPeriod] :: Period -> E'Period
newtype Range
Range :: Int -> Range
[unRange] :: Range -> Int
newtype Range2
Range2 :: E'Range2 -> Range2
[unRange2] :: Range2 -> E'Range2
newtype Symbol
Symbol :: Text -> Symbol
[unSymbol] :: Symbol -> Text
newtype Symbols
Symbols :: [Text] -> Symbols
[unSymbols] :: Symbols -> [Text]
newtype SymbolsText
SymbolsText :: Text -> SymbolsText
[unSymbolsText] :: SymbolsText -> Text
newtype Token
Token :: Text -> Token
[unToken] :: Token -> Text
newtype Types
Types :: [E'Inner] -> Types
[unTypes] :: Types -> [E'Inner]

-- | Article
data Article
Article :: !Maybe DateTime -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> Article

-- | "datetime"
[articleDatetime] :: Article -> !Maybe DateTime

-- | "headline"
[articleHeadline] :: Article -> !Maybe Text

-- | "source" - Source of the news article. Make sure to always attribute
--   the source
[articleSource] :: Article -> !Maybe Text

-- | "url"
[articleUrl] :: Article -> !Maybe Text

-- | "summary"
[articleSummary] :: Article -> !Maybe Text

-- | "related" - Comma-delimited list of tickers associated with this news
--   article. Not all tickers are available on the API. Make sure to check
--   against available `ref-data`
[articleRelated] :: Article -> !Maybe Text

-- | "image" - URL of associated news image
[articleImage] :: Article -> !Maybe Text

-- | Construct a value of type <a>Article</a> (by applying it's required
--   fields, if any)
mkArticle :: Article

-- | Auction
data Auction
Auction :: !Maybe E'AuctionType -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Text -> !Maybe Double -> Auction

-- | "auctionType" - refers to the auction type
[auctionAuctionType] :: Auction -> !Maybe E'AuctionType

-- | "pairedShares" - refers to the number of shares paired at the
--   `referencePrice` using order on the auction book
[auctionPairedShares] :: Auction -> !Maybe Double

-- | "imbalanceShares" - refers to the number of unpaired shares at the
--   `referencePrice` using orders on the auction book
[auctionImbalanceShares] :: Auction -> !Maybe Double

-- | "referencePrice" - refers to the clearing price at or within the
--   reference price range using order on the auction book
[auctionReferencePrice] :: Auction -> !Maybe Double

-- | "indicativePrice" - refers to the clearing price using eligible
--   auction orders
[auctionIndicativePrice] :: Auction -> !Maybe Double

-- | "auctionBookPrice" - refers to the clearing price using orders on the
--   auction book
[auctionAuctionBookPrice] :: Auction -> !Maybe Double

-- | "collarReferencePrice" - Refers to the reference price used for the
--   auction collar, if any
[auctionCollarReferencePrice] :: Auction -> !Maybe Double

-- | "lowerCollarPrice" - Refers to the lower threshold price of the
--   auction collar, if any
[auctionLowerCollarPrice] :: Auction -> !Maybe Double

-- | "upperCollarPrice" - Refers to the upper threshold price of the
--   auction collar, if any
[auctionUpperCollarPrice] :: Auction -> !Maybe Double

-- | "extensionNumber" - refers to the number of extensions an auction has
--   received
[auctionExtensionNumber] :: Auction -> !Maybe Double

-- | "startTime" - refers to the projected time of the auction match
[auctionStartTime] :: Auction -> !Maybe Text

-- | "lastUpdate" - refers to the timestamp of the auction information
[auctionLastUpdate] :: Auction -> !Maybe Double

-- | Construct a value of type <a>Auction</a> (by applying it's required
--   fields, if any)
mkAuction :: Auction

-- | Chart1d
data Chart1d
Chart1d :: !Maybe Text -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe [Double] -> Chart1d

-- | "minute"
[chart1dMinute] :: Chart1d -> !Maybe Text

-- | "marketAverage" - 15 minute delayed
[chart1dMarketAverage] :: Chart1d -> !Maybe Double

-- | "marketNotional" - 15 minute delayed
[chart1dMarketNotional] :: Chart1d -> !Maybe Double

-- | "marketNumberOfTrades" - 15 minute delayed
[chart1dMarketNumberOfTrades] :: Chart1d -> !Maybe Double

-- | "marketOpen" - 15 minute delayed
[chart1dMarketOpen] :: Chart1d -> !Maybe Double

-- | "marketClose" - 15 minute delayed
[chart1dMarketClose] :: Chart1d -> !Maybe Double

-- | "marketHigh" - 15 minute delayed
[chart1dMarketHigh] :: Chart1d -> !Maybe Double

-- | "marketLow" - 15 minute delayed
[chart1dMarketLow] :: Chart1d -> !Maybe Double

-- | "marketVolume" - 15 minute delayed
[chart1dMarketVolume] :: Chart1d -> !Maybe Double

-- | "marketChangeOverTime" - Percent change of each interval relative to
--   first value. 15 minute delayed
[chart1dMarketChangeOverTime] :: Chart1d -> !Maybe Double

-- | "average"
[chart1dAverage] :: Chart1d -> !Maybe Double

-- | "notional"
[chart1dNotional] :: Chart1d -> !Maybe Double

-- | "numberOfTrades"
[chart1dNumberOfTrades] :: Chart1d -> !Maybe Double

-- | "simplifyFactor" - Only available when chartSimplify is true. The
--   first element is the original number of points. Second element is how
--   many remain after simplification.
[chart1dSimplifyFactor] :: Chart1d -> !Maybe [Double]

-- | Construct a value of type <a>Chart1d</a> (by applying it's required
--   fields, if any)
mkChart1d :: Chart1d

-- | ChartAll
data ChartAll
ChartAll :: !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Text -> !Maybe Double -> !Maybe Text -> !Maybe Double -> !Maybe Double -> ChartAll

-- | "high" - is available on all charts.
[chartAllHigh] :: ChartAll -> !Maybe Double

-- | "low" - is available on all charts.
[chartAllLow] :: ChartAll -> !Maybe Double

-- | "volume" - is available on all charts.
[chartAllVolume] :: ChartAll -> !Maybe Double

-- | "label" - is available on all charts. Percent change of each interval
--   relative to first value. Useful for comparing multiple stocks.
[chartAllLabel] :: ChartAll -> !Maybe Text

-- | "changeOverTime" - is available on all charts.
[chartAllChangeOverTime] :: ChartAll -> !Maybe Double

-- | "date" - is available on all charts.
[chartAllDate] :: ChartAll -> !Maybe Text

-- | "open" - is available on all charts.
[chartAllOpen] :: ChartAll -> !Maybe Double

-- | "close" - is available on all charts.
[chartAllClose] :: ChartAll -> !Maybe Double

-- | Construct a value of type <a>ChartAll</a> (by applying it's required
--   fields, if any)
mkChartAll :: ChartAll

-- | ChartNot1d
data ChartNot1d
ChartNot1d :: !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> ChartNot1d

-- | "unadjustedVolume"
[chartNot1dUnadjustedVolume] :: ChartNot1d -> !Maybe Double

-- | "change"
[chartNot1dChange] :: ChartNot1d -> !Maybe Double

-- | "changePercent"
[chartNot1dChangePercent] :: ChartNot1d -> !Maybe Double

-- | "vwap"
[chartNot1dVwap] :: ChartNot1d -> !Maybe Double

-- | Construct a value of type <a>ChartNot1d</a> (by applying it's required
--   fields, if any)
mkChartNot1d :: ChartNot1d

-- | CorporateAction
data CorporateAction
CorporateAction :: !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> CorporateAction

-- | <a>RecordID</a>
[corporateActionRecordId] :: CorporateAction -> !Maybe Text

-- | <a>DailyListTimestamp</a>
[corporateActionDailyListTimestamp] :: CorporateAction -> !Maybe Text

-- | <a>EffectiveDate</a>
[corporateActionEffectiveDate] :: CorporateAction -> !Maybe Text

-- | <a>IssueEvent</a>
[corporateActionIssueEvent] :: CorporateAction -> !Maybe Text

-- | <a>CurrentSymbolinINETSymbology</a>
[corporateActionCurrentSymbolinInetSymbology] :: CorporateAction -> !Maybe Text

-- | <a>CurrentSymbolinCQSSymbology</a>
[corporateActionCurrentSymbolinCqsSymbology] :: CorporateAction -> !Maybe Text

-- | <a>CurrentSymbolinCMSSymbology</a>
[corporateActionCurrentSymbolinCmsSymbology] :: CorporateAction -> !Maybe Text

-- | <a>NewSymbolinINETSymbology</a>
[corporateActionNewSymbolinInetSymbology] :: CorporateAction -> !Maybe Text

-- | <a>NewSymbolinCQSSymbology</a>
[corporateActionNewSymbolinCqsSymbology] :: CorporateAction -> !Maybe Text

-- | <a>NewSymbolinCMSSymbology</a>
[corporateActionNewSymbolinCmsSymbology] :: CorporateAction -> !Maybe Text

-- | <a>CurrentSecurityName</a>
[corporateActionCurrentSecurityName] :: CorporateAction -> !Maybe Text

-- | <a>NewSecurityName</a>
[corporateActionNewSecurityName] :: CorporateAction -> !Maybe Text

-- | <a>CurrentCompanyName</a>
[corporateActionCurrentCompanyName] :: CorporateAction -> !Maybe Text

-- | <a>NewCompanyName</a>
[corporateActionNewCompanyName] :: CorporateAction -> !Maybe Text

-- | <a>CurrentListingCenter</a>
[corporateActionCurrentListingCenter] :: CorporateAction -> !Maybe Text

-- | <a>NewListingCenter</a>
[corporateActionNewListingCenter] :: CorporateAction -> !Maybe Text

-- | <a>DelistingReason</a>
[corporateActionDelistingReason] :: CorporateAction -> !Maybe Text

-- | <a>CurrentRoundLotSize</a>
[corporateActionCurrentRoundLotSize] :: CorporateAction -> !Maybe Text

-- | <a>NewRoundLotSize</a>
[corporateActionNewRoundLotSize] :: CorporateAction -> !Maybe Text

-- | <a>CurrentLULDTierIndicator</a>
[corporateActionCurrentLuldTierIndicator] :: CorporateAction -> !Maybe Text

-- | <a>NewLULDTierIndicator</a>
[corporateActionNewLuldTierIndicator] :: CorporateAction -> !Maybe Text

-- | <a>ExpirationDate</a>
[corporateActionExpirationDate] :: CorporateAction -> !Maybe Text

-- | <a>SeparationDate</a>
[corporateActionSeparationDate] :: CorporateAction -> !Maybe Text

-- | <a>SettlementDate</a>
[corporateActionSettlementDate] :: CorporateAction -> !Maybe Text

-- | <a>MaturityDate</a>
[corporateActionMaturityDate] :: CorporateAction -> !Maybe Text

-- | <a>RedemptionDate</a>
[corporateActionRedemptionDate] :: CorporateAction -> !Maybe Text

-- | <a>CurrentFinancialStatus</a>
[corporateActionCurrentFinancialStatus] :: CorporateAction -> !Maybe Text

-- | <a>NewFinancialStatus</a>
[corporateActionNewFinancialStatus] :: CorporateAction -> !Maybe Text

-- | <a>WhenIssuedFlag</a>
[corporateActionWhenIssuedFlag] :: CorporateAction -> !Maybe Text

-- | <a>WhenDistributedFlag</a>
[corporateActionWhenDistributedFlag] :: CorporateAction -> !Maybe Text

-- | <a>IPOFlag</a>
[corporateActionIpoFlag] :: CorporateAction -> !Maybe Text

-- | <a>HistoryHold</a>
[corporateActionHistoryHold] :: CorporateAction -> !Maybe Text

-- | <a>NotesforEachEntry</a>
[corporateActionNotesforEachEntry] :: CorporateAction -> !Maybe Text

-- | <a>RecordUpdateTime</a>
[corporateActionRecordUpdateTime] :: CorporateAction -> !Maybe Text

-- | Construct a value of type <a>CorporateAction</a> (by applying it's
--   required fields, if any)
mkCorporateAction :: CorporateAction

-- | DividendCoreData
data DividendCoreData
DividendCoreData :: !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> DividendCoreData

-- | <a>RecordId</a>
[dividendCoreDataRecordId] :: DividendCoreData -> !Maybe Text

-- | <a>DailyListTimestamp</a>
[dividendCoreDataDailyListTimestamp] :: DividendCoreData -> !Maybe Text

-- | <a>SymbolinINETSymbology</a>
[dividendCoreDataSymbolinInetSymbology] :: DividendCoreData -> !Maybe Text

-- | <a>SymbolinCQSSymbology</a>
[dividendCoreDataSymbolinCqsSymbology] :: DividendCoreData -> !Maybe Text

-- | <a>SymbolyinCMSSymbology</a>
[dividendCoreDataSymbolyinCmsSymbology] :: DividendCoreData -> !Maybe Text

-- | <a>SecurityName</a>
[dividendCoreDataSecurityName] :: DividendCoreData -> !Maybe Text

-- | <a>CompanyName</a>
[dividendCoreDataCompanyName] :: DividendCoreData -> !Maybe Text

-- | <a>AmountDescription</a>
[dividendCoreDataAmountDescription] :: DividendCoreData -> !Maybe Text

-- | <a>PaymentFrequency</a>
[dividendCoreDataPaymentFrequency] :: DividendCoreData -> !Maybe Text

-- | <a>ExDate</a>
[dividendCoreDataExDate] :: DividendCoreData -> !Maybe Text

-- | <a>DividendTypeID</a>
[dividendCoreDataDividendTypeId] :: DividendCoreData -> !Maybe Text

-- | <a>StockAdjustmentFactor</a>
[dividendCoreDataStockAdjustmentFactor] :: DividendCoreData -> !Maybe Text

-- | <a>StockAmount</a>
[dividendCoreDataStockAmount] :: DividendCoreData -> !Maybe Text

-- | <a>CashAmount</a>
[dividendCoreDataCashAmount] :: DividendCoreData -> !Maybe Text

-- | <a>PostSplitShares</a>
[dividendCoreDataPostSplitShares] :: DividendCoreData -> !Maybe Text

-- | <a>PreSplitShares</a>
[dividendCoreDataPreSplitShares] :: DividendCoreData -> !Maybe Text

-- | <a>QualifiedDividend</a>
[dividendCoreDataQualifiedDividend] :: DividendCoreData -> !Maybe Text

-- | <a>ExercisePriceAmount</a>
[dividendCoreDataExercisePriceAmount] :: DividendCoreData -> !Maybe Text

-- | <a>ElectionorExpirationDate</a>
[dividendCoreDataElectionorExpirationDate] :: DividendCoreData -> !Maybe Text

-- | <a>GrossAmount</a>
[dividendCoreDataGrossAmount] :: DividendCoreData -> !Maybe Text

-- | <a>NetAmount</a>
[dividendCoreDataNetAmount] :: DividendCoreData -> !Maybe Text

-- | <a>BasisNotes</a>
[dividendCoreDataBasisNotes] :: DividendCoreData -> !Maybe Text

-- | <a>NotesforEachEntry</a>
[dividendCoreDataNotesforEachEntry] :: DividendCoreData -> !Maybe Text

-- | <a>RecordUpdateTime</a>
[dividendCoreDataRecordUpdateTime] :: DividendCoreData -> !Maybe Text

-- | Construct a value of type <a>DividendCoreData</a> (by applying it's
--   required fields, if any)
mkDividendCoreData :: DividendCoreData

-- | Earnings
data Earnings
Earnings :: !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Text -> !Maybe Double -> !Maybe Double -> !Maybe Date -> !Maybe Text -> !Maybe Date -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> Earnings

-- | "actualEPS" - Actual earnings per share for the period
[earningsActualEps] :: Earnings -> !Maybe Double

-- | "consensusEPS" - Consensus EPS estimate trend for the period
[earningsConsensusEps] :: Earnings -> !Maybe Double

-- | "estimatedEPS" - Earinings per share estimate for the period
[earningsEstimatedEps] :: Earnings -> !Maybe Double

-- | "announceTime" - Time of earnings announcement: * BTO = before open *
--   DMT = during trading * AMC = after close
[earningsAnnounceTime] :: Earnings -> !Maybe Text

-- | "numberOfEstimates" - Number of estimates for the period
[earningsNumberOfEstimates] :: Earnings -> !Maybe Double

-- | <a>EPSSurpriseDollar</a> - Dollar amount of EPS surprise for the
--   period
[earningsEpsSurpriseDollar] :: Earnings -> !Maybe Double

-- | <a>EPSReportDate</a> - Expected eariings report date `YYYY-MM-DD`
[earningsEpsReportDate] :: Earnings -> !Maybe Date

-- | "fiscalPeriod" - The fiscal quarter the earnings data applies to
--   `Qx60;
[earningsFiscalPeriod] :: Earnings -> !Maybe Text

-- | "fiscalEndDate" - Date representing the company fiscal quarter end
--   `YYYY-MM-DD`
[earningsFiscalEndDate] :: Earnings -> !Maybe Date

-- | "yearAgo" - Represents the EPS of the quarter a year ago
[earningsYearAgo] :: Earnings -> !Maybe Double

-- | "yearAgoChangePercent" - Represents the percent difference between the
--   quarter a year ago `actualEPS` and current period `actualEPS`.
[earningsYearAgoChangePercent] :: Earnings -> !Maybe Double

-- | "estimatedChangePercent" - Represents the percent difference between
--   the quarter a year ago `actualEPS` and current period `estimatedEPS`
[earningsEstimatedChangePercent] :: Earnings -> !Maybe Double

-- | "symbolId" - Represents the IEX id for the stock
[earningsSymbolId] :: Earnings -> !Maybe Double

-- | Construct a value of type <a>Earnings</a> (by applying it's required
--   fields, if any)
mkEarnings :: Earnings

-- | Financials
data Financials
Financials :: !Maybe Text -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Text -> Financials

-- | "reportDate"
[financialsReportDate] :: Financials -> !Maybe Text

-- | "grossProfit"
[financialsGrossProfit] :: Financials -> !Maybe Double

-- | "costOfRevenue"
[financialsCostOfRevenue] :: Financials -> !Maybe Double

-- | "operatingRevenue"
[financialsOperatingRevenue] :: Financials -> !Maybe Double

-- | "totalRevenue"
[financialsTotalRevenue] :: Financials -> !Maybe Double

-- | "operatingIncome"
[financialsOperatingIncome] :: Financials -> !Maybe Double

-- | "netIncome"
[financialsNetIncome] :: Financials -> !Maybe Double

-- | "researchAndDevelopment"
[financialsResearchAndDevelopment] :: Financials -> !Maybe Double

-- | "operatingExpense"
[financialsOperatingExpense] :: Financials -> !Maybe Double

-- | "currentAssets"
[financialsCurrentAssets] :: Financials -> !Maybe Double

-- | "totalAssets"
[financialsTotalAssets] :: Financials -> !Maybe Double

-- | "totalLiabilities"
[financialsTotalLiabilities] :: Financials -> !Maybe Double

-- | "currentCash"
[financialsCurrentCash] :: Financials -> !Maybe Double

-- | "currentDebt"
[financialsCurrentDebt] :: Financials -> !Maybe Double

-- | "totalCash"
[financialsTotalCash] :: Financials -> !Maybe Double

-- | "totalDebt"
[financialsTotalDebt] :: Financials -> !Maybe Double

-- | "shareholderEquity"
[financialsShareholderEquity] :: Financials -> !Maybe Double

-- | "cashChange"
[financialsCashChange] :: Financials -> !Maybe Double

-- | "cashFlow"
[financialsCashFlow] :: Financials -> !Maybe Double

-- | "operatingGainsLosses"
[financialsOperatingGainsLosses] :: Financials -> !Maybe Text

-- | Construct a value of type <a>Financials</a> (by applying it's required
--   fields, if any)
mkFinancials :: Financials

-- | DeepBookGetResponse
data DeepBookGetResponse
DeepBookGetResponse :: !Maybe [Order] -> !Maybe [Order] -> DeepBookGetResponse

-- | "bids"
[deepBookGetResponseBids] :: DeepBookGetResponse -> !Maybe [Order]

-- | "asks"
[deepBookGetResponseAsks] :: DeepBookGetResponse -> !Maybe [Order]

-- | Construct a value of type <a>DeepBookGetResponse</a> (by applying it's
--   required fields, if any)
mkDeepBookGetResponse :: DeepBookGetResponse

-- | DeepGetResponse
data DeepGetResponse
DeepGetResponse :: !Maybe Text -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe [Order] -> !Maybe [Order] -> !Maybe [SystemEvent] -> !Maybe DeepGetResponseTradingStatus -> !Maybe DeepGetResponseOpHaltStatus -> !Maybe DeepGetResponseSsrStatus -> !Maybe DeepGetResponseSecurityEvent -> !Maybe [Trade] -> !Maybe [DeepGetResponseTradeBreaks] -> !Maybe DeepGetResponseAuction -> DeepGetResponse

-- | "symbol"
[deepGetResponseSymbol] :: DeepGetResponse -> !Maybe Text

-- | "marketPercent"
[deepGetResponseMarketPercent] :: DeepGetResponse -> !Maybe Double

-- | "volume"
[deepGetResponseVolume] :: DeepGetResponse -> !Maybe Double

-- | "lastSalePrice"
[deepGetResponseLastSalePrice] :: DeepGetResponse -> !Maybe Double

-- | "lastSaleSize"
[deepGetResponseLastSaleSize] :: DeepGetResponse -> !Maybe Double

-- | "lastSaleTime"
[deepGetResponseLastSaleTime] :: DeepGetResponse -> !Maybe Double

-- | "lastUpdated"
[deepGetResponseLastUpdated] :: DeepGetResponse -> !Maybe Double

-- | "bids"
[deepGetResponseBids] :: DeepGetResponse -> !Maybe [Order]

-- | "asks"
[deepGetResponseAsks] :: DeepGetResponse -> !Maybe [Order]

-- | "systemEvent"
[deepGetResponseSystemEvent] :: DeepGetResponse -> !Maybe [SystemEvent]

-- | "tradingStatus"
[deepGetResponseTradingStatus] :: DeepGetResponse -> !Maybe DeepGetResponseTradingStatus

-- | "opHaltStatus"
[deepGetResponseOpHaltStatus] :: DeepGetResponse -> !Maybe DeepGetResponseOpHaltStatus

-- | "ssrStatus"
[deepGetResponseSsrStatus] :: DeepGetResponse -> !Maybe DeepGetResponseSsrStatus

-- | "securityEvent"
[deepGetResponseSecurityEvent] :: DeepGetResponse -> !Maybe DeepGetResponseSecurityEvent

-- | "trades"
[deepGetResponseTrades] :: DeepGetResponse -> !Maybe [Trade]

-- | "tradeBreaks"
[deepGetResponseTradeBreaks] :: DeepGetResponse -> !Maybe [DeepGetResponseTradeBreaks]

-- | "auction"
[deepGetResponseAuction] :: DeepGetResponse -> !Maybe DeepGetResponseAuction

-- | Construct a value of type <a>DeepGetResponse</a> (by applying it's
--   required fields, if any)
mkDeepGetResponse :: DeepGetResponse

-- | StatsHistoricalDailyGetResponse
data StatsHistoricalDailyGetResponse
StatsHistoricalDailyGetResponse :: !Maybe Text -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> StatsHistoricalDailyGetResponse

-- | "date"
[statsHistoricalDailyGetResponseDate] :: StatsHistoricalDailyGetResponse -> !Maybe Text

-- | "volume"
[statsHistoricalDailyGetResponseVolume] :: StatsHistoricalDailyGetResponse -> !Maybe Double

-- | "routedVolume"
[statsHistoricalDailyGetResponseRoutedVolume] :: StatsHistoricalDailyGetResponse -> !Maybe Double

-- | "marketShare"
[statsHistoricalDailyGetResponseMarketShare] :: StatsHistoricalDailyGetResponse -> !Maybe Double

-- | "isHalfday"
[statsHistoricalDailyGetResponseIsHalfday] :: StatsHistoricalDailyGetResponse -> !Maybe Double

-- | "litVolume"
[statsHistoricalDailyGetResponseLitVolume] :: StatsHistoricalDailyGetResponse -> !Maybe Double

-- | Construct a value of type <a>StatsHistoricalDailyGetResponse</a> (by
--   applying it's required fields, if any)
mkStatsHistoricalDailyGetResponse :: StatsHistoricalDailyGetResponse

-- | StatsIntradayGetResponse * volume refers to single counted shares
--   matched from executions on IEX * symbolsTraded refers to number of
--   symbols traded on IEX * routedVolume refers to executions received
--   from orders routed to away trading centers * notional refers to sum of
--   matched volume times execution price of those trades * marketShare
--   refers to IEX's percentage of total US Equity market volume *
--   lastUpdated refers to the last update time of the data in
--   muilliseconds since midnight Jan 1, 1970
data StatsIntradayGetResponse
StatsIntradayGetResponse :: !Maybe TimestampedValue -> !Maybe TimestampedValue -> !Maybe TimestampedValue -> !Maybe TimestampedValue -> StatsIntradayGetResponse

-- | "volume"
[statsIntradayGetResponseVolume] :: StatsIntradayGetResponse -> !Maybe TimestampedValue

-- | "symbolsTraded"
[statsIntradayGetResponseSymbolsTraded] :: StatsIntradayGetResponse -> !Maybe TimestampedValue

-- | "routedVolume"
[statsIntradayGetResponseRoutedVolume] :: StatsIntradayGetResponse -> !Maybe TimestampedValue

-- | "notional"
[statsIntradayGetResponseNotional] :: StatsIntradayGetResponse -> !Maybe TimestampedValue

-- | Construct a value of type <a>StatsIntradayGetResponse</a> (by applying
--   it's required fields, if any)
mkStatsIntradayGetResponse :: StatsIntradayGetResponse

-- | StatsRecentGetResponse
data StatsRecentGetResponse
StatsRecentGetResponse :: !Maybe Date -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Bool -> !Maybe Double -> StatsRecentGetResponse

-- | "date" - Refers to the trading day
[statsRecentGetResponseDate] :: StatsRecentGetResponse -> !Maybe Date

-- | "volume" - refers to executions received from order routed to away
--   trading centers
[statsRecentGetResponseVolume] :: StatsRecentGetResponse -> !Maybe Double

-- | "routedVolume" - refers to single counted shares matched from
--   executions on IEX
[statsRecentGetResponseRoutedVolume] :: StatsRecentGetResponse -> !Maybe Double

-- | "marketShare" - refers to IEX's percentage of total US Equity market
--   volume
[statsRecentGetResponseMarketShare] :: StatsRecentGetResponse -> !Maybe Double

-- | "isHalfday" - will be true if the trading day is a half day
[statsRecentGetResponseIsHalfday] :: StatsRecentGetResponse -> !Maybe Bool

-- | "litVolume" - refers to the number of lit shares traded on IEX
--   (single-counted)
[statsRecentGetResponseLitVolume] :: StatsRecentGetResponse -> !Maybe Double

-- | Construct a value of type <a>StatsRecentGetResponse</a> (by applying
--   it's required fields, if any)
mkStatsRecentGetResponse :: StatsRecentGetResponse

-- | StatsRecordsGetResponse * volume refers to single counted shares
--   matched from executions on IEX * symbolsTraded refers to number of
--   symbols traded on IEX * routedVolume refers to executions received
--   from an order routed to away trading centers * notional refers to sum
--   of matched volume times execution price of those trades
data StatsRecordsGetResponse
StatsRecordsGetResponse :: !Maybe RecordedValue -> !Maybe RecordedValue -> !Maybe RecordedValue -> !Maybe RecordedValue -> StatsRecordsGetResponse

-- | "volume"
[statsRecordsGetResponseVolume] :: StatsRecordsGetResponse -> !Maybe RecordedValue

-- | "symbolsTraded"
[statsRecordsGetResponseSymbolsTraded] :: StatsRecordsGetResponse -> !Maybe RecordedValue

-- | "routedVolume"
[statsRecordsGetResponseRoutedVolume] :: StatsRecordsGetResponse -> !Maybe RecordedValue

-- | "notional"
[statsRecordsGetResponseNotional] :: StatsRecordsGetResponse -> !Maybe RecordedValue

-- | Construct a value of type <a>StatsRecordsGetResponse</a> (by applying
--   it's required fields, if any)
mkStatsRecordsGetResponse :: StatsRecordsGetResponse

-- | MarketGetResponse
data MarketGetResponse
MarketGetResponse :: !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> MarketGetResponse

-- | "mic" - refers to the Market Identifier Code (MIC)
[marketGetResponseMic] :: MarketGetResponse -> !Maybe Text

-- | "tapeId" - refers to the tape id of the venue
[marketGetResponseTapeId] :: MarketGetResponse -> !Maybe Text

-- | "venueName" - refers to name of the venue defined by IEX
[marketGetResponseVenueName] :: MarketGetResponse -> !Maybe Text

-- | "volume" - refers to the amount of traded shares reported by the venue
[marketGetResponseVolume] :: MarketGetResponse -> !Maybe Double

-- | "tapeA" - refers to the amount of Tape A traded shares reported by the
--   venue
[marketGetResponseTapeA] :: MarketGetResponse -> !Maybe Double

-- | "tapeB" - refers to the amount of Tape B traded shares reported by the
--   venue
[marketGetResponseTapeB] :: MarketGetResponse -> !Maybe Double

-- | "tapeC" - refers to the amount of Tape C traded shares reported by the
--   venue
[marketGetResponseTapeC] :: MarketGetResponse -> !Maybe Double

-- | "marketPercent" - refers to the venue's percentage of shares traded in
--   the market
[marketGetResponseMarketPercent] :: MarketGetResponse -> !Maybe Double

-- | "lastUpdated" - refers to the last update time of the data in
--   milliseconds since midnight Jan 1, 1970
[marketGetResponseLastUpdated] :: MarketGetResponse -> !Maybe Double

-- | Construct a value of type <a>MarketGetResponse</a> (by applying it's
--   required fields, if any)
mkMarketGetResponse :: MarketGetResponse

-- | RefDataSymbolsGetResponse
data RefDataSymbolsGetResponse
RefDataSymbolsGetResponse :: !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe E'Type -> !Maybe Double -> RefDataSymbolsGetResponse

-- | "symbol" - Refers to the symbol represented in Nasdaq Integrated
--   symbology (INET)
[refDataSymbolsGetResponseSymbol] :: RefDataSymbolsGetResponse -> !Maybe Text

-- | "name" - REturns the name of the company or security
[refDataSymbolsGetResponseName] :: RefDataSymbolsGetResponse -> !Maybe Text

-- | "date" - refers to the date the symbol reference data was generated
[refDataSymbolsGetResponseDate] :: RefDataSymbolsGetResponse -> !Maybe Text

-- | "isEnabled" - will be true if the symbol is enabled for trading on IEX
[refDataSymbolsGetResponseIsEnabled] :: RefDataSymbolsGetResponse -> !Maybe Text

-- | "type" - refers to the common issue type: * ad = ADR * re = REIT * ce
--   = Closed end fund * si = Secondary issue * lp = Limited partnerships *
--   cs = Common stock * et = ETF
[refDataSymbolsGetResponseType] :: RefDataSymbolsGetResponse -> !Maybe E'Type

-- | "iexId" - unique ID applied by IEX to track securities through symbol
--   changes
[refDataSymbolsGetResponseIexId] :: RefDataSymbolsGetResponse -> !Maybe Double

-- | Construct a value of type <a>RefDataSymbolsGetResponse</a> (by
--   applying it's required fields, if any)
mkRefDataSymbolsGetResponse :: RefDataSymbolsGetResponse

-- | StockSymbolBookGetResponse
data StockSymbolBookGetResponse
StockSymbolBookGetResponse :: !Maybe Quote -> !Maybe [Order] -> !Maybe [Order] -> !Maybe [Trade] -> !Maybe SystemEvent -> StockSymbolBookGetResponse

-- | "quote"
[stockSymbolBookGetResponseQuote] :: StockSymbolBookGetResponse -> !Maybe Quote

-- | "bids"
[stockSymbolBookGetResponseBids] :: StockSymbolBookGetResponse -> !Maybe [Order]

-- | "asks"
[stockSymbolBookGetResponseAsks] :: StockSymbolBookGetResponse -> !Maybe [Order]

-- | "trades"
[stockSymbolBookGetResponseTrades] :: StockSymbolBookGetResponse -> !Maybe [Trade]

-- | "systemEvent"
[stockSymbolBookGetResponseSystemEvent] :: StockSymbolBookGetResponse -> !Maybe SystemEvent

-- | Construct a value of type <a>StockSymbolBookGetResponse</a> (by
--   applying it's required fields, if any)
mkStockSymbolBookGetResponse :: StockSymbolBookGetResponse

-- | StockSymbolChartDynamicGetResponse
data StockSymbolChartDynamicGetResponse
StockSymbolChartDynamicGetResponse :: !Maybe E'Range -> !Maybe [ChartAll] -> StockSymbolChartDynamicGetResponse

-- | "range"
[stockSymbolChartDynamicGetResponseRange] :: StockSymbolChartDynamicGetResponse -> !Maybe E'Range

-- | "data"
[stockSymbolChartDynamicGetResponseData] :: StockSymbolChartDynamicGetResponse -> !Maybe [ChartAll]

-- | Construct a value of type <a>StockSymbolChartDynamicGetResponse</a>
--   (by applying it's required fields, if any)
mkStockSymbolChartDynamicGetResponse :: StockSymbolChartDynamicGetResponse

-- | StockSymbolCompanyGetResponse
data StockSymbolCompanyGetResponse
StockSymbolCompanyGetResponse :: !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe E'IssueType -> !Maybe Text -> !Maybe [Sector] -> StockSymbolCompanyGetResponse

-- | "symbol"
[stockSymbolCompanyGetResponseSymbol] :: StockSymbolCompanyGetResponse -> !Maybe Text

-- | "companyName"
[stockSymbolCompanyGetResponseCompanyName] :: StockSymbolCompanyGetResponse -> !Maybe Text

-- | "exchange"
[stockSymbolCompanyGetResponseExchange] :: StockSymbolCompanyGetResponse -> !Maybe Text

-- | "industry"
[stockSymbolCompanyGetResponseIndustry] :: StockSymbolCompanyGetResponse -> !Maybe Text

-- | "website"
[stockSymbolCompanyGetResponseWebsite] :: StockSymbolCompanyGetResponse -> !Maybe Text

-- | "description"
[stockSymbolCompanyGetResponseDescription] :: StockSymbolCompanyGetResponse -> !Maybe Text

-- | <a>CEO</a>
[stockSymbolCompanyGetResponseCeo] :: StockSymbolCompanyGetResponse -> !Maybe Text

-- | "issueType" - refers to the common issue type of the stock \n * ad -
--   American Depository Receipt (ADRs) * re - Real Estate Investment Trust
--   (REITs) * ce - Closed end fund (Stock and Bond Fund) * si - Secondary
--   issue * lp - Limited Partnerships * cs - Common Stock * et - Exchange
--   Traded Fund (ETF) * (blank) - Not available, i.e. Warrant, Note, or
--   (non-filing) Closed Ended Funds
[stockSymbolCompanyGetResponseIssueType] :: StockSymbolCompanyGetResponse -> !Maybe E'IssueType

-- | "sector"
[stockSymbolCompanyGetResponseSector] :: StockSymbolCompanyGetResponse -> !Maybe Text

-- | "tags" - an array of strings used to classify the company
[stockSymbolCompanyGetResponseTags] :: StockSymbolCompanyGetResponse -> !Maybe [Sector]

-- | Construct a value of type <a>StockSymbolCompanyGetResponse</a> (by
--   applying it's required fields, if any)
mkStockSymbolCompanyGetResponse :: StockSymbolCompanyGetResponse

-- | StockSymbolDelayedQuoteGetResponse
data StockSymbolDelayedQuoteGetResponse
StockSymbolDelayedQuoteGetResponse :: !Maybe Text -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> StockSymbolDelayedQuoteGetResponse

-- | "symbol"
[stockSymbolDelayedQuoteGetResponseSymbol] :: StockSymbolDelayedQuoteGetResponse -> !Maybe Text

-- | "delayedPrice"
[stockSymbolDelayedQuoteGetResponseDelayedPrice] :: StockSymbolDelayedQuoteGetResponse -> !Maybe Double

-- | "delayedSize"
[stockSymbolDelayedQuoteGetResponseDelayedSize] :: StockSymbolDelayedQuoteGetResponse -> !Maybe Double

-- | "delayedPriceTime"
[stockSymbolDelayedQuoteGetResponseDelayedPriceTime] :: StockSymbolDelayedQuoteGetResponse -> !Maybe Double

-- | "processedTime"
[stockSymbolDelayedQuoteGetResponseProcessedTime] :: StockSymbolDelayedQuoteGetResponse -> !Maybe Double

-- | Construct a value of type <a>StockSymbolDelayedQuoteGetResponse</a>
--   (by applying it's required fields, if any)
mkStockSymbolDelayedQuoteGetResponse :: StockSymbolDelayedQuoteGetResponse

-- | DeepGetResponseAuction
data DeepGetResponseAuction
DeepGetResponseAuction :: !Maybe Text -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Text -> !Maybe Double -> DeepGetResponseAuction

-- | "auctionType"
[deepGetResponseAuctionAuctionType] :: DeepGetResponseAuction -> !Maybe Text

-- | "pairedShares"
[deepGetResponseAuctionPairedShares] :: DeepGetResponseAuction -> !Maybe Double

-- | "imbalanceShares"
[deepGetResponseAuctionImbalanceShares] :: DeepGetResponseAuction -> !Maybe Double

-- | "referencePrice"
[deepGetResponseAuctionReferencePrice] :: DeepGetResponseAuction -> !Maybe Double

-- | "indicativePrice"
[deepGetResponseAuctionIndicativePrice] :: DeepGetResponseAuction -> !Maybe Double

-- | "auctionBookProce"
[deepGetResponseAuctionAuctionBookProce] :: DeepGetResponseAuction -> !Maybe Double

-- | "collarReferencePrice"
[deepGetResponseAuctionCollarReferencePrice] :: DeepGetResponseAuction -> !Maybe Double

-- | "lowerCollarPrice"
[deepGetResponseAuctionLowerCollarPrice] :: DeepGetResponseAuction -> !Maybe Double

-- | "upperCollarPrice"
[deepGetResponseAuctionUpperCollarPrice] :: DeepGetResponseAuction -> !Maybe Double

-- | "extensionNumber"
[deepGetResponseAuctionExtensionNumber] :: DeepGetResponseAuction -> !Maybe Double

-- | "startTime"
[deepGetResponseAuctionStartTime] :: DeepGetResponseAuction -> !Maybe Text

-- | "lastUpdate"
[deepGetResponseAuctionLastUpdate] :: DeepGetResponseAuction -> !Maybe Double

-- | Construct a value of type <a>DeepGetResponseAuction</a> (by applying
--   it's required fields, if any)
mkDeepGetResponseAuction :: DeepGetResponseAuction

-- | DeepGetResponseOpHaltStatus
data DeepGetResponseOpHaltStatus
DeepGetResponseOpHaltStatus :: !Maybe Bool -> !Maybe Double -> DeepGetResponseOpHaltStatus

-- | "isHalted"
[deepGetResponseOpHaltStatusIsHalted] :: DeepGetResponseOpHaltStatus -> !Maybe Bool

-- | "timestamp"
[deepGetResponseOpHaltStatusTimestamp] :: DeepGetResponseOpHaltStatus -> !Maybe Double

-- | Construct a value of type <a>DeepGetResponseOpHaltStatus</a> (by
--   applying it's required fields, if any)
mkDeepGetResponseOpHaltStatus :: DeepGetResponseOpHaltStatus

-- | DeepGetResponseSecurityEvent
data DeepGetResponseSecurityEvent
DeepGetResponseSecurityEvent :: !Maybe Text -> !Maybe Double -> DeepGetResponseSecurityEvent

-- | "securityEvent"
[deepGetResponseSecurityEventSecurityEvent] :: DeepGetResponseSecurityEvent -> !Maybe Text

-- | "timestamp"
[deepGetResponseSecurityEventTimestamp] :: DeepGetResponseSecurityEvent -> !Maybe Double

-- | Construct a value of type <a>DeepGetResponseSecurityEvent</a> (by
--   applying it's required fields, if any)
mkDeepGetResponseSecurityEvent :: DeepGetResponseSecurityEvent

-- | DeepGetResponseSsrStatus
data DeepGetResponseSsrStatus
DeepGetResponseSsrStatus :: !Maybe Bool -> !Maybe Text -> !Maybe Double -> DeepGetResponseSsrStatus

-- | "isSSR"
[deepGetResponseSsrStatusIsSsr] :: DeepGetResponseSsrStatus -> !Maybe Bool

-- | "detail"
[deepGetResponseSsrStatusDetail] :: DeepGetResponseSsrStatus -> !Maybe Text

-- | "timestamp"
[deepGetResponseSsrStatusTimestamp] :: DeepGetResponseSsrStatus -> !Maybe Double

-- | Construct a value of type <a>DeepGetResponseSsrStatus</a> (by applying
--   it's required fields, if any)
mkDeepGetResponseSsrStatus :: DeepGetResponseSsrStatus

-- | DeepGetResponseTradeBreaks
data DeepGetResponseTradeBreaks
DeepGetResponseTradeBreaks :: !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Bool -> !Maybe Bool -> !Maybe Bool -> !Maybe Bool -> !Maybe Bool -> !Maybe Double -> DeepGetResponseTradeBreaks

-- | "price"
[deepGetResponseTradeBreaksPrice] :: DeepGetResponseTradeBreaks -> !Maybe Double

-- | "size"
[deepGetResponseTradeBreaksSize] :: DeepGetResponseTradeBreaks -> !Maybe Double

-- | "tradeId"
[deepGetResponseTradeBreaksTradeId] :: DeepGetResponseTradeBreaks -> !Maybe Double

-- | "isISO"
[deepGetResponseTradeBreaksIsIso] :: DeepGetResponseTradeBreaks -> !Maybe Bool

-- | "isOddLot"
[deepGetResponseTradeBreaksIsOddLot] :: DeepGetResponseTradeBreaks -> !Maybe Bool

-- | "isOutsideRegularHours"
[deepGetResponseTradeBreaksIsOutsideRegularHours] :: DeepGetResponseTradeBreaks -> !Maybe Bool

-- | "isSinglePriceCross"
[deepGetResponseTradeBreaksIsSinglePriceCross] :: DeepGetResponseTradeBreaks -> !Maybe Bool

-- | "isTradeThroughExempt"
[deepGetResponseTradeBreaksIsTradeThroughExempt] :: DeepGetResponseTradeBreaks -> !Maybe Bool

-- | "timestamp"
[deepGetResponseTradeBreaksTimestamp] :: DeepGetResponseTradeBreaks -> !Maybe Double

-- | Construct a value of type <a>DeepGetResponseTradeBreaks</a> (by
--   applying it's required fields, if any)
mkDeepGetResponseTradeBreaks :: DeepGetResponseTradeBreaks

-- | DeepGetResponseTradingStatus
data DeepGetResponseTradingStatus
DeepGetResponseTradingStatus :: !Maybe Text -> !Maybe Text -> !Maybe Double -> DeepGetResponseTradingStatus

-- | "status"
[deepGetResponseTradingStatusStatus] :: DeepGetResponseTradingStatus -> !Maybe Text

-- | "reason"
[deepGetResponseTradingStatusReason] :: DeepGetResponseTradingStatus -> !Maybe Text

-- | "timestamp"
[deepGetResponseTradingStatusTimestamp] :: DeepGetResponseTradingStatus -> !Maybe Double

-- | Construct a value of type <a>DeepGetResponseTradingStatus</a> (by
--   applying it's required fields, if any)
mkDeepGetResponseTradingStatus :: DeepGetResponseTradingStatus

-- | HistGetResponse
data HistGetResponse
HistGetResponse :: !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> HistGetResponse

-- | "link"
[histGetResponseLink] :: HistGetResponse -> !Maybe Text

-- | "date"
[histGetResponseDate] :: HistGetResponse -> !Maybe Text

-- | "feed"
[histGetResponseFeed] :: HistGetResponse -> !Maybe Text

-- | "version"
[histGetResponseVersion] :: HistGetResponse -> !Maybe Text

-- | "protocol"
[histGetResponseProtocol] :: HistGetResponse -> !Maybe Text

-- | "size"
[histGetResponseSize] :: HistGetResponse -> !Maybe Text

-- | Construct a value of type <a>HistGetResponse</a> (by applying it's
--   required fields, if any)
mkHistGetResponse :: HistGetResponse

-- | StockSymbolDividendsRangeGetResponse
data StockSymbolDividendsRangeGetResponse
StockSymbolDividendsRangeGetResponse :: !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Double -> !Maybe E'Flag -> !Maybe E'Type2 -> !Maybe E'Qualified -> !Maybe Double -> StockSymbolDividendsRangeGetResponse

-- | "exDate" - Refers to the dividend ex-date
[stockSymbolDividendsRangeGetResponseExDate] :: StockSymbolDividendsRangeGetResponse -> !Maybe Text

-- | "paymentDate" - Refers to the payment date
[stockSymbolDividendsRangeGetResponsePaymentDate] :: StockSymbolDividendsRangeGetResponse -> !Maybe Text

-- | "recordDate" - Refers to the dividend record date
[stockSymbolDividendsRangeGetResponseRecordDate] :: StockSymbolDividendsRangeGetResponse -> !Maybe Text

-- | "declaredDate" - Refers to the dividend declaration date
[stockSymbolDividendsRangeGetResponseDeclaredDate] :: StockSymbolDividendsRangeGetResponse -> !Maybe Text

-- | "amount" - Refers to the payment amount
[stockSymbolDividendsRangeGetResponseAmount] :: StockSymbolDividendsRangeGetResponse -> !Maybe Double

-- | "flag" - Refers to the dividend flag: * LI = Liquidation, instrument
--   liquidates * PR = Proceeds of a sale of rights or shares * RE =
--   Redemption of rights * AC = Accrued dividend * AR = Payment in arrears
--   * AD = Additional payment * EX = Extra payment * SP = Special dividend
--   * YE = Year end * UR = Unknown recordDate * SU = Regular divdend is
--   suspended
[stockSymbolDividendsRangeGetResponseFlag] :: StockSymbolDividendsRangeGetResponse -> !Maybe E'Flag

-- | "type" - Refers to the dividend payment type
[stockSymbolDividendsRangeGetResponseType] :: StockSymbolDividendsRangeGetResponse -> !Maybe E'Type2

-- | "qualified" - Refers to the dividend income type: * P = Partially
--   qualified income * Q = Qualified income * N = Unqualified income *
--   null = N/A or unknown
[stockSymbolDividendsRangeGetResponseQualified] :: StockSymbolDividendsRangeGetResponse -> !Maybe E'Qualified

-- | "indicated" - Refers to the indicated rate of the dividend
[stockSymbolDividendsRangeGetResponseIndicated] :: StockSymbolDividendsRangeGetResponse -> !Maybe Double

-- | Construct a value of type <a>StockSymbolDividendsRangeGetResponse</a>
--   (by applying it's required fields, if any)
mkStockSymbolDividendsRangeGetResponse :: StockSymbolDividendsRangeGetResponse

-- | StockSymbolEarningsGetResponse
data StockSymbolEarningsGetResponse
StockSymbolEarningsGetResponse :: !Maybe Text -> !Maybe [Earnings] -> StockSymbolEarningsGetResponse

-- | "symbol"
[stockSymbolEarningsGetResponseSymbol] :: StockSymbolEarningsGetResponse -> !Maybe Text

-- | "earnings"
[stockSymbolEarningsGetResponseEarnings] :: StockSymbolEarningsGetResponse -> !Maybe [Earnings]

-- | Construct a value of type <a>StockSymbolEarningsGetResponse</a> (by
--   applying it's required fields, if any)
mkStockSymbolEarningsGetResponse :: StockSymbolEarningsGetResponse

-- | StockSymbolEffectiveSpreadGetResponse
data StockSymbolEffectiveSpreadGetResponse
StockSymbolEffectiveSpreadGetResponse :: !Maybe Double -> !Maybe Text -> !Maybe Text -> !Maybe Double -> !Maybe Double -> !Maybe Double -> StockSymbolEffectiveSpreadGetResponse

-- | "volume" - Refers to the eligible shares used for calculating
--   `effectiveSpread` and `priceImprovement`
[stockSymbolEffectiveSpreadGetResponseVolume] :: StockSymbolEffectiveSpreadGetResponse -> !Maybe Double

-- | "venue" - refers to the Market Identifier Code (MIC)
[stockSymbolEffectiveSpreadGetResponseVenue] :: StockSymbolEffectiveSpreadGetResponse -> !Maybe Text

-- | "venueName" - Refers to a readable version of the venue defined by IEX
[stockSymbolEffectiveSpreadGetResponseVenueName] :: StockSymbolEffectiveSpreadGetResponse -> !Maybe Text

-- | "effectiveSpread" - is designed to measure marketable orders executed
--   in relation to the market center's quoted spread and takes into
--   account hidden and midpoint liquidity available at each market center
--   in dollars
[stockSymbolEffectiveSpreadGetResponseEffectiveSpread] :: StockSymbolEffectiveSpreadGetResponse -> !Maybe Double

-- | "effectiveQuoted" - a ratio calculated by dividing a market center's
--   effective spread by the NBBO quoted spread
[stockSymbolEffectiveSpreadGetResponseEffectiveQuoted] :: StockSymbolEffectiveSpreadGetResponse -> !Maybe Double

-- | "priceImprovement" - the average amount of price improvement in
--   dollars per eligible share executed
[stockSymbolEffectiveSpreadGetResponsePriceImprovement] :: StockSymbolEffectiveSpreadGetResponse -> !Maybe Double

-- | Construct a value of type <a>StockSymbolEffectiveSpreadGetResponse</a>
--   (by applying it's required fields, if any)
mkStockSymbolEffectiveSpreadGetResponse :: StockSymbolEffectiveSpreadGetResponse

-- | StockSymbolFinancialsGetResponse
data StockSymbolFinancialsGetResponse
StockSymbolFinancialsGetResponse :: !Maybe Text -> !Maybe [Financials] -> StockSymbolFinancialsGetResponse

-- | "symbol"
[stockSymbolFinancialsGetResponseSymbol] :: StockSymbolFinancialsGetResponse -> !Maybe Text

-- | "financials"
[stockSymbolFinancialsGetResponseFinancials] :: StockSymbolFinancialsGetResponse -> !Maybe [Financials]

-- | Construct a value of type <a>StockSymbolFinancialsGetResponse</a> (by
--   applying it's required fields, if any)
mkStockSymbolFinancialsGetResponse :: StockSymbolFinancialsGetResponse

-- | StockMarketThresholdSecuritiesGetResponse
data StockMarketThresholdSecuritiesGetResponse
StockMarketThresholdSecuritiesGetResponse :: !Maybe Double -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> StockMarketThresholdSecuritiesGetResponse

-- | <a>TradeDate</a>
[stockMarketThresholdSecuritiesGetResponseTradeDate] :: StockMarketThresholdSecuritiesGetResponse -> !Maybe Double

-- | <a>SymbolinINETSymbology</a>
[stockMarketThresholdSecuritiesGetResponseSymbolinInetSymbology] :: StockMarketThresholdSecuritiesGetResponse -> !Maybe Text

-- | <a>SymbolinCQSSymbology</a>
[stockMarketThresholdSecuritiesGetResponseSymbolinCqsSymbology] :: StockMarketThresholdSecuritiesGetResponse -> !Maybe Text

-- | <a>SymbolinCMSSymbology</a>
[stockMarketThresholdSecuritiesGetResponseSymbolinCmsSymbology] :: StockMarketThresholdSecuritiesGetResponse -> !Maybe Text

-- | <a>SecurityName</a>
[stockMarketThresholdSecuritiesGetResponseSecurityName] :: StockMarketThresholdSecuritiesGetResponse -> !Maybe Text

-- | Construct a value of type
--   <a>StockMarketThresholdSecuritiesGetResponse</a> (by applying it's
--   required fields, if any)
mkStockMarketThresholdSecuritiesGetResponse :: StockMarketThresholdSecuritiesGetResponse

-- | StockMarketUpcomingIposGetResponse
data StockMarketUpcomingIposGetResponse
StockMarketUpcomingIposGetResponse :: !Maybe [IpoRawData] -> !Maybe [IpoViewData] -> StockMarketUpcomingIposGetResponse

-- | "rawData"
[stockMarketUpcomingIposGetResponseRawData] :: StockMarketUpcomingIposGetResponse -> !Maybe [IpoRawData]

-- | "viewData"
[stockMarketUpcomingIposGetResponseViewData] :: StockMarketUpcomingIposGetResponse -> !Maybe [IpoViewData]

-- | Construct a value of type <a>StockMarketUpcomingIposGetResponse</a>
--   (by applying it's required fields, if any)
mkStockMarketUpcomingIposGetResponse :: StockMarketUpcomingIposGetResponse

-- | StockSymbolStatsGetResponse
data StockSymbolStatsGetResponse
StockSymbolStatsGetResponse :: !Maybe Text -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Text -> !Maybe Double -> !Maybe Double -> !Maybe Text -> !Maybe Double -> !Maybe Text -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Text -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> StockSymbolStatsGetResponse

-- | "companyName"
[stockSymbolStatsGetResponseCompanyName] :: StockSymbolStatsGetResponse -> !Maybe Text

-- | "marketcap" - Is not calculated in real time
[stockSymbolStatsGetResponseMarketcap] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "beta"
[stockSymbolStatsGetResponseBeta] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "week52high"
[inlineResponse20026Week52high] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "week52low"
[inlineResponse20026Week52low] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "week52change"
[inlineResponse20026Week52change] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "shortInterest"
[stockSymbolStatsGetResponseShortInterest] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "shortDate"
[stockSymbolStatsGetResponseShortDate] :: StockSymbolStatsGetResponse -> !Maybe Text

-- | "dividendRate"
[stockSymbolStatsGetResponseDividendRate] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "dividendYield"
[stockSymbolStatsGetResponseDividendYield] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "exDividendDate"
[stockSymbolStatsGetResponseExDividendDate] :: StockSymbolStatsGetResponse -> !Maybe Text

-- | "latestEPS" - Most recent quarter
[stockSymbolStatsGetResponseLatestEps] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "latestEPSDate"
[stockSymbolStatsGetResponseLatestEpsDate] :: StockSymbolStatsGetResponse -> !Maybe Text

-- | "sharesOutstanding"
[stockSymbolStatsGetResponseSharesOutstanding] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "float"
[stockSymbolStatsGetResponseFloat] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "returnOnEquity" - Trailing twelve months
[stockSymbolStatsGetResponseReturnOnEquity] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "consensusEPS" - Most recent quarter
[stockSymbolStatsGetResponseConsensusEps] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "numberOfEstimates" - Most recent quarter
[stockSymbolStatsGetResponseNumberOfEstimates] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "symbol"
[stockSymbolStatsGetResponseSymbol] :: StockSymbolStatsGetResponse -> !Maybe Text

-- | <a>EBITDA</a> - Trailing twelve months
[stockSymbolStatsGetResponseEbitda] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "revenue" - Trailing twelve months
[stockSymbolStatsGetResponseRevenue] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "grossProfit" - Trailing twelve months
[stockSymbolStatsGetResponseGrossProfit] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "cash" - Refers to total cash. Trailing twelve months
[stockSymbolStatsGetResponseCash] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "debt" - Refers to total debt. Trailing twelve months
[stockSymbolStatsGetResponseDebt] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "ttmEPS" - Trailing twelve months
[stockSymbolStatsGetResponseTtmEps] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "revenuePerShare" - Trailing twelve months
[stockSymbolStatsGetResponseRevenuePerShare] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "revenuePerEmployee" - Trailing twelve months
[stockSymbolStatsGetResponseRevenuePerEmployee] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "peRatioHigh"
[stockSymbolStatsGetResponsePeRatioHigh] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "peRatioLow"
[stockSymbolStatsGetResponsePeRatioLow] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | <a>EPSSurpriseDollar</a> - Refers to the difference between actual EPS
--   and consensus EPS in dollars
[stockSymbolStatsGetResponseEpsSurpriseDollar] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | <a>EPSSurprisePercent</a> - Refers to the percent difference between
--   actual EPS and consensus EPS
[stockSymbolStatsGetResponseEpsSurprisePercent] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "returnOnAssets" - Trailing twelve months
[stockSymbolStatsGetResponseReturnOnAssets] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "returnOnCapital" - Trailing twelve months
[stockSymbolStatsGetResponseReturnOnCapital] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "profitMargin"
[stockSymbolStatsGetResponseProfitMargin] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "priceToSales"
[stockSymbolStatsGetResponsePriceToSales] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "priceToBook"
[stockSymbolStatsGetResponsePriceToBook] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "day200MovingAvg"
[inlineResponse20026Day200MovingAvg] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "day50MovingAvg"
[inlineResponse20026Day50MovingAvg] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "institutionPercent" - Represents top 15 institutions
[stockSymbolStatsGetResponseInstitutionPercent] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "insiderPercent"
[stockSymbolStatsGetResponseInsiderPercent] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "shortRatio"
[stockSymbolStatsGetResponseShortRatio] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "year5ChangePercent"
[inlineResponse20026Year5ChangePercent] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "year2ChangePercent"
[inlineResponse20026Year2ChangePercent] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "year1ChangePercent"
[inlineResponse20026Year1ChangePercent] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "ytdChangePercent"
[stockSymbolStatsGetResponseYtdChangePercent] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "month6ChangePercent"
[inlineResponse20026Month6ChangePercent] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "month3ChangePercent"
[inlineResponse20026Month3ChangePercent] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "month1ChangePercent"
[inlineResponse20026Month1ChangePercent] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | "day5ChangePercent"
[inlineResponse20026Day5ChangePercent] :: StockSymbolStatsGetResponse -> !Maybe Double

-- | Construct a value of type <a>StockSymbolStatsGetResponse</a> (by
--   applying it's required fields, if any)
mkStockSymbolStatsGetResponse :: StockSymbolStatsGetResponse

-- | StockSymbolLargestTradesGetResponse
data StockSymbolLargestTradesGetResponse
StockSymbolLargestTradesGetResponse :: !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Text -> !Maybe Text -> !Maybe Text -> StockSymbolLargestTradesGetResponse

-- | "price" - Refers to the price of the trade
[stockSymbolLargestTradesGetResponsePrice] :: StockSymbolLargestTradesGetResponse -> !Maybe Double

-- | "size" - Refers to the number of shares of the trade
[stockSymbolLargestTradesGetResponseSize] :: StockSymbolLargestTradesGetResponse -> !Maybe Double

-- | "time" - Refers to the time of the trade
[stockSymbolLargestTradesGetResponseTime] :: StockSymbolLargestTradesGetResponse -> !Maybe Double

-- | "timeLabel" - formatted time string as HH:MM:SS
[stockSymbolLargestTradesGetResponseTimeLabel] :: StockSymbolLargestTradesGetResponse -> !Maybe Text

-- | "venue" - Refers to the venue where the trade occured. `None` refers
--   to a. TRF (off-exchange) trade
[stockSymbolLargestTradesGetResponseVenue] :: StockSymbolLargestTradesGetResponse -> !Maybe Text

-- | "venueName" - formatted venue name where the trade occured
[stockSymbolLargestTradesGetResponseVenueName] :: StockSymbolLargestTradesGetResponse -> !Maybe Text

-- | Construct a value of type <a>StockSymbolLargestTradesGetResponse</a>
--   (by applying it's required fields, if any)
mkStockSymbolLargestTradesGetResponse :: StockSymbolLargestTradesGetResponse

-- | StockSymbolLogoGetResponse
data StockSymbolLogoGetResponse
StockSymbolLogoGetResponse :: !Maybe Text -> StockSymbolLogoGetResponse

-- | "url"
[stockSymbolLogoGetResponseUrl] :: StockSymbolLogoGetResponse -> !Maybe Text

-- | Construct a value of type <a>StockSymbolLogoGetResponse</a> (by
--   applying it's required fields, if any)
mkStockSymbolLogoGetResponse :: StockSymbolLogoGetResponse

-- | StockSymbolRelevantGetResponse
data StockSymbolRelevantGetResponse
StockSymbolRelevantGetResponse :: !Maybe Bool -> !Maybe [Text] -> StockSymbolRelevantGetResponse

-- | "peers"
[stockSymbolRelevantGetResponsePeers] :: StockSymbolRelevantGetResponse -> !Maybe Bool

-- | "symbols"
[stockSymbolRelevantGetResponseSymbols] :: StockSymbolRelevantGetResponse -> !Maybe [Text]

-- | Construct a value of type <a>StockSymbolRelevantGetResponse</a> (by
--   applying it's required fields, if any)
mkStockSymbolRelevantGetResponse :: StockSymbolRelevantGetResponse

-- | TopsLastGetResponse
data TopsLastGetResponse
TopsLastGetResponse :: !Maybe Text -> !Maybe Double -> !Maybe Double -> !Maybe Double -> TopsLastGetResponse

-- | "symbol" - Refers to the stock ticker
[topsLastGetResponseSymbol] :: TopsLastGetResponse -> !Maybe Text

-- | "price" - Refers to last sale price of the stock on IEX. Refer to the
--   attribution section.
[topsLastGetResponsePrice] :: TopsLastGetResponse -> !Maybe Double

-- | "size" - Refers to the last sale size of the stock on IEX.
[topsLastGetResponseSize] :: TopsLastGetResponse -> !Maybe Double

-- | "time" - Refers to last sale time in epoch time of the stock on IEX.
[topsLastGetResponseTime] :: TopsLastGetResponse -> !Maybe Double

-- | Construct a value of type <a>TopsLastGetResponse</a> (by applying it's
--   required fields, if any)
mkTopsLastGetResponse :: TopsLastGetResponse

-- | StockMarketSectorPerformanceGetResponse
data StockMarketSectorPerformanceGetResponse
StockMarketSectorPerformanceGetResponse :: !Maybe Text -> !Maybe Sector -> !Maybe Double -> !Maybe Double -> StockMarketSectorPerformanceGetResponse

-- | "type" - The type of performance data return. Should always be
--   `sector`.
[stockMarketSectorPerformanceGetResponseType] :: StockMarketSectorPerformanceGetResponse -> !Maybe Text

-- | "name"
[stockMarketSectorPerformanceGetResponseName] :: StockMarketSectorPerformanceGetResponse -> !Maybe Sector

-- | "performance" - Change percent of the sector for the trading day.
[stockMarketSectorPerformanceGetResponsePerformance] :: StockMarketSectorPerformanceGetResponse -> !Maybe Double

-- | "lastUpdated" - Last updated time of the performance metric
--   represented as millisecond epoch.
[stockMarketSectorPerformanceGetResponseLastUpdated] :: StockMarketSectorPerformanceGetResponse -> !Maybe Double

-- | Construct a value of type
--   <a>StockMarketSectorPerformanceGetResponse</a> (by applying it's
--   required fields, if any)
mkStockMarketSectorPerformanceGetResponse :: StockMarketSectorPerformanceGetResponse

-- | StocksSymbolSplitsRangeGetResponse
data StocksSymbolSplitsRangeGetResponse
StocksSymbolSplitsRangeGetResponse :: !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Double -> !Maybe Text -> !Maybe Text -> StocksSymbolSplitsRangeGetResponse

-- | "exDate" - Refers to the split ex-Date
[stocksSymbolSplitsRangeGetResponseExDate] :: StocksSymbolSplitsRangeGetResponse -> !Maybe Text

-- | "declaredDate" - Refers to the split declaration date
[stocksSymbolSplitsRangeGetResponseDeclaredDate] :: StocksSymbolSplitsRangeGetResponse -> !Maybe Text

-- | "recordDate" - Refers to the split record date
[stocksSymbolSplitsRangeGetResponseRecordDate] :: StocksSymbolSplitsRangeGetResponse -> !Maybe Text

-- | "paymentDate" - Refers to the split payment date
[stocksSymbolSplitsRangeGetResponsePaymentDate] :: StocksSymbolSplitsRangeGetResponse -> !Maybe Text

-- | "ratio" - Refers to the split ration. The split ration is an inverse
--   of the number of shares that a holder of the stock would have after
--   the split divided by the number of shares that the holder had before.
[stocksSymbolSplitsRangeGetResponseRatio] :: StocksSymbolSplitsRangeGetResponse -> !Maybe Double

-- | "toFactor" - To factor of the split. Used to calculate the split
--   `ratio` forfactor<i>tofactor = `ratio` (e.g. 1</i>2 = 0.5)
[stocksSymbolSplitsRangeGetResponseToFactor] :: StocksSymbolSplitsRangeGetResponse -> !Maybe Text

-- | "forFactor" - For factor of the split. Used to calculate the split
--   `ratio` forfactor<i>tofactor = `ratio` (e.g. 1</i>2 = 0.5)
[stocksSymbolSplitsRangeGetResponseForFactor] :: StocksSymbolSplitsRangeGetResponse -> !Maybe Text

-- | Construct a value of type <a>StocksSymbolSplitsRangeGetResponse</a>
--   (by applying it's required fields, if any)
mkStocksSymbolSplitsRangeGetResponse :: StocksSymbolSplitsRangeGetResponse

-- | StockMarketTodayEarningsGetResponse
data StockMarketTodayEarningsGetResponse
StockMarketTodayEarningsGetResponse :: !Maybe [TodayEarnings] -> !Maybe [TodayEarnings] -> StockMarketTodayEarningsGetResponse

-- | "bto"
[stockMarketTodayEarningsGetResponseBto] :: StockMarketTodayEarningsGetResponse -> !Maybe [TodayEarnings]

-- | "amc"
[stockMarketTodayEarningsGetResponseAmc] :: StockMarketTodayEarningsGetResponse -> !Maybe [TodayEarnings]

-- | Construct a value of type <a>StockMarketTodayEarningsGetResponse</a>
--   (by applying it's required fields, if any)
mkStockMarketTodayEarningsGetResponse :: StockMarketTodayEarningsGetResponse

-- | StockSymbolVolumeByVenueGetResponse
data StockSymbolVolumeByVenueGetResponse
StockSymbolVolumeByVenueGetResponse :: !Maybe Double -> !Maybe Text -> !Maybe Text -> !Maybe Date -> !Maybe Double -> !Maybe Double -> StockSymbolVolumeByVenueGetResponse

-- | "volume" - Refers to the current day, 15 minute delayed volume
[stockSymbolVolumeByVenueGetResponseVolume] :: StockSymbolVolumeByVenueGetResponse -> !Maybe Double

-- | "venue" - Refeers to the Market Identifier Code (MIC)
[stockSymbolVolumeByVenueGetResponseVenue] :: StockSymbolVolumeByVenueGetResponse -> !Maybe Text

-- | "venueName" - Refers to a readable version of the venue defined by IEX
[stockSymbolVolumeByVenueGetResponseVenueName] :: StockSymbolVolumeByVenueGetResponse -> !Maybe Text

-- | "date" - Refers to the date the data was last updated in the format
--   `YYYY-MM-DD`
[stockSymbolVolumeByVenueGetResponseDate] :: StockSymbolVolumeByVenueGetResponse -> !Maybe Date

-- | "marketPercent" - Refers tot the 15 minute delayed percent of total
--   stock volume traded by the venue
[stockSymbolVolumeByVenueGetResponseMarketPercent] :: StockSymbolVolumeByVenueGetResponse -> !Maybe Double

-- | "avgMarketPercent" - Refers to the 30 day average percent of total
--   stock volume traded by the venue
[stockSymbolVolumeByVenueGetResponseAvgMarketPercent] :: StockSymbolVolumeByVenueGetResponse -> !Maybe Double

-- | Construct a value of type <a>StockSymbolVolumeByVenueGetResponse</a>
--   (by applying it's required fields, if any)
mkStockSymbolVolumeByVenueGetResponse :: StockSymbolVolumeByVenueGetResponse

-- | DeepOfficialPriceGetResponse
data DeepOfficialPriceGetResponse
DeepOfficialPriceGetResponse :: !Maybe E'PriceType -> !Maybe Double -> !Maybe Double -> DeepOfficialPriceGetResponse

-- | "priceType"
[deepOfficialPriceGetResponsePriceType] :: DeepOfficialPriceGetResponse -> !Maybe E'PriceType

-- | "price"
[deepOfficialPriceGetResponsePrice] :: DeepOfficialPriceGetResponse -> !Maybe Double

-- | "timestamp"
[deepOfficialPriceGetResponseTimestamp] :: DeepOfficialPriceGetResponse -> !Maybe Double

-- | Construct a value of type <a>DeepOfficialPriceGetResponse</a> (by
--   applying it's required fields, if any)
mkDeepOfficialPriceGetResponse :: DeepOfficialPriceGetResponse

-- | DeepOpHaltStatusGetResponse
data DeepOpHaltStatusGetResponse
DeepOpHaltStatusGetResponse :: !Maybe Bool -> !Maybe Double -> DeepOpHaltStatusGetResponse

-- | "isHalted"
[deepOpHaltStatusGetResponseIsHalted] :: DeepOpHaltStatusGetResponse -> !Maybe Bool

-- | "timeStamp"
[deepOpHaltStatusGetResponseTimeStamp] :: DeepOpHaltStatusGetResponse -> !Maybe Double

-- | Construct a value of type <a>DeepOpHaltStatusGetResponse</a> (by
--   applying it's required fields, if any)
mkDeepOpHaltStatusGetResponse :: DeepOpHaltStatusGetResponse

-- | DeepSecurityEventGetResponse
data DeepSecurityEventGetResponse
DeepSecurityEventGetResponse :: !Maybe E'SecurityEvent -> !Maybe Double -> DeepSecurityEventGetResponse

-- | "securityEvent"
[deepSecurityEventGetResponseSecurityEvent] :: DeepSecurityEventGetResponse -> !Maybe E'SecurityEvent

-- | "timestamp"
[deepSecurityEventGetResponseTimestamp] :: DeepSecurityEventGetResponse -> !Maybe Double

-- | Construct a value of type <a>DeepSecurityEventGetResponse</a> (by
--   applying it's required fields, if any)
mkDeepSecurityEventGetResponse :: DeepSecurityEventGetResponse

-- | DeepSystemEventGetResponse
data DeepSystemEventGetResponse
DeepSystemEventGetResponse :: !Maybe SystemEvent -> !Maybe Double -> DeepSystemEventGetResponse

-- | "systemEvent"
[deepSystemEventGetResponseSystemEvent] :: DeepSystemEventGetResponse -> !Maybe SystemEvent

-- | "timestamp"
[deepSystemEventGetResponseTimestamp] :: DeepSystemEventGetResponse -> !Maybe Double

-- | Construct a value of type <a>DeepSystemEventGetResponse</a> (by
--   applying it's required fields, if any)
mkDeepSystemEventGetResponse :: DeepSystemEventGetResponse

-- | TopsGetResponse
data TopsGetResponse
TopsGetResponse :: !Maybe Text -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Sector -> !Maybe Text -> TopsGetResponse

-- | "symbol" - Refers to the stock ticker
[topsGetResponseSymbol] :: TopsGetResponse -> !Maybe Text

-- | "marketPercent"
[topsGetResponseMarketPercent] :: TopsGetResponse -> !Maybe Double

-- | "bidSize" - Refers to IEX's percentage of the market in the stock
[topsGetResponseBidSize] :: TopsGetResponse -> !Maybe Double

-- | "bidPrice" - Refers to the best bid price on IEX
[topsGetResponseBidPrice] :: TopsGetResponse -> !Maybe Double

-- | "askSize" - Refers to amount of shares on the ask on IEX
[topsGetResponseAskSize] :: TopsGetResponse -> !Maybe Double

-- | "askPrice" - Refers to the best ask price on IEX
[topsGetResponseAskPrice] :: TopsGetResponse -> !Maybe Double

-- | "volume" - Refers to shares traded in the stock on IEX
[topsGetResponseVolume] :: TopsGetResponse -> !Maybe Double

-- | "lastSalePrice" - Refers to last sale price of the stock on IEX. Refer
--   to the attribution section.
[topsGetResponseLastSalePrice] :: TopsGetResponse -> !Maybe Double

-- | "lastSaleSize" - Refers to last sale size of the stock on IEX
[topsGetResponseLastSaleSize] :: TopsGetResponse -> !Maybe Double

-- | "lastSaleTime" - Refers to last sale time in epoch time of the stock
--   on IEX.
[topsGetResponseLastSaleTime] :: TopsGetResponse -> !Maybe Double

-- | "lastUpdated" - Refers to the last update time of the data in
--   milliseconds since midnight Jan 1, 1970 or `-1`. If the value is `-1`,
--   IEX has not quoted the symbol in the trading day.
[topsGetResponseLastUpdated] :: TopsGetResponse -> !Maybe Double

-- | "sector"
[topsGetResponseSector] :: TopsGetResponse -> !Maybe Sector

-- | "securityType" - Refers to the common issue type.
[topsGetResponseSecurityType] :: TopsGetResponse -> !Maybe Text

-- | Construct a value of type <a>TopsGetResponse</a> (by applying it's
--   required fields, if any)
mkTopsGetResponse :: TopsGetResponse

-- | DeepTradingStatusGetResponse
data DeepTradingStatusGetResponse
DeepTradingStatusGetResponse :: !Maybe E'Status -> !Maybe E'Reason -> !Maybe Double -> DeepTradingStatusGetResponse

-- | "status" - * `H` Trading halted across all US equity markets * `O`
--   Trading halt released into an ORder Acceptance Period (IEX-listed
--   securities only) * `P` Trading paused and Order Acceptance Period on
--   IEX (IEX-listed securities only) * `T` Trading on IEX
[deepTradingStatusGetResponseStatus] :: DeepTradingStatusGetResponse -> !Maybe E'Status

-- | "reason" - Trading Halt Reasons * `T1` Halt News Pending * `IPO1`
--   IPO<i>New Issue Not Yet Trading * `IPOD` IPO</i>New Issue Deferred *
--   `MCB3` Market-Wide ircuit Breaker Level 3 - Breaked `NA` Reason Not
--   Available Order Acceptance Period Reasons * `T2` Halt News
--   Dissemination * `IPO2` IPO/New Issue Order Acceptance Period * `IPO3`
--   IPO Pre-Launch Period * `MCB1` Market-Wide Circuit Breaker Level 1 -
--   Breached * `MCB2` Market-Wide Circuit Breaker Level 2 - Breached
[deepTradingStatusGetResponseReason] :: DeepTradingStatusGetResponse -> !Maybe E'Reason

-- | "timestamp"
[deepTradingStatusGetResponseTimestamp] :: DeepTradingStatusGetResponse -> !Maybe Double

-- | Construct a value of type <a>DeepTradingStatusGetResponse</a> (by
--   applying it's required fields, if any)
mkDeepTradingStatusGetResponse :: DeepTradingStatusGetResponse

-- | IpoRawData
data IpoRawData
IpoRawData :: !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe [Text] -> !Maybe [Text] -> !Maybe [Text] -> !Maybe [Text] -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Double -> !Maybe Text -> !Maybe Text -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Text -> !Maybe Text -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Double -> !Maybe Double -> IpoRawData

-- | "symbol" - Refers to the IPO symbol
[ipoRawDataSymbol] :: IpoRawData -> !Maybe Text

-- | "companyName" - Refers to the name of the IPO company
[ipoRawDataCompanyName] :: IpoRawData -> !Maybe Text

-- | "expectedDate" - Refers to the date the IPO is expected to start
--   trading
[ipoRawDataExpectedDate] :: IpoRawData -> !Maybe Text

-- | "leadUnderwriters" - refers to the list of investment banks leading
--   the IPO
[ipoRawDataLeadUnderwriters] :: IpoRawData -> !Maybe [Text]

-- | "underwriters" - refers to the list of investment banks underwriting
--   the IPO
[ipoRawDataUnderwriters] :: IpoRawData -> !Maybe [Text]

-- | "companyCounsel" - refers to the list of legal firms representing the
--   company
[ipoRawDataCompanyCounsel] :: IpoRawData -> !Maybe [Text]

-- | "underWriterCounsel" - refers to the list of legal firms representing
--   the underwriter
[ipoRawDataUnderWriterCounsel] :: IpoRawData -> !Maybe [Text]

-- | "auditor" - Refers to the auditing firm for the company
[ipoRawDataAuditor] :: IpoRawData -> !Maybe Text

-- | "market" - Refers to the exchange listing the IPO
[ipoRawDataMarket] :: IpoRawData -> !Maybe Text

-- | "cik" - Refers to the Central Index Key assigned by the SEC to
--   identify filings
[ipoRawDataCik] :: IpoRawData -> !Maybe Text

-- | "address" - Refers to the company address
[ipoRawDataAddress] :: IpoRawData -> !Maybe Text

-- | "city" - Refers to the company city
[ipoRawDataCity] :: IpoRawData -> !Maybe Text

-- | "state" - Refers to the company state
[ipoRawDataState] :: IpoRawData -> !Maybe Text

-- | "zip" - Refers to the company zip code
[ipoRawDataZip] :: IpoRawData -> !Maybe Text

-- | "phone" - refers to the company phone number
[ipoRawDataPhone] :: IpoRawData -> !Maybe Text

-- | "ceo" - refers to the name of the company CEO
[ipoRawDataCeo] :: IpoRawData -> !Maybe Text

-- | "employees" - refers to the number of employees in the company
[ipoRawDataEmployees] :: IpoRawData -> !Maybe Double

-- | "url" - refers to the URL of the company website
[ipoRawDataUrl] :: IpoRawData -> !Maybe Text

-- | "status" - Refers to the filing status of the SEC Form S-1
[ipoRawDataStatus] :: IpoRawData -> !Maybe Text

-- | "sharesOffered" - Refers to the number of shares offered in the IPO
[ipoRawDataSharesOffered] :: IpoRawData -> !Maybe Double

-- | "priceLow" - Refers to the low end estimate of IPO share price. On the
--   day of the IPO, this will be the syndicate price which is used
--   similarly to `previousClose` to determine change versus current price.
[ipoRawDataPriceLow] :: IpoRawData -> !Maybe Double

-- | "priceHigh" - Refers to the high end estimate of IPO share price. On
--   the day of the IPO, this value may be null.
[ipoRawDataPriceHigh] :: IpoRawData -> !Maybe Double

-- | "offerAmount" - Refers to the notional value of the IPO in dollars
[ipoRawDataOfferAmount] :: IpoRawData -> !Maybe Double

-- | "totalExpenses" - Refers to company total expenses in dollars
[ipoRawDataTotalExpenses] :: IpoRawData -> !Maybe Double

-- | "sharesOverAlloted" - Refers to number of shares alloted by
--   underwriters in excess of IPO offering.
[ipoRawDataSharesOverAlloted] :: IpoRawData -> !Maybe Double

-- | "shareholderShares" - Refers to number of shares offered by existing
--   shareholders
[ipoRawDataShareholderShares] :: IpoRawData -> !Maybe Double

-- | "sharesOutstanding" - SRefers to the total number of company shares
--   outstanding
[ipoRawDataSharesOutstanding] :: IpoRawData -> !Maybe Double

-- | "lockupPeriodExpiration" - Refers to the date of insider lockup period
--   expiration
[ipoRawDataLockupPeriodExpiration] :: IpoRawData -> !Maybe Text

-- | "quietPeriodExpiration" - Refers to the date following IPO when
--   company quiet period expires
[ipoRawDataQuietPeriodExpiration] :: IpoRawData -> !Maybe Text

-- | "revenue" - Refers to company revenue in dollars
[ipoRawDataRevenue] :: IpoRawData -> !Maybe Double

-- | "netIncome" - Refers to company net income in dollars
[ipoRawDataNetIncome] :: IpoRawData -> !Maybe Double

-- | "totalAssets" - Refers to company total assets in dolars
[ipoRawDataTotalAssets] :: IpoRawData -> !Maybe Double

-- | "totalLiabilities" - Refers to company total liabilities in dollars
[ipoRawDataTotalLiabilities] :: IpoRawData -> !Maybe Double

-- | "stockholderEquity" - Refers to stock holder equity in dollars
[ipoRawDataStockholderEquity] :: IpoRawData -> !Maybe Double

-- | "companyDescription" - Description of the company
[ipoRawDataCompanyDescription] :: IpoRawData -> !Maybe Text

-- | "businessDescription" - description of the company's business
[ipoRawDataBusinessDescription] :: IpoRawData -> !Maybe Text

-- | "useOfProceeds" - description of the company's planned use of proceeds
--   from the IPO
[ipoRawDataUseOfProceeds] :: IpoRawData -> !Maybe Text

-- | "competition" - description of the company's competition
[ipoRawDataCompetition] :: IpoRawData -> !Maybe Text

-- | "amount" - Refers to the notional balue of sharees offered * average
--   share price in dollars
[ipoRawDataAmount] :: IpoRawData -> !Maybe Double

-- | "percentOffered" - Refers to the percent of outstanding shares being
--   offered as a whole number
[ipoRawDataPercentOffered] :: IpoRawData -> !Maybe Double

-- | Construct a value of type <a>IpoRawData</a> (by applying it's required
--   fields, if any)
mkIpoRawData :: IpoRawData

-- | IpoViewData
data IpoViewData
IpoViewData :: !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> IpoViewData

-- | <a>Company</a> - Refers to the name of the IPO company
[ipoViewDataCompany] :: IpoViewData -> !Maybe Text

-- | <a>Symbol</a> - Refers to the IPO symbol
[ipoViewDataSymbol] :: IpoViewData -> !Maybe Text

-- | <a>Price</a> - Formatted as `$priceLow - priceHigh`
[ipoViewDataPrice] :: IpoViewData -> !Maybe Text

-- | <a>Shares</a> - Refers to the number of shares offered in the IPO
[ipoViewDataShares] :: IpoViewData -> !Maybe Text

-- | <a>Amount</a> - Refers to the notional value of shares offered *
--   average share price in dollars
[ipoViewDataAmount] :: IpoViewData -> !Maybe Text

-- | <a>Float</a> - Refers to the total number of company shares
--   outstanding
[ipoViewDataFloat] :: IpoViewData -> !Maybe Text

-- | <a>Percent</a> - Refers to the percent of outstanding shares being
--   offered as a whole number
[ipoViewDataPercent] :: IpoViewData -> !Maybe Text

-- | <a>Market</a> - Refers to the exchange listing the IPO
[ipoViewDataMarket] :: IpoViewData -> !Maybe Text

-- | <a>Expected</a> - REfers to the date the IPO is expected to start
--   trading
[ipoViewDataExpected] :: IpoViewData -> !Maybe Text

-- | Construct a value of type <a>IpoViewData</a> (by applying it's
--   required fields, if any)
mkIpoViewData :: IpoViewData

-- | ListedSymbolData
data ListedSymbolData
ListedSymbolData :: !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> ListedSymbolData

-- | <a>RecordID</a>
[listedSymbolDataRecordId] :: ListedSymbolData -> !Maybe Text

-- | <a>DailyListTimestamp</a>
[listedSymbolDataDailyListTimestamp] :: ListedSymbolData -> !Maybe Text

-- | <a>SymbolinINETSymbology</a>
[listedSymbolDataSymbolinInetSymbology] :: ListedSymbolData -> !Maybe Text

-- | <a>SymbolinCQSSymbology</a>
[listedSymbolDataSymbolinCqsSymbology] :: ListedSymbolData -> !Maybe Text

-- | <a>SymbolinCMSSymbology</a>
[listedSymbolDataSymbolinCmsSymbology] :: ListedSymbolData -> !Maybe Text

-- | <a>SecurityName</a>
[listedSymbolDataSecurityName] :: ListedSymbolData -> !Maybe Text

-- | <a>CompanyName</a>
[listedSymbolDataCompanyName] :: ListedSymbolData -> !Maybe Text

-- | <a>TestIssue</a>
[listedSymbolDataTestIssue] :: ListedSymbolData -> !Maybe Text

-- | <a>IssueDescription</a>
[listedSymbolDataIssueDescription] :: ListedSymbolData -> !Maybe Text

-- | <a>IssueType</a>
[listedSymbolDataIssueType] :: ListedSymbolData -> !Maybe Text

-- | <a>IssueSubType</a>
[listedSymbolDataIssueSubType] :: ListedSymbolData -> !Maybe Text

-- | <a>SICCode</a>
[listedSymbolDataSicCode] :: ListedSymbolData -> !Maybe Text

-- | <a>TransferAgent</a>
[listedSymbolDataTransferAgent] :: ListedSymbolData -> !Maybe Text

-- | <a>FinancialStatus</a>
[listedSymbolDataFinancialStatus] :: ListedSymbolData -> !Maybe Text

-- | <a>RoundLotSize</a>
[listedSymbolDataRoundLotSize] :: ListedSymbolData -> !Maybe Text

-- | <a>PreviousOfficialClosingPrice</a>
[listedSymbolDataPreviousOfficialClosingPrice] :: ListedSymbolData -> !Maybe Text

-- | <a>AdjustedPreviousOfficialClosingPrice</a>
[listedSymbolDataAdjustedPreviousOfficialClosingPrice] :: ListedSymbolData -> !Maybe Text

-- | <a>WhenIssuedFlag</a>
[listedSymbolDataWhenIssuedFlag] :: ListedSymbolData -> !Maybe Text

-- | <a>WhenDistributedFlag</a>
[listedSymbolDataWhenDistributedFlag] :: ListedSymbolData -> !Maybe Text

-- | <a>IPOFlag</a>
[listedSymbolDataIpoFlag] :: ListedSymbolData -> !Maybe Text

-- | <a>FirstDateListed</a>
[listedSymbolDataFirstDateListed] :: ListedSymbolData -> !Maybe Text

-- | <a>LULDTierIndicator</a>
[listedSymbolDataLuldTierIndicator] :: ListedSymbolData -> !Maybe Text

-- | <a>CountryofIncorporation</a>
[listedSymbolDataCountryofIncorporation] :: ListedSymbolData -> !Maybe Text

-- | <a>LeveragedETPFlag</a>
[listedSymbolDataLeveragedEtpFlag] :: ListedSymbolData -> !Maybe Text

-- | <a>LeveragedETPRatio</a>
[listedSymbolDataLeveragedEtpRatio] :: ListedSymbolData -> !Maybe Text

-- | <a>InverseETPFlag</a>
[listedSymbolDataInverseEtpFlag] :: ListedSymbolData -> !Maybe Text

-- | <a>RecordUpdateTime</a>
[listedSymbolDataRecordUpdateTime] :: ListedSymbolData -> !Maybe Text

-- | Construct a value of type <a>ListedSymbolData</a> (by applying it's
--   required fields, if any)
mkListedSymbolData :: ListedSymbolData

-- | OhlcData
data OhlcData
OhlcData :: !Maybe OhlcDataOpen -> !Maybe OhlcDataClose -> !Maybe Double -> !Maybe Double -> OhlcData

-- | "open"
[ohlcDataOpen] :: OhlcData -> !Maybe OhlcDataOpen

-- | "close"
[ohlcDataClose] :: OhlcData -> !Maybe OhlcDataClose

-- | "high" - Refers to the market-wide highest price from the SIP (15
--   minute delayed)
[ohlcDataHigh] :: OhlcData -> !Maybe Double

-- | "low" - Refers to the market-wide highest price from the SIP (15
--   minute delayed)
[ohlcDataLow] :: OhlcData -> !Maybe Double

-- | Construct a value of type <a>OhlcData</a> (by applying it's required
--   fields, if any)
mkOhlcData :: OhlcData

-- | OhlcDataClose
data OhlcDataClose
OhlcDataClose :: !Maybe Double -> !Maybe Double -> OhlcDataClose

-- | "price" - Refers to the official close price
[ohlcDataClosePrice] :: OhlcDataClose -> !Maybe Double

-- | "time" - Refers to the official listing exchange time for the close
[ohlcDataCloseTime] :: OhlcDataClose -> !Maybe Double

-- | Construct a value of type <a>OhlcDataClose</a> (by applying it's
--   required fields, if any)
mkOhlcDataClose :: OhlcDataClose

-- | OhlcDataOpen
data OhlcDataOpen
OhlcDataOpen :: !Maybe Double -> !Maybe Double -> OhlcDataOpen

-- | "price" - Refers to the official open price
[ohlcDataOpenPrice] :: OhlcDataOpen -> !Maybe Double

-- | "time" - Refers to the official listing exchange time for the open
[ohlcDataOpenTime] :: OhlcDataOpen -> !Maybe Double

-- | Construct a value of type <a>OhlcDataOpen</a> (by applying it's
--   required fields, if any)
mkOhlcDataOpen :: OhlcDataOpen

-- | Order
data Order
Order :: !Maybe Double -> !Maybe Double -> !Maybe Double -> Order

-- | "price"
[orderPrice] :: Order -> !Maybe Double

-- | "size"
[orderSize] :: Order -> !Maybe Double

-- | "timestamp"
[orderTimestamp] :: Order -> !Maybe Double

-- | Construct a value of type <a>Order</a> (by applying it's required
--   fields, if any)
mkOrder :: Order

-- | PriceData
data PriceData
PriceData :: !Maybe Text -> !Maybe Date -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> PriceData

-- | "symbol" - Refers to the stock ticker.
[priceDataSymbol] :: PriceData -> !Maybe Text

-- | "date" - Refers to the date of the returned data in the format
--   `YYYY-MM-DD`.
[priceDataDate] :: PriceData -> !Maybe Date

-- | "open"
[priceDataOpen] :: PriceData -> !Maybe Double

-- | "high"
[priceDataHigh] :: PriceData -> !Maybe Double

-- | "low"
[priceDataLow] :: PriceData -> !Maybe Double

-- | "close"
[priceDataClose] :: PriceData -> !Maybe Double

-- | "volume" - Adjusted for splits
[priceDataVolume] :: PriceData -> !Maybe Double

-- | "unadjustedVolume"
[priceDataUnadjustedVolume] :: PriceData -> !Maybe Double

-- | "change"
[priceDataChange] :: PriceData -> !Maybe Double

-- | "changePercent"
[priceDataChangePercent] :: PriceData -> !Maybe Double

-- | "vwap" - Volume weighted average price
[priceDataVwap] :: PriceData -> !Maybe Double

-- | Construct a value of type <a>PriceData</a> (by applying it's required
--   fields, if any)
mkPriceData :: PriceData

-- | Quote
data Quote
Quote :: !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe E'CalculationPrice -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe E'LatestSource -> !Maybe Text -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> Quote

-- | "symbol" - Refers to the stock ticker
[quoteSymbol] :: Quote -> !Maybe Text

-- | "companyName" - Refers to the company name
[quoteCompanyName] :: Quote -> !Maybe Text

-- | "primaryExchange" - Refers to the primary listings exchange
[quotePrimaryExchange] :: Quote -> !Maybe Text

-- | "sector" - Refers to the sector of the stock
[quoteSector] :: Quote -> !Maybe Text

-- | "calculationPrice" - Refers to the source of the latest price
[quoteCalculationPrice] :: Quote -> !Maybe E'CalculationPrice

-- | "open" - Refers to the official open price
[quoteOpen] :: Quote -> !Maybe Double

-- | "openTime" - Refers to the official listing exchange time for the open
[quoteOpenTime] :: Quote -> !Maybe Double

-- | "close" - Refers to the official close price
[quoteClose] :: Quote -> !Maybe Double

-- | "closeTime" - Refers to the official listing exchange time for the
--   close
[quoteCloseTime] :: Quote -> !Maybe Double

-- | "high" - Refers to the market-wide highest price from the SIP.
[quoteHigh] :: Quote -> !Maybe Double

-- | "low" - Refers to the market-wide lowest price from the SIP.
[quoteLow] :: Quote -> !Maybe Double

-- | "latestPrice" - Refers to the latest price being the IEX real time
--   price, the 15 minute delayed market price, or the previous close price
[quoteLatestPrice] :: Quote -> !Maybe Double

-- | "latestSource" - Refers to the source of `latestPrice`.
[quoteLatestSource] :: Quote -> !Maybe E'LatestSource

-- | "latestTime" - Refers to a human readable time of the `latestPrice`.
--   The format will vary based on `latestSource`.
[quoteLatestTime] :: Quote -> !Maybe Text

-- | "latestUpdate" - Refers to the update time of `latestPrice` in
--   milliseconds since midnight Jan 1, 1970.
[quoteLatestUpdate] :: Quote -> !Maybe Double

-- | "latestVolume" - Refers to the total market volume of the stock.
[quoteLatestVolume] :: Quote -> !Maybe Double

-- | "iexRealtimePrice" - Refers to last sale price of the stock on IEX.
--   (Refer to the attribution section.)
[quoteIexRealtimePrice] :: Quote -> !Maybe Double

-- | "iexRealtimeSize" - Refers to the last sale size of the stock on IEX.
[quoteIexRealtimeSize] :: Quote -> !Maybe Double

-- | "iexLastUpdated" - Refers to the last update time of the data in
--   milliseconds since midnight Jan 1, 1950 UTC or `-1` or `0`. If the
--   value is `-1' or `0`, IEX has not quoted the symbol in the trading
--   day.
[quoteIexLastUpdated] :: Quote -> !Maybe Double

-- | "delayedPrice" - Refers to the 15 minute delayed market price during
--   normal market hours 9:30 - 16:00.
[quoteDelayedPrice] :: Quote -> !Maybe Double

-- | "delayedPriceTime" - Refers to the time of the delayed market price
--   during normal market hours 9:30 -16:00.
[quoteDelayedPriceTime] :: Quote -> !Maybe Double

-- | "extendedPrice" - Refers to the 15 minuted delayed market price
--   outside normal market hours 8:00 - 9:30 and 16:00 - 17:00.
[quoteExtendedPrice] :: Quote -> !Maybe Double

-- | "extendedChange" - Is calculated using `extendedPrice` from
--   `calculationPrice`.
[quoteExtendedChange] :: Quote -> !Maybe Double

-- | "extendedChangePercent" - Is calculated using `extendedPrice` from
--   `calculationPrice`.
[quoteExtendedChangePercent] :: Quote -> !Maybe Double

-- | "extendedPriceTime" - Refers to the time of the delayed market price
--   outside normal market hours 8:00 - 9:30 and 16:00 - 17:00.
[quoteExtendedPriceTime] :: Quote -> !Maybe Double

-- | "previousClose"
[quotePreviousClose] :: Quote -> !Maybe Double

-- | "change" - Is calculated using `calculationPrice` from
--   `previousClose`.
[quoteChange] :: Quote -> !Maybe Double

-- | "changePercent" - Is calculated using `calculationPrice` from
--   `previousClose`.
[quoteChangePercent] :: Quote -> !Maybe Double

-- | "iexMarketPercent" - refers to IEX's percentage of the market in the
--   stock.
[quoteIexMarketPercent] :: Quote -> !Maybe Double

-- | "iexVolume" - refers to shares traded in the stock on IEX.
[quoteIexVolume] :: Quote -> !Maybe Double

-- | "avgTotalVolume" - Refers to the 30 day average volume on all markets.
[quoteAvgTotalVolume] :: Quote -> !Maybe Double

-- | "iexBidPrice" - Refers to the best bid price on IEX.
[quoteIexBidPrice] :: Quote -> !Maybe Double

-- | "iexBidSize" - Refers to the amount of shares on the bid on IEX.
[quoteIexBidSize] :: Quote -> !Maybe Double

-- | "iexAskPrice" - Refers to the best ask price on IEX.
[quoteIexAskPrice] :: Quote -> !Maybe Double

-- | "iexAskSize" - Refers to the amount of shares on the ask on IEX.
[quoteIexAskSize] :: Quote -> !Maybe Double

-- | "marketCap" - Is calculated in real time using `calculationPrice`.
[quoteMarketCap] :: Quote -> !Maybe Double

-- | "peRatio" - Is calculated in real time using `calculationPrice`.
[quotePeRatio] :: Quote -> !Maybe Double

-- | "week52High" - Refers to the adjusted 52 week high.
[quoteWeek52High] :: Quote -> !Maybe Double

-- | "week52Low" - Refers to the adjusted 52 week low.
[quoteWeek52Low] :: Quote -> !Maybe Double

-- | "ytdChange" - Refers to the price change percentage from start of year
--   to previous close.
[quoteYtdChange] :: Quote -> !Maybe Double

-- | Construct a value of type <a>Quote</a> (by applying it's required
--   fields, if any)
mkQuote :: Quote

-- | RecordedValue
data RecordedValue
RecordedValue :: !Maybe Double -> !Maybe Text -> !Maybe Double -> !Maybe Double -> RecordedValue

-- | "recordValue"
[recordedValueRecordValue] :: RecordedValue -> !Maybe Double

-- | "recordDate"
[recordedValueRecordDate] :: RecordedValue -> !Maybe Text

-- | "previousDayValue"
[recordedValuePreviousDayValue] :: RecordedValue -> !Maybe Double

-- | "avg30Value"
[recordedValueAvg30Value] :: RecordedValue -> !Maybe Double

-- | Construct a value of type <a>RecordedValue</a> (by applying it's
--   required fields, if any)
mkRecordedValue :: RecordedValue

-- | ShortInterest
data ShortInterest
ShortInterest :: !Maybe Text -> !Maybe Text -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> !Maybe Text -> ShortInterest

-- | <a>SettlementDate</a>
[shortInterestSettlementDate] :: ShortInterest -> !Maybe Text

-- | <a>SecurityName</a>
[shortInterestSecurityName] :: ShortInterest -> !Maybe Text

-- | <a>CurrentShortIntereste</a>
[shortInterestCurrentShortIntereste] :: ShortInterest -> !Maybe Double

-- | <a>PreviousShortInterest</a>
[shortInterestPreviousShortInterest] :: ShortInterest -> !Maybe Double

-- | <a>PercentChange</a>
[shortInterestPercentChange] :: ShortInterest -> !Maybe Double

-- | <a>AverageDailyVolume</a>
[shortInterestAverageDailyVolume] :: ShortInterest -> !Maybe Double

-- | <a>DaystoCover</a>
[shortInterestDaystoCover] :: ShortInterest -> !Maybe Double

-- | <a>StockAdjustmentFlag</a>
[shortInterestStockAdjustmentFlag] :: ShortInterest -> !Maybe Text

-- | <a>RevisionFlag</a>
[shortInterestRevisionFlag] :: ShortInterest -> !Maybe Text

-- | <a>SymbolinINETSymbology</a>
[shortInterestSymbolinInetSymbology] :: ShortInterest -> !Maybe Text

-- | <a>SymbolinCQSSymbology</a>
[shortInterestSymbolinCqsSymbology] :: ShortInterest -> !Maybe Text

-- | <a>SymbolinCMSSymbology</a>
[shortInterestSymbolinCmsSymbology] :: ShortInterest -> !Maybe Text

-- | <a>NewIssueFlag</a>
[shortInterestNewIssueFlag] :: ShortInterest -> !Maybe Text

-- | <a>CompanyName</a>
[shortInterestCompanyName] :: ShortInterest -> !Maybe Text

-- | Construct a value of type <a>ShortInterest</a> (by applying it's
--   required fields, if any)
mkShortInterest :: ShortInterest

-- | Stats
data Stats
Stats :: !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> Stats

-- | "averageDailyVolume"
[statsAverageDailyVolume] :: Stats -> !Maybe Double

-- | "averageDailyRoutedVolume"
[statsAverageDailyRoutedVolume] :: Stats -> !Maybe Double

-- | "averageMarketShare"
[statsAverageMarketShare] :: Stats -> !Maybe Double

-- | "averageOrderSize"
[statsAverageOrderSize] :: Stats -> !Maybe Double

-- | "averageFillSize"
[statsAverageFillSize] :: Stats -> !Maybe Double

-- | "bin100Percent"
[statsBin100Percent] :: Stats -> !Maybe Double

-- | "bin101Percent"
[statsBin101Percent] :: Stats -> !Maybe Double

-- | "bin200Percent"
[statsBin200Percent] :: Stats -> !Maybe Double

-- | "bin300Percent"
[statsBin300Percent] :: Stats -> !Maybe Double

-- | "bin400Percent"
[statsBin400Percent] :: Stats -> !Maybe Double

-- | "bin500Percent"
[statsBin500Percent] :: Stats -> !Maybe Double

-- | "bin1000Percent"
[statsBin1000Percent] :: Stats -> !Maybe Double

-- | "bin5000Percent"
[statsBin5000Percent] :: Stats -> !Maybe Double

-- | "bin10000Percent"
[statsBin10000Percent] :: Stats -> !Maybe Double

-- | "bin10000Trades"
[statsBin10000Trades] :: Stats -> !Maybe Double

-- | "bin20000Trades"
[statsBin20000Trades] :: Stats -> !Maybe Double

-- | "bin50000Trades"
[statsBin50000Trades] :: Stats -> !Maybe Double

-- | "uniqueSymbolsTraded"
[statsUniqueSymbolsTraded] :: Stats -> !Maybe Double

-- | "blockPercent"
[statsBlockPercent] :: Stats -> !Maybe Double

-- | "selfCrossPercent"
[statsSelfCrossPercent] :: Stats -> !Maybe Double

-- | "etfPercent"
[statsEtfPercent] :: Stats -> !Maybe Double

-- | "largeCapPercent"
[statsLargeCapPercent] :: Stats -> !Maybe Double

-- | "midCapPercent"
[statsMidCapPercent] :: Stats -> !Maybe Double

-- | "smallCapPercent"
[statsSmallCapPercent] :: Stats -> !Maybe Double

-- | "venueARCXFirstWaveWeight"
[statsVenueArcxFirstWaveWeight] :: Stats -> !Maybe Double

-- | "venueBATSFirstWaveWeight"
[statsVenueBatsFirstWaveWeight] :: Stats -> !Maybe Double

-- | "venueBATYFirstWaveWeight"
[statsVenueBatyFirstWaveWeight] :: Stats -> !Maybe Double

-- | "venueEDGAFirstWaveWeight"
[statsVenueEdgaFirstWaveWeight] :: Stats -> !Maybe Double

-- | "venueEDGXFirstWaveWeight"
[statsVenueEdgxFirstWaveWeight] :: Stats -> !Maybe Double

-- | "venueOverallFirstWaveWeight"
[statsVenueOverallFirstWaveWeight] :: Stats -> !Maybe Double

-- | "venueXASEFirstWaveWeight"
[statsVenueXaseFirstWaveWeight] :: Stats -> !Maybe Double

-- | "venueXBOSFirstWaveWeight"
[statsVenueXbosFirstWaveWeight] :: Stats -> !Maybe Double

-- | "venueXCHIFirstWaveWeight"
[statsVenueXchiFirstWaveWeight] :: Stats -> !Maybe Double

-- | "venueXCISFirstWaveWeight"
[statsVenueXcisFirstWaveWeight] :: Stats -> !Maybe Double

-- | "venueXNGSFirstWaveWeight"
[statsVenueXngsFirstWaveWeight] :: Stats -> !Maybe Double

-- | "venueXNYSFirstWaveWeight"
[statsVenueXnysFirstWaveWeight] :: Stats -> !Maybe Double

-- | "venueXPHLFirstWaveWeight"
[statsVenueXphlFirstWaveWeight] :: Stats -> !Maybe Double

-- | "venueARCXFirstWaveRate"
[statsVenueArcxFirstWaveRate] :: Stats -> !Maybe Double

-- | "venueBATSFirstWaveRate"
[statsVenueBatsFirstWaveRate] :: Stats -> !Maybe Double

-- | "venueBATYFirstWaveRate"
[statsVenueBatyFirstWaveRate] :: Stats -> !Maybe Double

-- | "venueEDGAFirstWaveRate"
[statsVenueEdgaFirstWaveRate] :: Stats -> !Maybe Double

-- | "venueEDGXFirstWaveRate"
[statsVenueEdgxFirstWaveRate] :: Stats -> !Maybe Double

-- | "venueOverallFirstWaveRate"
[statsVenueOverallFirstWaveRate] :: Stats -> !Maybe Double

-- | "venueXASEFirstWaveRate"
[statsVenueXaseFirstWaveRate] :: Stats -> !Maybe Double

-- | "venueXBOSFirstWaveRate"
[statsVenueXbosFirstWaveRate] :: Stats -> !Maybe Double

-- | "venueXCHIFirstWaveRate"
[statsVenueXchiFirstWaveRate] :: Stats -> !Maybe Double

-- | "venueXCISFirstWaveRate"
[statsVenueXcisFirstWaveRate] :: Stats -> !Maybe Double

-- | "venueXNGSFirstWaveRate"
[statsVenueXngsFirstWaveRate] :: Stats -> !Maybe Double

-- | "venueXNYSFirstWaveRate"
[statsVenueXnysFirstWaveRate] :: Stats -> !Maybe Double

-- | "venueXPHLFirstWaveRate"
[statsVenueXphlFirstWaveRate] :: Stats -> !Maybe Double

-- | Construct a value of type <a>Stats</a> (by applying it's required
--   fields, if any)
mkStats :: Stats

-- | SystemEvent
data SystemEvent
SystemEvent :: !Maybe E'SystemEvent -> !Maybe Double -> SystemEvent

-- | "systemEvent" - The System event message is used to indicate events
--   that apply to the market or the data feed. There will be a single
--   message disseminated per channel for each System Event type within a
--   given trading session. values: * `O` - start of message * `S` - start
--   of system hours * `R` - start of regular market hours * `M` - end of
--   regular market hours * `E` - end of system hours * `C` - end of
--   message
[systemEventSystemEvent] :: SystemEvent -> !Maybe E'SystemEvent

-- | "timestamp"
[systemEventTimestamp] :: SystemEvent -> !Maybe Double

-- | Construct a value of type <a>SystemEvent</a> (by applying it's
--   required fields, if any)
mkSystemEvent :: SystemEvent

-- | TimestampedValue
data TimestampedValue
TimestampedValue :: !Maybe Double -> !Maybe Double -> TimestampedValue

-- | "value"
[timestampedValueValue] :: TimestampedValue -> !Maybe Double

-- | "lastUpdated"
[timestampedValueLastUpdated] :: TimestampedValue -> !Maybe Double

-- | Construct a value of type <a>TimestampedValue</a> (by applying it's
--   required fields, if any)
mkTimestampedValue :: TimestampedValue

-- | TodayEarnings
data TodayEarnings
TodayEarnings :: !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Text -> !Maybe Double -> !Maybe Double -> !Maybe Date -> !Maybe Text -> !Maybe Date -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Text -> !Maybe Quote -> !Maybe Text -> TodayEarnings

-- | "actualEPS" - Actual earnings per share for the period
[todayEarningsActualEps] :: TodayEarnings -> !Maybe Double

-- | "consensusEPS" - Consensus EPS estimate trend for the period
[todayEarningsConsensusEps] :: TodayEarnings -> !Maybe Double

-- | "estimatedEPS" - Earinings per share estimate for the period
[todayEarningsEstimatedEps] :: TodayEarnings -> !Maybe Double

-- | "announceTime" - Time of earnings announcement: * BTO = before open *
--   DMT = during trading * AMC = after close
[todayEarningsAnnounceTime] :: TodayEarnings -> !Maybe Text

-- | "numberOfEstimates" - Number of estimates for the period
[todayEarningsNumberOfEstimates] :: TodayEarnings -> !Maybe Double

-- | <a>EPSSurpriseDollar</a> - Dollar amount of EPS surprise for the
--   period
[todayEarningsEpsSurpriseDollar] :: TodayEarnings -> !Maybe Double

-- | <a>EPSReportDate</a> - Expected eariings report date `YYYY-MM-DD`
[todayEarningsEpsReportDate] :: TodayEarnings -> !Maybe Date

-- | "fiscalPeriod" - The fiscal quarter the earnings data applies to
--   `Qx60;
[todayEarningsFiscalPeriod] :: TodayEarnings -> !Maybe Text

-- | "fiscalEndDate" - Date representing the company fiscal quarter end
--   `YYYY-MM-DD`
[todayEarningsFiscalEndDate] :: TodayEarnings -> !Maybe Date

-- | "yearAgo" - Represents the EPS of the quarter a year ago
[todayEarningsYearAgo] :: TodayEarnings -> !Maybe Double

-- | "yearAgoChangePercent" - Represents the percent difference between the
--   quarter a year ago `actualEPS` and current period `actualEPS`.
[todayEarningsYearAgoChangePercent] :: TodayEarnings -> !Maybe Double

-- | "estimatedChangePercent" - Represents the percent difference between
--   the quarter a year ago `actualEPS` and current period `estimatedEPS`
[todayEarningsEstimatedChangePercent] :: TodayEarnings -> !Maybe Double

-- | "symbolId" - Represents the IEX id for the stock
[todayEarningsSymbolId] :: TodayEarnings -> !Maybe Double

-- | "symbol"
[todayEarningsSymbol] :: TodayEarnings -> !Maybe Text

-- | "quote"
[todayEarningsQuote] :: TodayEarnings -> !Maybe Quote

-- | "headline" - Look back of the last few news items and returns the
--   headline of an article that mentions the earnings result. Useful for
--   displaying the result of an earnings announcement before the data is
--   available in the API.
[todayEarningsHeadline] :: TodayEarnings -> !Maybe Text

-- | Construct a value of type <a>TodayEarnings</a> (by applying it's
--   required fields, if any)
mkTodayEarnings :: TodayEarnings

-- | TodayEarningsAllOf
data TodayEarningsAllOf
TodayEarningsAllOf :: !Maybe Text -> !Maybe Quote -> !Maybe Text -> TodayEarningsAllOf

-- | "symbol"
[todayEarningsAllOfSymbol] :: TodayEarningsAllOf -> !Maybe Text

-- | "quote"
[todayEarningsAllOfQuote] :: TodayEarningsAllOf -> !Maybe Quote

-- | "headline" - Look back of the last few news items and returns the
--   headline of an article that mentions the earnings result. Useful for
--   displaying the result of an earnings announcement before the data is
--   available in the API.
[todayEarningsAllOfHeadline] :: TodayEarningsAllOf -> !Maybe Text

-- | Construct a value of type <a>TodayEarningsAllOf</a> (by applying it's
--   required fields, if any)
mkTodayEarningsAllOf :: TodayEarningsAllOf

-- | Trade
data Trade
Trade :: !Maybe Double -> !Maybe Double -> !Maybe Double -> !Maybe Bool -> !Maybe Bool -> !Maybe Bool -> !Maybe Bool -> !Maybe Bool -> !Maybe Double -> Trade

-- | "price"
[tradePrice] :: Trade -> !Maybe Double

-- | "size"
[tradeSize] :: Trade -> !Maybe Double

-- | "tradeId"
[tradeTradeId] :: Trade -> !Maybe Double

-- | "isISO"
[tradeIsIso] :: Trade -> !Maybe Bool

-- | "isOddLot"
[tradeIsOddLot] :: Trade -> !Maybe Bool

-- | "isOutsideRegularHours"
[tradeIsOutsideRegularHours] :: Trade -> !Maybe Bool

-- | "isSinglePriceCross"
[tradeIsSinglePriceCross] :: Trade -> !Maybe Bool

-- | "isTradeThroughExempt"
[tradeIsTradeThroughExempt] :: Trade -> !Maybe Bool

-- | "timestamp"
[tradeTimestamp] :: Trade -> !Maybe Double

-- | Construct a value of type <a>Trade</a> (by applying it's required
--   fields, if any)
mkTrade :: Trade

-- | Enum of <a>Text</a> . refers to the auction type
data E'AuctionType

-- | <pre>
--   <a>Open</a>
--   </pre>
E'AuctionType'Open :: E'AuctionType

-- | <pre>
--   <a>Close</a>
--   </pre>
E'AuctionType'Close :: E'AuctionType

-- | <pre>
--   "Halt Volatility"
--   </pre>
E'AuctionType'Halt_Volatility :: E'AuctionType

-- | <pre>
--   <a>IPO</a>
--   </pre>
E'AuctionType'IPO :: E'AuctionType

-- | unwrap <a>E'AuctionType</a> enum
fromE'AuctionType :: E'AuctionType -> Text

-- | parse <a>E'AuctionType</a> enum
toE'AuctionType :: Text -> Either String E'AuctionType

-- | Enum of <a>Text</a> . Refers to the source of the latest price
data E'CalculationPrice

-- | <pre>
--   "tops"
--   </pre>
E'CalculationPrice'Tops :: E'CalculationPrice

-- | <pre>
--   "sip"
--   </pre>
E'CalculationPrice'Sip :: E'CalculationPrice

-- | <pre>
--   "previousclose"
--   </pre>
E'CalculationPrice'Previousclose :: E'CalculationPrice

-- | <pre>
--   "close"
--   </pre>
E'CalculationPrice'Close :: E'CalculationPrice

-- | unwrap <a>E'CalculationPrice</a> enum
fromE'CalculationPrice :: E'CalculationPrice -> Text

-- | parse <a>E'CalculationPrice</a> enum
toE'CalculationPrice :: Text -> Either String E'CalculationPrice

-- | Enum of <a>Text</a> . Refers to the dividend flag: * LI = Liquidation,
--   instrument liquidates * PR = Proceeds of a sale of rights or shares *
--   RE = Redemption of rights * AC = Accrued dividend * AR = Payment in
--   arrears * AD = Additional payment * EX = Extra payment * SP = Special
--   dividend * YE = Year end * UR = Unknown recordDate * SU = Regular
--   divdend is suspended
data E'Flag

-- | <pre>
--   <a>FI</a>
--   </pre>
E'Flag'FI :: E'Flag

-- | <pre>
--   <a>LI</a>
--   </pre>
E'Flag'LI :: E'Flag

-- | <pre>
--   <a>PR</a>
--   </pre>
E'Flag'PR :: E'Flag

-- | <pre>
--   <a>RE</a>
--   </pre>
E'Flag'RE :: E'Flag

-- | <pre>
--   <a>AC</a>
--   </pre>
E'Flag'AC :: E'Flag

-- | <pre>
--   <a>AR</a>
--   </pre>
E'Flag'AR :: E'Flag

-- | <pre>
--   <a>AD</a>
--   </pre>
E'Flag'AD :: E'Flag

-- | <pre>
--   <a>EX</a>
--   </pre>
E'Flag'EX :: E'Flag

-- | <pre>
--   <a>SP</a>
--   </pre>
E'Flag'SP :: E'Flag

-- | <pre>
--   <a>YE</a>
--   </pre>
E'Flag'YE :: E'Flag

-- | <pre>
--   <a>UR</a>
--   </pre>
E'Flag'UR :: E'Flag

-- | <pre>
--   <a>SU</a>
--   </pre>
E'Flag'SU :: E'Flag

-- | <pre>
--   ""
--   </pre>
E'Flag'Empty :: E'Flag

-- | unwrap <a>E'Flag</a> enum
fromE'Flag :: E'Flag -> Text

-- | parse <a>E'Flag</a> enum
toE'Flag :: Text -> Either String E'Flag

-- | Enum of <a>Text</a>
data E'Format

-- | <pre>
--   "csv"
--   </pre>
E'Format'Csv :: E'Format

-- | unwrap <a>E'Format</a> enum
fromE'Format :: E'Format -> Text

-- | parse <a>E'Format</a> enum
toE'Format :: Text -> Either String E'Format

-- | Enum of <a>Text</a>
data E'Format2

-- | <pre>
--   "csv"
--   </pre>
E'Format2'Csv :: E'Format2

-- | <pre>
--   "psv"
--   </pre>
E'Format2'Psv :: E'Format2

-- | unwrap <a>E'Format2</a> enum
fromE'Format2 :: E'Format2 -> Text

-- | parse <a>E'Format2</a> enum
toE'Format2 :: Text -> Either String E'Format2

-- | Enum of <a>Text</a>
data E'Inner

-- | <pre>
--   "book"
--   </pre>
E'Inner'Book :: E'Inner

-- | <pre>
--   "chart"
--   </pre>
E'Inner'Chart :: E'Inner

-- | <pre>
--   "company"
--   </pre>
E'Inner'Company :: E'Inner

-- | <pre>
--   "delayed-quote"
--   </pre>
E'Inner'Delayed_quote :: E'Inner

-- | <pre>
--   "dividends"
--   </pre>
E'Inner'Dividends :: E'Inner

-- | <pre>
--   "earnings"
--   </pre>
E'Inner'Earnings :: E'Inner

-- | <pre>
--   "effective-spread"
--   </pre>
E'Inner'Effective_spread :: E'Inner

-- | <pre>
--   "financials"
--   </pre>
E'Inner'Financials :: E'Inner

-- | <pre>
--   "short-interest"
--   </pre>
E'Inner'Short_interest :: E'Inner

-- | <pre>
--   "stats"
--   </pre>
E'Inner'Stats :: E'Inner

-- | <pre>
--   "largest-trades"
--   </pre>
E'Inner'Largest_trades :: E'Inner

-- | <pre>
--   "logo"
--   </pre>
E'Inner'Logo :: E'Inner

-- | <pre>
--   "news"
--   </pre>
E'Inner'News :: E'Inner

-- | <pre>
--   "ohlc"
--   </pre>
E'Inner'Ohlc :: E'Inner

-- | <pre>
--   "peers"
--   </pre>
E'Inner'Peers :: E'Inner

-- | <pre>
--   "previous"
--   </pre>
E'Inner'Previous :: E'Inner

-- | <pre>
--   "price"
--   </pre>
E'Inner'Price :: E'Inner

-- | <pre>
--   "quote"
--   </pre>
E'Inner'Quote :: E'Inner

-- | <pre>
--   "relevant"
--   </pre>
E'Inner'Relevant :: E'Inner

-- | <pre>
--   "splits"
--   </pre>
E'Inner'Splits :: E'Inner

-- | <pre>
--   "time-series"
--   </pre>
E'Inner'Time_series :: E'Inner

-- | <pre>
--   "volume-by-venue"
--   </pre>
E'Inner'Volume_by_venue :: E'Inner

-- | unwrap <a>E'Inner</a> enum
fromE'Inner :: E'Inner -> Text

-- | parse <a>E'Inner</a> enum
toE'Inner :: Text -> Either String E'Inner

-- | Enum of <a>Text</a> . refers to the common issue type of the stock \n
--   * ad - American Depository Receipt (ADRs) * re - Real Estate
--   Investment Trust (REITs) * ce - Closed end fund (Stock and Bond Fund)
--   * si - Secondary issue * lp - Limited Partnerships * cs - Common Stock
--   * et - Exchange Traded Fund (ETF) * (blank) - Not available, i.e.
--   Warrant, Note, or (non-filing) Closed Ended Funds
data E'IssueType

-- | <pre>
--   "ad"
--   </pre>
E'IssueType'Ad :: E'IssueType

-- | <pre>
--   "re"
--   </pre>
E'IssueType'Re :: E'IssueType

-- | <pre>
--   "ce"
--   </pre>
E'IssueType'Ce :: E'IssueType

-- | <pre>
--   "si"
--   </pre>
E'IssueType'Si :: E'IssueType

-- | <pre>
--   "lp"
--   </pre>
E'IssueType'Lp :: E'IssueType

-- | <pre>
--   "cs"
--   </pre>
E'IssueType'Cs :: E'IssueType

-- | <pre>
--   "et"
--   </pre>
E'IssueType'Et :: E'IssueType

-- | <pre>
--   ""
--   </pre>
E'IssueType'Empty :: E'IssueType

-- | unwrap <a>E'IssueType</a> enum
fromE'IssueType :: E'IssueType -> Text

-- | parse <a>E'IssueType</a> enum
toE'IssueType :: Text -> Either String E'IssueType

-- | Enum of <a>Text</a> . Refers to the source of <tt>latestPrice</tt>.
data E'LatestSource

-- | <pre>
--   "IEX real time price"
--   </pre>
E'LatestSource'IEX_real_time_price :: E'LatestSource

-- | <pre>
--   "15 minute delayed price"
--   </pre>
E'LatestSource'15_minute_delayed_price :: E'LatestSource

-- | <pre>
--   <a>Close</a>
--   </pre>
E'LatestSource'Close :: E'LatestSource

-- | <pre>
--   "Previous close"
--   </pre>
E'LatestSource'Previous_close :: E'LatestSource

-- | unwrap <a>E'LatestSource</a> enum
fromE'LatestSource :: E'LatestSource -> Text

-- | parse <a>E'LatestSource</a> enum
toE'LatestSource :: Text -> Either String E'LatestSource

-- | Enum of <a>Text</a>
data E'ListType

-- | <pre>
--   "mostactive"
--   </pre>
E'ListType'Mostactive :: E'ListType

-- | <pre>
--   "gainers"
--   </pre>
E'ListType'Gainers :: E'ListType

-- | <pre>
--   "losers"
--   </pre>
E'ListType'Losers :: E'ListType

-- | <pre>
--   "iexvolume"
--   </pre>
E'ListType'Iexvolume :: E'ListType

-- | <pre>
--   "iexpercent"
--   </pre>
E'ListType'Iexpercent :: E'ListType

-- | <pre>
--   "infocus"
--   </pre>
E'ListType'Infocus :: E'ListType

-- | unwrap <a>E'ListType</a> enum
fromE'ListType :: E'ListType -> Text

-- | parse <a>E'ListType</a> enum
toE'ListType :: Text -> Either String E'ListType

-- | Enum of <a>Text</a>
data E'Period

-- | <pre>
--   "annual"
--   </pre>
E'Period'Annual :: E'Period

-- | <pre>
--   "quarter"
--   </pre>
E'Period'Quarter :: E'Period

-- | unwrap <a>E'Period</a> enum
fromE'Period :: E'Period -> Text

-- | parse <a>E'Period</a> enum
toE'Period :: Text -> Either String E'Period

-- | Enum of <a>Text</a>
data E'PriceType

-- | <pre>
--   <a>Open</a>
--   </pre>
E'PriceType'Open :: E'PriceType

-- | <pre>
--   <a>Close</a>
--   </pre>
E'PriceType'Close :: E'PriceType

-- | unwrap <a>E'PriceType</a> enum
fromE'PriceType :: E'PriceType -> Text

-- | parse <a>E'PriceType</a> enum
toE'PriceType :: Text -> Either String E'PriceType

-- | Enum of <a>Text</a> . Refers to the dividend income type: * P =
--   Partially qualified income * Q = Qualified income * N = Unqualified
--   income * null = N/A or unknown
data E'Qualified

-- | <pre>
--   <a>P</a>
--   </pre>
E'Qualified'P :: E'Qualified

-- | <pre>
--   <a>Q</a>
--   </pre>
E'Qualified'Q :: E'Qualified

-- | <pre>
--   <a>N</a>
--   </pre>
E'Qualified'N :: E'Qualified

-- | <pre>
--   "null"
--   </pre>
E'Qualified'Null :: E'Qualified

-- | unwrap <a>E'Qualified</a> enum
fromE'Qualified :: E'Qualified -> Text

-- | parse <a>E'Qualified</a> enum
toE'Qualified :: Text -> Either String E'Qualified

-- | Enum of <a>Text</a>
data E'Range

-- | <pre>
--   "today"
--   </pre>
E'Range'Today :: E'Range

-- | <pre>
--   "1m"
--   </pre>
E'Range'1m :: E'Range

-- | unwrap <a>E'Range</a> enum
fromE'Range :: E'Range -> Text

-- | parse <a>E'Range</a> enum
toE'Range :: Text -> Either String E'Range

-- | Enum of <a>Text</a>
data E'Range2

-- | <pre>
--   "5y"
--   </pre>
E'Range2'5y :: E'Range2

-- | <pre>
--   "2y"
--   </pre>
E'Range2'2y :: E'Range2

-- | <pre>
--   "1y"
--   </pre>
E'Range2'1y :: E'Range2

-- | <pre>
--   "ytd"
--   </pre>
E'Range2'Ytd :: E'Range2

-- | <pre>
--   "6m"
--   </pre>
E'Range2'6m :: E'Range2

-- | <pre>
--   "3m"
--   </pre>
E'Range2'3m :: E'Range2

-- | <pre>
--   "1m"
--   </pre>
E'Range2'1m :: E'Range2

-- | unwrap <a>E'Range2</a> enum
fromE'Range2 :: E'Range2 -> Text

-- | parse <a>E'Range2</a> enum
toE'Range2 :: Text -> Either String E'Range2

-- | Enum of <a>Text</a> . Trading Halt Reasons * <tt>T1</tt> Halt News
--   Pending * <tt>IPO1</tt> IPO<i>New Issue Not Yet Trading *
--   <tt>IPOD</tt> IPO</i>New Issue Deferred * <tt>MCB3</tt> Market-Wide
--   ircuit Breaker Level 3 - Breaked <tt>NA</tt> Reason Not Available
--   Order Acceptance Period Reasons * <tt>T2</tt> Halt News Dissemination
--   * <tt>IPO2</tt> IPO/New Issue Order Acceptance Period * <tt>IPO3</tt>
--   IPO Pre-Launch Period * <tt>MCB1</tt> Market-Wide Circuit Breaker
--   Level 1 - Breached * <tt>MCB2</tt> Market-Wide Circuit Breaker Level 2
--   - Breached
data E'Reason

-- | <pre>
--   <a>T1</a>
--   </pre>
E'Reason'T1 :: E'Reason

-- | <pre>
--   <a>IPO1</a>
--   </pre>
E'Reason'IPO1 :: E'Reason

-- | <pre>
--   <a>IPOD</a>
--   </pre>
E'Reason'IPOD :: E'Reason

-- | <pre>
--   <a>MCB3</a>
--   </pre>
E'Reason'MCB3 :: E'Reason

-- | <pre>
--   <a>NA</a>
--   </pre>
E'Reason'NA :: E'Reason

-- | <pre>
--   <a>T2</a>
--   </pre>
E'Reason'T2 :: E'Reason

-- | <pre>
--   <a>IPO2</a>
--   </pre>
E'Reason'IPO2 :: E'Reason

-- | <pre>
--   <a>IPO3</a>
--   </pre>
E'Reason'IPO3 :: E'Reason

-- | <pre>
--   <a>MCB1</a>
--   </pre>
E'Reason'MCB1 :: E'Reason

-- | <pre>
--   <a>MCB2</a>
--   </pre>
E'Reason'MCB2 :: E'Reason

-- | unwrap <a>E'Reason</a> enum
fromE'Reason :: E'Reason -> Text

-- | parse <a>E'Reason</a> enum
toE'Reason :: Text -> Either String E'Reason

-- | Enum of <a>Text</a>
data E'SecurityEvent

-- | <pre>
--   <a>MarketOpen</a>
--   </pre>
E'SecurityEvent'MarketOpen :: E'SecurityEvent

-- | <pre>
--   <a>MarketClose</a>
--   </pre>
E'SecurityEvent'MarketClose :: E'SecurityEvent

-- | unwrap <a>E'SecurityEvent</a> enum
fromE'SecurityEvent :: E'SecurityEvent -> Text

-- | parse <a>E'SecurityEvent</a> enum
toE'SecurityEvent :: Text -> Either String E'SecurityEvent

-- | Enum of <a>Text</a> . * <tt>H</tt> Trading halted across all US equity
--   markets * <tt>O</tt> Trading halt released into an ORder Acceptance
--   Period (IEX-listed securities only) * <tt>P</tt> Trading paused and
--   Order Acceptance Period on IEX (IEX-listed securities only) *
--   <tt>T</tt> Trading on IEX
data E'Status

-- | <pre>
--   <a>H</a>
--   </pre>
E'Status'H :: E'Status

-- | <pre>
--   <a>O</a>
--   </pre>
E'Status'O :: E'Status

-- | <pre>
--   <a>P</a>
--   </pre>
E'Status'P :: E'Status

-- | <pre>
--   <a>T</a>
--   </pre>
E'Status'T :: E'Status

-- | unwrap <a>E'Status</a> enum
fromE'Status :: E'Status -> Text

-- | parse <a>E'Status</a> enum
toE'Status :: Text -> Either String E'Status

-- | Enum of <a>Text</a> . The System event message is used to indicate
--   events that apply to the market or the data feed. There will be a
--   single message disseminated per channel for each System Event type
--   within a given trading session. values: * <tt>O</tt> - start of
--   message * <tt>S</tt> - start of system hours * <tt>R</tt> - start of
--   regular market hours * <tt>M</tt> - end of regular market hours *
--   <tt>E</tt> - end of system hours * <tt>C</tt> - end of message
data E'SystemEvent

-- | <pre>
--   <a>O</a>
--   </pre>
E'SystemEvent'O :: E'SystemEvent

-- | <pre>
--   <a>S</a>
--   </pre>
E'SystemEvent'S :: E'SystemEvent

-- | <pre>
--   <a>R</a>
--   </pre>
E'SystemEvent'R :: E'SystemEvent

-- | <pre>
--   <a>M</a>
--   </pre>
E'SystemEvent'M :: E'SystemEvent

-- | <pre>
--   <a>E</a>
--   </pre>
E'SystemEvent'E :: E'SystemEvent

-- | <pre>
--   <a>C</a>
--   </pre>
E'SystemEvent'C :: E'SystemEvent

-- | unwrap <a>E'SystemEvent</a> enum
fromE'SystemEvent :: E'SystemEvent -> Text

-- | parse <a>E'SystemEvent</a> enum
toE'SystemEvent :: Text -> Either String E'SystemEvent

-- | Enum of <a>Text</a> . refers to the common issue type: * ad = ADR * re
--   = REIT * ce = Closed end fund * si = Secondary issue * lp = Limited
--   partnerships * cs = Common stock * et = ETF
data E'Type

-- | <pre>
--   "ad"
--   </pre>
E'Type'Ad :: E'Type

-- | <pre>
--   "re"
--   </pre>
E'Type'Re :: E'Type

-- | <pre>
--   "ce"
--   </pre>
E'Type'Ce :: E'Type

-- | <pre>
--   "si"
--   </pre>
E'Type'Si :: E'Type

-- | <pre>
--   "lp"
--   </pre>
E'Type'Lp :: E'Type

-- | <pre>
--   "cs"
--   </pre>
E'Type'Cs :: E'Type

-- | <pre>
--   "et"
--   </pre>
E'Type'Et :: E'Type

-- | unwrap <a>E'Type</a> enum
fromE'Type :: E'Type -> Text

-- | parse <a>E'Type</a> enum
toE'Type :: Text -> Either String E'Type

-- | Enum of <a>Text</a> . Refers to the dividend payment type
data E'Type2

-- | <pre>
--   "Dividend income"
--   </pre>
E'Type2'Dividend_income :: E'Type2

-- | <pre>
--   "Interest income"
--   </pre>
E'Type2'Interest_income :: E'Type2

-- | <pre>
--   "Stock dividend"
--   </pre>
E'Type2'Stock_dividend :: E'Type2

-- | <pre>
--   "Short term capital gain"
--   </pre>
E'Type2'Short_term_capital_gain :: E'Type2

-- | <pre>
--   "Medium term capital gain"
--   </pre>
E'Type2'Medium_term_capital_gain :: E'Type2

-- | <pre>
--   "Long term capital gain"
--   </pre>
E'Type2'Long_term_capital_gain :: E'Type2

-- | <pre>
--   "Unspecified term capital gain"
--   </pre>
E'Type2'Unspecified_term_capital_gain :: E'Type2

-- | unwrap <a>E'Type2</a> enum
fromE'Type2 :: E'Type2 -> Text

-- | parse <a>E'Type2</a> enum
toE'Type2 :: Text -> Either String E'Type2

-- | Enum of <a>Text</a>
data ModelList

-- | <pre>
--   "mostactive"
--   </pre>
ModelList'Mostactive :: ModelList

-- | <pre>
--   "gainers"
--   </pre>
ModelList'Gainers :: ModelList

-- | <pre>
--   "losers"
--   </pre>
ModelList'Losers :: ModelList

-- | <pre>
--   "iexvolume"
--   </pre>
ModelList'Iexvolume :: ModelList

-- | <pre>
--   "iexpercent"
--   </pre>
ModelList'Iexpercent :: ModelList

-- | <pre>
--   "infocus"
--   </pre>
ModelList'Infocus :: ModelList

-- | unwrap <a>ModelList</a> enum
fromModelList :: ModelList -> Text

-- | parse <a>ModelList</a> enum
toModelList :: Text -> Either String ModelList

-- | Enum of <a>Text</a>
data Sector

-- | <pre>
--   "Consumer Staples"
--   </pre>
Sector'Consumer_Staples :: Sector

-- | <pre>
--   <a>Utilities</a>
--   </pre>
Sector'Utilities :: Sector

-- | <pre>
--   "Real Estate"
--   </pre>
Sector'Real_Estate :: Sector

-- | <pre>
--   <a>Energy</a>
--   </pre>
Sector'Energy :: Sector

-- | <pre>
--   "Health Care"
--   </pre>
Sector'Health_Care :: Sector

-- | <pre>
--   <a>Financials</a>
--   </pre>
Sector'Financials :: Sector

-- | <pre>
--   <a>Industrials</a>
--   </pre>
Sector'Industrials :: Sector

-- | <pre>
--   "Consumer Discretionary"
--   </pre>
Sector'Consumer_Discretionary :: Sector

-- | <pre>
--   <a>Materials</a>
--   </pre>
Sector'Materials :: Sector

-- | <pre>
--   <a>Technology</a>
--   </pre>
Sector'Technology :: Sector

-- | <pre>
--   "Communication Services"
--   </pre>
Sector'Communication_Services :: Sector

-- | unwrap <a>Sector</a> enum
fromSector :: Sector -> Text

-- | parse <a>Sector</a> enum
toSector :: Text -> Either String Sector
instance GHC.Show.Show IEXHaskellSDK.Model.CollectionName
instance GHC.Classes.Eq IEXHaskellSDK.Model.CollectionName
instance GHC.Classes.Eq IEXHaskellSDK.Model.StockSymbolCompanyGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.StockSymbolCompanyGetResponse
instance GHC.Classes.Eq IEXHaskellSDK.Model.StockMarketSectorPerformanceGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.StockMarketSectorPerformanceGetResponse
instance GHC.Classes.Eq IEXHaskellSDK.Model.TopsGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.TopsGetResponse
instance GHC.Enum.Enum IEXHaskellSDK.Model.Sector
instance GHC.Enum.Bounded IEXHaskellSDK.Model.Sector
instance GHC.Classes.Ord IEXHaskellSDK.Model.Sector
instance GHC.Classes.Eq IEXHaskellSDK.Model.Sector
instance GHC.Show.Show IEXHaskellSDK.Model.Sector
instance GHC.Show.Show IEXHaskellSDK.Model.CollectionName2
instance GHC.Classes.Eq IEXHaskellSDK.Model.CollectionName2
instance GHC.Enum.Enum IEXHaskellSDK.Model.ModelList
instance GHC.Enum.Bounded IEXHaskellSDK.Model.ModelList
instance GHC.Classes.Ord IEXHaskellSDK.Model.ModelList
instance GHC.Classes.Eq IEXHaskellSDK.Model.ModelList
instance GHC.Show.Show IEXHaskellSDK.Model.ModelList
instance GHC.Classes.Eq IEXHaskellSDK.Model.StockSymbolDividendsRangeGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.StockSymbolDividendsRangeGetResponse
instance GHC.Enum.Enum IEXHaskellSDK.Model.E'Type2
instance GHC.Enum.Bounded IEXHaskellSDK.Model.E'Type2
instance GHC.Classes.Ord IEXHaskellSDK.Model.E'Type2
instance GHC.Classes.Eq IEXHaskellSDK.Model.E'Type2
instance GHC.Show.Show IEXHaskellSDK.Model.E'Type2
instance GHC.Classes.Eq IEXHaskellSDK.Model.RefDataSymbolsGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.RefDataSymbolsGetResponse
instance GHC.Enum.Enum IEXHaskellSDK.Model.E'Type
instance GHC.Enum.Bounded IEXHaskellSDK.Model.E'Type
instance GHC.Classes.Ord IEXHaskellSDK.Model.E'Type
instance GHC.Classes.Eq IEXHaskellSDK.Model.E'Type
instance GHC.Show.Show IEXHaskellSDK.Model.E'Type
instance GHC.Classes.Eq IEXHaskellSDK.Model.DeepGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.DeepGetResponse
instance GHC.Classes.Eq IEXHaskellSDK.Model.StockSymbolBookGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.StockSymbolBookGetResponse
instance GHC.Classes.Eq IEXHaskellSDK.Model.DeepSystemEventGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.DeepSystemEventGetResponse
instance GHC.Classes.Eq IEXHaskellSDK.Model.SystemEvent
instance GHC.Show.Show IEXHaskellSDK.Model.SystemEvent
instance GHC.Enum.Enum IEXHaskellSDK.Model.E'SystemEvent
instance GHC.Enum.Bounded IEXHaskellSDK.Model.E'SystemEvent
instance GHC.Classes.Ord IEXHaskellSDK.Model.E'SystemEvent
instance GHC.Classes.Eq IEXHaskellSDK.Model.E'SystemEvent
instance GHC.Show.Show IEXHaskellSDK.Model.E'SystemEvent
instance GHC.Classes.Eq IEXHaskellSDK.Model.DeepTradingStatusGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.DeepTradingStatusGetResponse
instance GHC.Enum.Enum IEXHaskellSDK.Model.E'Status
instance GHC.Enum.Bounded IEXHaskellSDK.Model.E'Status
instance GHC.Classes.Ord IEXHaskellSDK.Model.E'Status
instance GHC.Classes.Eq IEXHaskellSDK.Model.E'Status
instance GHC.Show.Show IEXHaskellSDK.Model.E'Status
instance GHC.Classes.Eq IEXHaskellSDK.Model.DeepSecurityEventGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.DeepSecurityEventGetResponse
instance GHC.Enum.Enum IEXHaskellSDK.Model.E'SecurityEvent
instance GHC.Enum.Bounded IEXHaskellSDK.Model.E'SecurityEvent
instance GHC.Classes.Ord IEXHaskellSDK.Model.E'SecurityEvent
instance GHC.Classes.Eq IEXHaskellSDK.Model.E'SecurityEvent
instance GHC.Show.Show IEXHaskellSDK.Model.E'SecurityEvent
instance GHC.Enum.Enum IEXHaskellSDK.Model.E'Reason
instance GHC.Enum.Bounded IEXHaskellSDK.Model.E'Reason
instance GHC.Classes.Ord IEXHaskellSDK.Model.E'Reason
instance GHC.Classes.Eq IEXHaskellSDK.Model.E'Reason
instance GHC.Show.Show IEXHaskellSDK.Model.E'Reason
instance GHC.Show.Show IEXHaskellSDK.Model.Range2
instance GHC.Classes.Eq IEXHaskellSDK.Model.Range2
instance GHC.Enum.Enum IEXHaskellSDK.Model.E'Range2
instance GHC.Enum.Bounded IEXHaskellSDK.Model.E'Range2
instance GHC.Classes.Ord IEXHaskellSDK.Model.E'Range2
instance GHC.Classes.Eq IEXHaskellSDK.Model.E'Range2
instance GHC.Show.Show IEXHaskellSDK.Model.E'Range2
instance GHC.Classes.Eq IEXHaskellSDK.Model.StockSymbolChartDynamicGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.StockSymbolChartDynamicGetResponse
instance GHC.Enum.Enum IEXHaskellSDK.Model.E'Range
instance GHC.Enum.Bounded IEXHaskellSDK.Model.E'Range
instance GHC.Classes.Ord IEXHaskellSDK.Model.E'Range
instance GHC.Classes.Eq IEXHaskellSDK.Model.E'Range
instance GHC.Show.Show IEXHaskellSDK.Model.E'Range
instance GHC.Enum.Enum IEXHaskellSDK.Model.E'Qualified
instance GHC.Enum.Bounded IEXHaskellSDK.Model.E'Qualified
instance GHC.Classes.Ord IEXHaskellSDK.Model.E'Qualified
instance GHC.Classes.Eq IEXHaskellSDK.Model.E'Qualified
instance GHC.Show.Show IEXHaskellSDK.Model.E'Qualified
instance GHC.Classes.Eq IEXHaskellSDK.Model.DeepOfficialPriceGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.DeepOfficialPriceGetResponse
instance GHC.Enum.Enum IEXHaskellSDK.Model.E'PriceType
instance GHC.Enum.Bounded IEXHaskellSDK.Model.E'PriceType
instance GHC.Classes.Ord IEXHaskellSDK.Model.E'PriceType
instance GHC.Classes.Eq IEXHaskellSDK.Model.E'PriceType
instance GHC.Show.Show IEXHaskellSDK.Model.E'PriceType
instance GHC.Show.Show IEXHaskellSDK.Model.Period
instance GHC.Classes.Eq IEXHaskellSDK.Model.Period
instance GHC.Enum.Enum IEXHaskellSDK.Model.E'Period
instance GHC.Enum.Bounded IEXHaskellSDK.Model.E'Period
instance GHC.Classes.Ord IEXHaskellSDK.Model.E'Period
instance GHC.Classes.Eq IEXHaskellSDK.Model.E'Period
instance GHC.Show.Show IEXHaskellSDK.Model.E'Period
instance GHC.Show.Show IEXHaskellSDK.Model.ListType
instance GHC.Classes.Eq IEXHaskellSDK.Model.ListType
instance GHC.Enum.Enum IEXHaskellSDK.Model.E'ListType
instance GHC.Enum.Bounded IEXHaskellSDK.Model.E'ListType
instance GHC.Classes.Ord IEXHaskellSDK.Model.E'ListType
instance GHC.Classes.Eq IEXHaskellSDK.Model.E'ListType
instance GHC.Show.Show IEXHaskellSDK.Model.E'ListType
instance GHC.Classes.Eq IEXHaskellSDK.Model.StockMarketTodayEarningsGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.StockMarketTodayEarningsGetResponse
instance GHC.Classes.Eq IEXHaskellSDK.Model.TodayEarnings
instance GHC.Show.Show IEXHaskellSDK.Model.TodayEarnings
instance GHC.Classes.Eq IEXHaskellSDK.Model.TodayEarningsAllOf
instance GHC.Show.Show IEXHaskellSDK.Model.TodayEarningsAllOf
instance GHC.Classes.Eq IEXHaskellSDK.Model.Quote
instance GHC.Show.Show IEXHaskellSDK.Model.Quote
instance GHC.Enum.Enum IEXHaskellSDK.Model.E'LatestSource
instance GHC.Enum.Bounded IEXHaskellSDK.Model.E'LatestSource
instance GHC.Classes.Ord IEXHaskellSDK.Model.E'LatestSource
instance GHC.Classes.Eq IEXHaskellSDK.Model.E'LatestSource
instance GHC.Show.Show IEXHaskellSDK.Model.E'LatestSource
instance GHC.Enum.Enum IEXHaskellSDK.Model.E'IssueType
instance GHC.Enum.Bounded IEXHaskellSDK.Model.E'IssueType
instance GHC.Classes.Ord IEXHaskellSDK.Model.E'IssueType
instance GHC.Classes.Eq IEXHaskellSDK.Model.E'IssueType
instance GHC.Show.Show IEXHaskellSDK.Model.E'IssueType
instance GHC.Show.Show IEXHaskellSDK.Model.Types
instance GHC.Classes.Eq IEXHaskellSDK.Model.Types
instance GHC.Enum.Enum IEXHaskellSDK.Model.E'Inner
instance GHC.Enum.Bounded IEXHaskellSDK.Model.E'Inner
instance GHC.Classes.Ord IEXHaskellSDK.Model.E'Inner
instance GHC.Classes.Eq IEXHaskellSDK.Model.E'Inner
instance GHC.Show.Show IEXHaskellSDK.Model.E'Inner
instance GHC.Show.Show IEXHaskellSDK.Model.Format2
instance GHC.Classes.Eq IEXHaskellSDK.Model.Format2
instance GHC.Enum.Enum IEXHaskellSDK.Model.E'Format2
instance GHC.Enum.Bounded IEXHaskellSDK.Model.E'Format2
instance GHC.Classes.Ord IEXHaskellSDK.Model.E'Format2
instance GHC.Classes.Eq IEXHaskellSDK.Model.E'Format2
instance GHC.Show.Show IEXHaskellSDK.Model.E'Format2
instance GHC.Show.Show IEXHaskellSDK.Model.Format
instance GHC.Classes.Eq IEXHaskellSDK.Model.Format
instance GHC.Enum.Enum IEXHaskellSDK.Model.E'Format
instance GHC.Enum.Bounded IEXHaskellSDK.Model.E'Format
instance GHC.Classes.Ord IEXHaskellSDK.Model.E'Format
instance GHC.Classes.Eq IEXHaskellSDK.Model.E'Format
instance GHC.Show.Show IEXHaskellSDK.Model.E'Format
instance GHC.Enum.Enum IEXHaskellSDK.Model.E'Flag
instance GHC.Enum.Bounded IEXHaskellSDK.Model.E'Flag
instance GHC.Classes.Ord IEXHaskellSDK.Model.E'Flag
instance GHC.Classes.Eq IEXHaskellSDK.Model.E'Flag
instance GHC.Show.Show IEXHaskellSDK.Model.E'Flag
instance GHC.Enum.Enum IEXHaskellSDK.Model.E'CalculationPrice
instance GHC.Enum.Bounded IEXHaskellSDK.Model.E'CalculationPrice
instance GHC.Classes.Ord IEXHaskellSDK.Model.E'CalculationPrice
instance GHC.Classes.Eq IEXHaskellSDK.Model.E'CalculationPrice
instance GHC.Show.Show IEXHaskellSDK.Model.E'CalculationPrice
instance GHC.Classes.Eq IEXHaskellSDK.Model.Auction
instance GHC.Show.Show IEXHaskellSDK.Model.Auction
instance GHC.Enum.Enum IEXHaskellSDK.Model.E'AuctionType
instance GHC.Enum.Bounded IEXHaskellSDK.Model.E'AuctionType
instance GHC.Classes.Ord IEXHaskellSDK.Model.E'AuctionType
instance GHC.Classes.Eq IEXHaskellSDK.Model.E'AuctionType
instance GHC.Show.Show IEXHaskellSDK.Model.E'AuctionType
instance GHC.Classes.Eq IEXHaskellSDK.Model.Trade
instance GHC.Show.Show IEXHaskellSDK.Model.Trade
instance GHC.Classes.Eq IEXHaskellSDK.Model.StatsIntradayGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.StatsIntradayGetResponse
instance GHC.Classes.Eq IEXHaskellSDK.Model.TimestampedValue
instance GHC.Show.Show IEXHaskellSDK.Model.TimestampedValue
instance GHC.Classes.Eq IEXHaskellSDK.Model.Stats
instance GHC.Show.Show IEXHaskellSDK.Model.Stats
instance GHC.Classes.Eq IEXHaskellSDK.Model.ShortInterest
instance GHC.Show.Show IEXHaskellSDK.Model.ShortInterest
instance GHC.Classes.Eq IEXHaskellSDK.Model.StatsRecordsGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.StatsRecordsGetResponse
instance GHC.Classes.Eq IEXHaskellSDK.Model.RecordedValue
instance GHC.Show.Show IEXHaskellSDK.Model.RecordedValue
instance GHC.Classes.Eq IEXHaskellSDK.Model.PriceData
instance GHC.Show.Show IEXHaskellSDK.Model.PriceData
instance GHC.Classes.Eq IEXHaskellSDK.Model.DeepBookGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.DeepBookGetResponse
instance GHC.Classes.Eq IEXHaskellSDK.Model.Order
instance GHC.Show.Show IEXHaskellSDK.Model.Order
instance GHC.Classes.Eq IEXHaskellSDK.Model.OhlcData
instance GHC.Show.Show IEXHaskellSDK.Model.OhlcData
instance GHC.Classes.Eq IEXHaskellSDK.Model.OhlcDataOpen
instance GHC.Show.Show IEXHaskellSDK.Model.OhlcDataOpen
instance GHC.Classes.Eq IEXHaskellSDK.Model.OhlcDataClose
instance GHC.Show.Show IEXHaskellSDK.Model.OhlcDataClose
instance GHC.Classes.Eq IEXHaskellSDK.Model.ListedSymbolData
instance GHC.Show.Show IEXHaskellSDK.Model.ListedSymbolData
instance GHC.Classes.Eq IEXHaskellSDK.Model.StockMarketUpcomingIposGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.StockMarketUpcomingIposGetResponse
instance GHC.Classes.Eq IEXHaskellSDK.Model.IpoViewData
instance GHC.Show.Show IEXHaskellSDK.Model.IpoViewData
instance GHC.Classes.Eq IEXHaskellSDK.Model.IpoRawData
instance GHC.Show.Show IEXHaskellSDK.Model.IpoRawData
instance GHC.Classes.Eq IEXHaskellSDK.Model.DeepOpHaltStatusGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.DeepOpHaltStatusGetResponse
instance GHC.Classes.Eq IEXHaskellSDK.Model.StockSymbolVolumeByVenueGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.StockSymbolVolumeByVenueGetResponse
instance GHC.Classes.Eq IEXHaskellSDK.Model.StocksSymbolSplitsRangeGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.StocksSymbolSplitsRangeGetResponse
instance GHC.Classes.Eq IEXHaskellSDK.Model.TopsLastGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.TopsLastGetResponse
instance GHC.Classes.Eq IEXHaskellSDK.Model.StockSymbolRelevantGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.StockSymbolRelevantGetResponse
instance GHC.Classes.Eq IEXHaskellSDK.Model.StockSymbolLogoGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.StockSymbolLogoGetResponse
instance GHC.Classes.Eq IEXHaskellSDK.Model.StockSymbolLargestTradesGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.StockSymbolLargestTradesGetResponse
instance GHC.Classes.Eq IEXHaskellSDK.Model.StockSymbolStatsGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.StockSymbolStatsGetResponse
instance GHC.Classes.Eq IEXHaskellSDK.Model.StockMarketThresholdSecuritiesGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.StockMarketThresholdSecuritiesGetResponse
instance GHC.Classes.Eq IEXHaskellSDK.Model.StockSymbolFinancialsGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.StockSymbolFinancialsGetResponse
instance GHC.Classes.Eq IEXHaskellSDK.Model.StockSymbolEffectiveSpreadGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.StockSymbolEffectiveSpreadGetResponse
instance GHC.Classes.Eq IEXHaskellSDK.Model.StockSymbolEarningsGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.StockSymbolEarningsGetResponse
instance GHC.Classes.Eq IEXHaskellSDK.Model.HistGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.HistGetResponse
instance GHC.Classes.Eq IEXHaskellSDK.Model.DeepGetResponseTradingStatus
instance GHC.Show.Show IEXHaskellSDK.Model.DeepGetResponseTradingStatus
instance GHC.Classes.Eq IEXHaskellSDK.Model.DeepGetResponseTradeBreaks
instance GHC.Show.Show IEXHaskellSDK.Model.DeepGetResponseTradeBreaks
instance GHC.Classes.Eq IEXHaskellSDK.Model.DeepGetResponseSsrStatus
instance GHC.Show.Show IEXHaskellSDK.Model.DeepGetResponseSsrStatus
instance GHC.Classes.Eq IEXHaskellSDK.Model.DeepGetResponseSecurityEvent
instance GHC.Show.Show IEXHaskellSDK.Model.DeepGetResponseSecurityEvent
instance GHC.Classes.Eq IEXHaskellSDK.Model.DeepGetResponseOpHaltStatus
instance GHC.Show.Show IEXHaskellSDK.Model.DeepGetResponseOpHaltStatus
instance GHC.Classes.Eq IEXHaskellSDK.Model.DeepGetResponseAuction
instance GHC.Show.Show IEXHaskellSDK.Model.DeepGetResponseAuction
instance GHC.Classes.Eq IEXHaskellSDK.Model.StockSymbolDelayedQuoteGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.StockSymbolDelayedQuoteGetResponse
instance GHC.Classes.Eq IEXHaskellSDK.Model.MarketGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.MarketGetResponse
instance GHC.Classes.Eq IEXHaskellSDK.Model.StatsRecentGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.StatsRecentGetResponse
instance GHC.Classes.Eq IEXHaskellSDK.Model.StatsHistoricalDailyGetResponse
instance GHC.Show.Show IEXHaskellSDK.Model.StatsHistoricalDailyGetResponse
instance GHC.Classes.Eq IEXHaskellSDK.Model.Financials
instance GHC.Show.Show IEXHaskellSDK.Model.Financials
instance GHC.Classes.Eq IEXHaskellSDK.Model.Earnings
instance GHC.Show.Show IEXHaskellSDK.Model.Earnings
instance GHC.Classes.Eq IEXHaskellSDK.Model.DividendCoreData
instance GHC.Show.Show IEXHaskellSDK.Model.DividendCoreData
instance GHC.Classes.Eq IEXHaskellSDK.Model.CorporateAction
instance GHC.Show.Show IEXHaskellSDK.Model.CorporateAction
instance GHC.Classes.Eq IEXHaskellSDK.Model.ChartNot1d
instance GHC.Show.Show IEXHaskellSDK.Model.ChartNot1d
instance GHC.Classes.Eq IEXHaskellSDK.Model.ChartAll
instance GHC.Show.Show IEXHaskellSDK.Model.ChartAll
instance GHC.Classes.Eq IEXHaskellSDK.Model.Chart1d
instance GHC.Show.Show IEXHaskellSDK.Model.Chart1d
instance GHC.Classes.Eq IEXHaskellSDK.Model.Article
instance GHC.Show.Show IEXHaskellSDK.Model.Article
instance GHC.Show.Show IEXHaskellSDK.Model.Token
instance GHC.Classes.Eq IEXHaskellSDK.Model.Token
instance GHC.Show.Show IEXHaskellSDK.Model.SymbolsText
instance GHC.Classes.Eq IEXHaskellSDK.Model.SymbolsText
instance GHC.Show.Show IEXHaskellSDK.Model.Symbols
instance GHC.Classes.Eq IEXHaskellSDK.Model.Symbols
instance GHC.Show.Show IEXHaskellSDK.Model.Symbol
instance GHC.Classes.Eq IEXHaskellSDK.Model.Symbol
instance GHC.Show.Show IEXHaskellSDK.Model.Range
instance GHC.Classes.Eq IEXHaskellSDK.Model.Range
instance GHC.Show.Show IEXHaskellSDK.Model.ParamDateInt
instance GHC.Classes.Eq IEXHaskellSDK.Model.ParamDateInt
instance GHC.Show.Show IEXHaskellSDK.Model.ParamDate
instance GHC.Classes.Eq IEXHaskellSDK.Model.ParamDate
instance GHC.Show.Show IEXHaskellSDK.Model.Last
instance GHC.Classes.Eq IEXHaskellSDK.Model.Last
instance GHC.Show.Show IEXHaskellSDK.Model.DisplayPercent
instance GHC.Classes.Eq IEXHaskellSDK.Model.DisplayPercent
instance GHC.Show.Show IEXHaskellSDK.Model.ChartSimplify
instance GHC.Classes.Eq IEXHaskellSDK.Model.ChartSimplify
instance GHC.Show.Show IEXHaskellSDK.Model.ChartReset
instance GHC.Classes.Eq IEXHaskellSDK.Model.ChartReset
instance GHC.Show.Show IEXHaskellSDK.Model.ChartLast
instance GHC.Classes.Eq IEXHaskellSDK.Model.ChartLast
instance GHC.Show.Show IEXHaskellSDK.Model.ChartInterval
instance GHC.Classes.Eq IEXHaskellSDK.Model.ChartInterval
instance GHC.Show.Show IEXHaskellSDK.Model.ChangeFromClose
instance GHC.Classes.Eq IEXHaskellSDK.Model.ChangeFromClose
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.StockSymbolCompanyGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.StockSymbolCompanyGetResponse
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.StockMarketSectorPerformanceGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.StockMarketSectorPerformanceGetResponse
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.TopsGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.TopsGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.Sector
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.Sector
instance Web.Internal.HttpApiData.ToHttpApiData IEXHaskellSDK.Model.Sector
instance Web.Internal.HttpApiData.FromHttpApiData IEXHaskellSDK.Model.Sector
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData IEXHaskellSDK.Model.Sector
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.ModelList
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.ModelList
instance Web.Internal.HttpApiData.ToHttpApiData IEXHaskellSDK.Model.ModelList
instance Web.Internal.HttpApiData.FromHttpApiData IEXHaskellSDK.Model.ModelList
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData IEXHaskellSDK.Model.ModelList
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.StockSymbolDividendsRangeGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.StockSymbolDividendsRangeGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.E'Type2
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.E'Type2
instance Web.Internal.HttpApiData.ToHttpApiData IEXHaskellSDK.Model.E'Type2
instance Web.Internal.HttpApiData.FromHttpApiData IEXHaskellSDK.Model.E'Type2
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData IEXHaskellSDK.Model.E'Type2
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.RefDataSymbolsGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.RefDataSymbolsGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.E'Type
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.E'Type
instance Web.Internal.HttpApiData.ToHttpApiData IEXHaskellSDK.Model.E'Type
instance Web.Internal.HttpApiData.FromHttpApiData IEXHaskellSDK.Model.E'Type
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData IEXHaskellSDK.Model.E'Type
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.DeepGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.DeepGetResponse
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.StockSymbolBookGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.StockSymbolBookGetResponse
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.DeepSystemEventGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.DeepSystemEventGetResponse
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.SystemEvent
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.SystemEvent
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.E'SystemEvent
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.E'SystemEvent
instance Web.Internal.HttpApiData.ToHttpApiData IEXHaskellSDK.Model.E'SystemEvent
instance Web.Internal.HttpApiData.FromHttpApiData IEXHaskellSDK.Model.E'SystemEvent
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData IEXHaskellSDK.Model.E'SystemEvent
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.DeepTradingStatusGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.DeepTradingStatusGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.E'Status
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.E'Status
instance Web.Internal.HttpApiData.ToHttpApiData IEXHaskellSDK.Model.E'Status
instance Web.Internal.HttpApiData.FromHttpApiData IEXHaskellSDK.Model.E'Status
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData IEXHaskellSDK.Model.E'Status
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.DeepSecurityEventGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.DeepSecurityEventGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.E'SecurityEvent
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.E'SecurityEvent
instance Web.Internal.HttpApiData.ToHttpApiData IEXHaskellSDK.Model.E'SecurityEvent
instance Web.Internal.HttpApiData.FromHttpApiData IEXHaskellSDK.Model.E'SecurityEvent
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData IEXHaskellSDK.Model.E'SecurityEvent
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.E'Reason
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.E'Reason
instance Web.Internal.HttpApiData.ToHttpApiData IEXHaskellSDK.Model.E'Reason
instance Web.Internal.HttpApiData.FromHttpApiData IEXHaskellSDK.Model.E'Reason
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData IEXHaskellSDK.Model.E'Reason
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.E'Range2
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.E'Range2
instance Web.Internal.HttpApiData.ToHttpApiData IEXHaskellSDK.Model.E'Range2
instance Web.Internal.HttpApiData.FromHttpApiData IEXHaskellSDK.Model.E'Range2
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData IEXHaskellSDK.Model.E'Range2
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.StockSymbolChartDynamicGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.StockSymbolChartDynamicGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.E'Range
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.E'Range
instance Web.Internal.HttpApiData.ToHttpApiData IEXHaskellSDK.Model.E'Range
instance Web.Internal.HttpApiData.FromHttpApiData IEXHaskellSDK.Model.E'Range
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData IEXHaskellSDK.Model.E'Range
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.E'Qualified
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.E'Qualified
instance Web.Internal.HttpApiData.ToHttpApiData IEXHaskellSDK.Model.E'Qualified
instance Web.Internal.HttpApiData.FromHttpApiData IEXHaskellSDK.Model.E'Qualified
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData IEXHaskellSDK.Model.E'Qualified
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.DeepOfficialPriceGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.DeepOfficialPriceGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.E'PriceType
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.E'PriceType
instance Web.Internal.HttpApiData.ToHttpApiData IEXHaskellSDK.Model.E'PriceType
instance Web.Internal.HttpApiData.FromHttpApiData IEXHaskellSDK.Model.E'PriceType
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData IEXHaskellSDK.Model.E'PriceType
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.E'Period
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.E'Period
instance Web.Internal.HttpApiData.ToHttpApiData IEXHaskellSDK.Model.E'Period
instance Web.Internal.HttpApiData.FromHttpApiData IEXHaskellSDK.Model.E'Period
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData IEXHaskellSDK.Model.E'Period
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.E'ListType
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.E'ListType
instance Web.Internal.HttpApiData.ToHttpApiData IEXHaskellSDK.Model.E'ListType
instance Web.Internal.HttpApiData.FromHttpApiData IEXHaskellSDK.Model.E'ListType
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData IEXHaskellSDK.Model.E'ListType
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.StockMarketTodayEarningsGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.StockMarketTodayEarningsGetResponse
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.TodayEarnings
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.TodayEarnings
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.TodayEarningsAllOf
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.TodayEarningsAllOf
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.Quote
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.Quote
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.E'LatestSource
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.E'LatestSource
instance Web.Internal.HttpApiData.ToHttpApiData IEXHaskellSDK.Model.E'LatestSource
instance Web.Internal.HttpApiData.FromHttpApiData IEXHaskellSDK.Model.E'LatestSource
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData IEXHaskellSDK.Model.E'LatestSource
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.E'IssueType
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.E'IssueType
instance Web.Internal.HttpApiData.ToHttpApiData IEXHaskellSDK.Model.E'IssueType
instance Web.Internal.HttpApiData.FromHttpApiData IEXHaskellSDK.Model.E'IssueType
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData IEXHaskellSDK.Model.E'IssueType
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.E'Inner
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.E'Inner
instance Web.Internal.HttpApiData.ToHttpApiData IEXHaskellSDK.Model.E'Inner
instance Web.Internal.HttpApiData.FromHttpApiData IEXHaskellSDK.Model.E'Inner
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData IEXHaskellSDK.Model.E'Inner
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.E'Format2
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.E'Format2
instance Web.Internal.HttpApiData.ToHttpApiData IEXHaskellSDK.Model.E'Format2
instance Web.Internal.HttpApiData.FromHttpApiData IEXHaskellSDK.Model.E'Format2
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData IEXHaskellSDK.Model.E'Format2
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.E'Format
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.E'Format
instance Web.Internal.HttpApiData.ToHttpApiData IEXHaskellSDK.Model.E'Format
instance Web.Internal.HttpApiData.FromHttpApiData IEXHaskellSDK.Model.E'Format
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData IEXHaskellSDK.Model.E'Format
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.E'Flag
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.E'Flag
instance Web.Internal.HttpApiData.ToHttpApiData IEXHaskellSDK.Model.E'Flag
instance Web.Internal.HttpApiData.FromHttpApiData IEXHaskellSDK.Model.E'Flag
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData IEXHaskellSDK.Model.E'Flag
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.E'CalculationPrice
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.E'CalculationPrice
instance Web.Internal.HttpApiData.ToHttpApiData IEXHaskellSDK.Model.E'CalculationPrice
instance Web.Internal.HttpApiData.FromHttpApiData IEXHaskellSDK.Model.E'CalculationPrice
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData IEXHaskellSDK.Model.E'CalculationPrice
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.Auction
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.Auction
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.E'AuctionType
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.E'AuctionType
instance Web.Internal.HttpApiData.ToHttpApiData IEXHaskellSDK.Model.E'AuctionType
instance Web.Internal.HttpApiData.FromHttpApiData IEXHaskellSDK.Model.E'AuctionType
instance IEXHaskellSDK.MimeTypes.MimeRender IEXHaskellSDK.MimeTypes.MimeMultipartFormData IEXHaskellSDK.Model.E'AuctionType
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.Trade
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.Trade
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.StatsIntradayGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.StatsIntradayGetResponse
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.TimestampedValue
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.TimestampedValue
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.Stats
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.Stats
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.ShortInterest
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.ShortInterest
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.StatsRecordsGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.StatsRecordsGetResponse
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.RecordedValue
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.RecordedValue
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.PriceData
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.PriceData
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.DeepBookGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.DeepBookGetResponse
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.Order
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.Order
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.OhlcData
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.OhlcData
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.OhlcDataOpen
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.OhlcDataOpen
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.OhlcDataClose
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.OhlcDataClose
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.ListedSymbolData
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.ListedSymbolData
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.StockMarketUpcomingIposGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.StockMarketUpcomingIposGetResponse
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.IpoViewData
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.IpoViewData
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.IpoRawData
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.IpoRawData
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.DeepOpHaltStatusGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.DeepOpHaltStatusGetResponse
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.StockSymbolVolumeByVenueGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.StockSymbolVolumeByVenueGetResponse
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.StocksSymbolSplitsRangeGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.StocksSymbolSplitsRangeGetResponse
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.TopsLastGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.TopsLastGetResponse
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.StockSymbolRelevantGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.StockSymbolRelevantGetResponse
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.StockSymbolLogoGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.StockSymbolLogoGetResponse
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.StockSymbolLargestTradesGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.StockSymbolLargestTradesGetResponse
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.StockSymbolStatsGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.StockSymbolStatsGetResponse
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.StockMarketThresholdSecuritiesGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.StockMarketThresholdSecuritiesGetResponse
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.StockSymbolFinancialsGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.StockSymbolFinancialsGetResponse
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.StockSymbolEffectiveSpreadGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.StockSymbolEffectiveSpreadGetResponse
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.StockSymbolEarningsGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.StockSymbolEarningsGetResponse
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.HistGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.HistGetResponse
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.DeepGetResponseTradingStatus
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.DeepGetResponseTradingStatus
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.DeepGetResponseTradeBreaks
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.DeepGetResponseTradeBreaks
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.DeepGetResponseSsrStatus
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.DeepGetResponseSsrStatus
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.DeepGetResponseSecurityEvent
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.DeepGetResponseSecurityEvent
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.DeepGetResponseOpHaltStatus
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.DeepGetResponseOpHaltStatus
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.DeepGetResponseAuction
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.DeepGetResponseAuction
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.StockSymbolDelayedQuoteGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.StockSymbolDelayedQuoteGetResponse
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.MarketGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.MarketGetResponse
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.StatsRecentGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.StatsRecentGetResponse
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.StatsHistoricalDailyGetResponse
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.StatsHistoricalDailyGetResponse
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.Financials
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.Financials
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.Earnings
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.Earnings
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.DividendCoreData
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.DividendCoreData
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.CorporateAction
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.CorporateAction
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.ChartNot1d
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.ChartNot1d
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.ChartAll
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.ChartAll
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.Chart1d
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.Chart1d
instance Data.Aeson.Types.FromJSON.FromJSON IEXHaskellSDK.Model.Article
instance Data.Aeson.Types.ToJSON.ToJSON IEXHaskellSDK.Model.Article


module IEXHaskellSDK.API.ApiDefault

-- | <pre>
--   GET /deep/auction
--   </pre>
deepAuctionGet :: IEXHaskellSDKRequest DeepAuctionGet MimeNoContent (Map String Auction) MimeJSON
data DeepAuctionGet

-- | <pre>
--   GET /deep/book
--   </pre>
deepBookGet :: IEXHaskellSDKRequest DeepBookGet MimeNoContent (Map String DeepBookGetResponse) MimeJSON
data DeepBookGet

-- | <pre>
--   GET /deep
--   </pre>
deepGet :: SymbolsText -> IEXHaskellSDKRequest DeepGet MimeNoContent DeepGetResponse MimeJSON
data DeepGet

-- | <pre>
--   GET /deep/official-price
--   </pre>
deepOfficialPriceGet :: Symbols -> IEXHaskellSDKRequest DeepOfficialPriceGet MimeNoContent (Map String DeepOfficialPriceGetResponse) MimeJSON
data DeepOfficialPriceGet

-- | <pre>
--   GET /deep/op-halt-status
--   </pre>
deepOpHaltStatusGet :: IEXHaskellSDKRequest DeepOpHaltStatusGet MimeNoContent (Map String DeepOpHaltStatusGetResponse) MimeJSON
data DeepOpHaltStatusGet

-- | <pre>
--   GET /deep/security-event
--   </pre>
deepSecurityEventGet :: IEXHaskellSDKRequest DeepSecurityEventGet MimeNoContent (Map String DeepSecurityEventGetResponse) MimeJSON
data DeepSecurityEventGet

-- | <pre>
--   GET /deep/ssr-status
--   </pre>
deepSsrStatusGet :: IEXHaskellSDKRequest DeepSsrStatusGet MimeNoContent (Map String DeepGetResponseSsrStatus) MimeJSON
data DeepSsrStatusGet

-- | <pre>
--   GET /deep/system-event
--   </pre>
deepSystemEventGet :: IEXHaskellSDKRequest DeepSystemEventGet MimeNoContent DeepSystemEventGetResponse MimeJSON
data DeepSystemEventGet

-- | <pre>
--   GET /deep/trade-breaks
--   </pre>
deepTradeBreaksGet :: IEXHaskellSDKRequest DeepTradeBreaksGet MimeNoContent (Map String [Trade]) MimeJSON
data DeepTradeBreaksGet

-- | <pre>
--   GET /deep/trades
--   </pre>
deepTradesGet :: IEXHaskellSDKRequest DeepTradesGet MimeNoContent (Map String [Trade]) MimeJSON
data DeepTradesGet

-- | <pre>
--   GET /deep/trading-status
--   </pre>
deepTradingStatusGet :: IEXHaskellSDKRequest DeepTradingStatusGet MimeNoContent (Map String DeepTradingStatusGetResponse) MimeJSON
data DeepTradingStatusGet

-- | <pre>
--   GET /hist
--   </pre>
histGet :: IEXHaskellSDKRequest HistGet MimeNoContent [HistGetResponse] MimeJSON
data HistGet

-- | <pre>
--   GET /market
--   </pre>
marketGet :: IEXHaskellSDKRequest MarketGet MimeNoContent [MarketGetResponse] MimeJSON
data MarketGet

-- | <pre>
--   GET /ref-data/daily-list/corporate-actions/{date}
--   </pre>
refDataDailyListCorporateActionsDateGet :: ParamDate -> IEXHaskellSDKRequest RefDataDailyListCorporateActionsDateGet MimeNoContent [CorporateAction] MimeJSON
data RefDataDailyListCorporateActionsDateGet

-- | <pre>
--   GET /ref-data/daily-list/corporate-actions
--   </pre>
refDataDailyListCorporateActionsGet :: IEXHaskellSDKRequest RefDataDailyListCorporateActionsGet MimeNoContent [CorporateAction] MimeJSON
data RefDataDailyListCorporateActionsGet

-- | <pre>
--   GET /ref-data/daily-list/dividends/{date}
--   </pre>
refDataDailyListDividendsDateGet :: ParamDate -> IEXHaskellSDKRequest RefDataDailyListDividendsDateGet MimeNoContent [DividendCoreData] MimeJSON
data RefDataDailyListDividendsDateGet

-- | <pre>
--   GET /ref-data/daily-list/dividends
--   </pre>
refDataDailyListDividendsGet :: IEXHaskellSDKRequest RefDataDailyListDividendsGet MimeNoContent [DividendCoreData] MimeJSON
data RefDataDailyListDividendsGet

-- | <pre>
--   GET /ref-data/daily-list/next-day-ex-date/{date}
--   </pre>
refDataDailyListNextDayExDateDateGet :: ParamDate -> IEXHaskellSDKRequest RefDataDailyListNextDayExDateDateGet MimeNoContent [DividendCoreData] MimeJSON
data RefDataDailyListNextDayExDateDateGet

-- | <pre>
--   GET /ref-data/daily-list/next-day-ex-date
--   </pre>
refDataDailyListNextDayExDateGet :: IEXHaskellSDKRequest RefDataDailyListNextDayExDateGet MimeNoContent [DividendCoreData] MimeJSON
data RefDataDailyListNextDayExDateGet

-- | <pre>
--   GET /ref-data/daily-list/symbol-directory/{date}
--   </pre>
refDataDailyListSymbolDirectoryDateGet :: ParamDate -> IEXHaskellSDKRequest RefDataDailyListSymbolDirectoryDateGet MimeNoContent [ListedSymbolData] MimeJSON
data RefDataDailyListSymbolDirectoryDateGet

-- | <pre>
--   GET /ref-data/daily-list/symbol-directory
--   </pre>
refDataDailyListSymbolDirectoryGet :: IEXHaskellSDKRequest RefDataDailyListSymbolDirectoryGet MimeNoContent [ListedSymbolData] MimeJSON
data RefDataDailyListSymbolDirectoryGet

-- | <pre>
--   GET /ref-data/symbols
--   </pre>
refDataSymbolsGet :: IEXHaskellSDKRequest RefDataSymbolsGet MimeNoContent [RefDataSymbolsGetResponse] MimeJSON
data RefDataSymbolsGet

-- | <pre>
--   GET /stats/historical/daily
--   </pre>
statsHistoricalDailyGet :: IEXHaskellSDKRequest StatsHistoricalDailyGet MimeNoContent [StatsHistoricalDailyGetResponse] MimeJSON
data StatsHistoricalDailyGet

-- | <pre>
--   GET /stats/historical
--   </pre>
statsHistoricalGet :: IEXHaskellSDKRequest StatsHistoricalGet MimeNoContent [Stats] MimeJSON
data StatsHistoricalGet

-- | <pre>
--   GET /stats/intraday
--   </pre>
statsIntradayGet :: IEXHaskellSDKRequest StatsIntradayGet MimeNoContent StatsIntradayGetResponse MimeJSON
data StatsIntradayGet

-- | <pre>
--   GET /stats/recent
--   </pre>
statsRecentGet :: IEXHaskellSDKRequest StatsRecentGet MimeNoContent [StatsRecentGetResponse] MimeJSON
data StatsRecentGet

-- | <pre>
--   GET /stats/records
--   </pre>
statsRecordsGet :: IEXHaskellSDKRequest StatsRecordsGet MimeNoContent StatsRecordsGetResponse MimeJSON
data StatsRecordsGet

-- | <pre>
--   GET /stock/market/collection/list
--   </pre>
stockMarketCollectionListGet :: CollectionName2 -> IEXHaskellSDKRequest StockMarketCollectionListGet MimeNoContent [Quote] MimeJSON
data StockMarketCollectionListGet

-- | <pre>
--   GET /stock/market/collection/sector
--   </pre>
stockMarketCollectionSectorGet :: CollectionName -> IEXHaskellSDKRequest StockMarketCollectionSectorGet MimeNoContent [Quote] MimeJSON
data StockMarketCollectionSectorGet

-- | <pre>
--   GET /stock/market/collection/tag
--   </pre>
stockMarketCollectionTagGet :: CollectionName -> IEXHaskellSDKRequest StockMarketCollectionTagGet MimeNoContent [Quote] MimeJSON
data StockMarketCollectionTagGet

-- | <pre>
--   GET /stock/market/crypto
--   </pre>
stockMarketCryptoGet :: IEXHaskellSDKRequest StockMarketCryptoGet MimeNoContent [Quote] MimeJSON
data StockMarketCryptoGet

-- | <pre>
--   GET /stock/market/list/{listType}
--   </pre>
stockMarketListListTypeGet :: ListType -> IEXHaskellSDKRequest StockMarketListListTypeGet MimeNoContent [Quote] MimeJSON
data StockMarketListListTypeGet

-- | <pre>
--   GET /stock/market/news
--   </pre>
stockMarketNewsGet :: IEXHaskellSDKRequest StockMarketNewsGet MimeNoContent [Article] MimeJSON
data StockMarketNewsGet

-- | <pre>
--   GET /stock/market/news/last/{last}
--   </pre>
stockMarketNewsLastLastGet :: Last -> IEXHaskellSDKRequest StockMarketNewsLastLastGet MimeNoContent [Article] MimeJSON
data StockMarketNewsLastLastGet

-- | <pre>
--   GET /stock/market/ohlc
--   </pre>
stockMarketOhlcGet :: IEXHaskellSDKRequest StockMarketOhlcGet MimeNoContent (Map String OhlcData) MimeJSON
data StockMarketOhlcGet

-- | <pre>
--   GET /stock/market/previous
--   </pre>
stockMarketPreviousGet :: IEXHaskellSDKRequest StockMarketPreviousGet MimeNoContent (Map String PriceData) MimeJSON
data StockMarketPreviousGet

-- | <pre>
--   GET /stock/market/sector-performance
--   </pre>
stockMarketSectorPerformanceGet :: IEXHaskellSDKRequest StockMarketSectorPerformanceGet MimeNoContent [StockMarketSectorPerformanceGetResponse] MimeJSON
data StockMarketSectorPerformanceGet

-- | <pre>
--   GET /stock/market/short-interest/{date}
--   </pre>
stockMarketShortInterestDateGet :: Symbol -> ParamDate -> IEXHaskellSDKRequest StockMarketShortInterestDateGet MimeNoContent [ShortInterest] MimeJSON
data StockMarketShortInterestDateGet

-- | <pre>
--   GET /stock/market/short-interest
--   </pre>
stockMarketShortInterestGet :: Symbol -> IEXHaskellSDKRequest StockMarketShortInterestGet MimeNoContent [ShortInterest] MimeJSON
data StockMarketShortInterestGet

-- | <pre>
--   GET /stock/market/threshold-securities/{date}
--   </pre>
stockMarketThresholdSecuritiesDateGet :: ParamDate -> IEXHaskellSDKRequest StockMarketThresholdSecuritiesDateGet MimeNoContent [StockMarketThresholdSecuritiesGetResponse] MimeJSON
data StockMarketThresholdSecuritiesDateGet

-- | <pre>
--   GET /stock/market/threshold-securities
--   </pre>
stockMarketThresholdSecuritiesGet :: IEXHaskellSDKRequest StockMarketThresholdSecuritiesGet MimeNoContent [StockMarketThresholdSecuritiesGetResponse] MimeJSON
data StockMarketThresholdSecuritiesGet

-- | <pre>
--   GET /stock/market/today-earnings
--   </pre>
stockMarketTodayEarningsGet :: IEXHaskellSDKRequest StockMarketTodayEarningsGet MimeNoContent StockMarketTodayEarningsGetResponse MimeJSON
data StockMarketTodayEarningsGet

-- | <pre>
--   GET /stock/market/today-ipos
--   </pre>
stockMarketTodayIposGet :: IEXHaskellSDKRequest StockMarketTodayIposGet MimeNoContent StockMarketUpcomingIposGetResponse MimeJSON
data StockMarketTodayIposGet

-- | <pre>
--   GET /stock/market/upcoming-ipos
--   </pre>
stockMarketUpcomingIposGet :: IEXHaskellSDKRequest StockMarketUpcomingIposGet MimeNoContent StockMarketUpcomingIposGetResponse MimeJSON
data StockMarketUpcomingIposGet

-- | <pre>
--   GET /stock/{symbol}/batch
--   </pre>
stockSymbolBatchGet :: Symbol -> Types -> IEXHaskellSDKRequest StockSymbolBatchGet MimeNoContent Value MimeJSON
data StockSymbolBatchGet

-- | <pre>
--   GET /stock/{symbol}/book
--   </pre>
stockSymbolBookGet :: Symbol -> IEXHaskellSDKRequest StockSymbolBookGet MimeNoContent StockSymbolBookGetResponse MimeJSON
data StockSymbolBookGet

-- | <pre>
--   GET /stock/{symbol}/chart/1d
--   </pre>
stockSymbolChart1dGet :: Symbol -> IEXHaskellSDKRequest StockSymbolChart1dGet MimeNoContent [ChartAll] MimeJSON
data StockSymbolChart1dGet

-- | <pre>
--   GET /stock/{symbol}/chart/date/{date}
--   </pre>
stockSymbolChartDateDateGet :: Symbol -> ParamDate -> IEXHaskellSDKRequest StockSymbolChartDateDateGet MimeNoContent ChartAll MimeJSON
data StockSymbolChartDateDateGet

-- | <pre>
--   GET /stock/{symbol}/chart/dynamic
--   </pre>
stockSymbolChartDynamicGet :: Symbol -> IEXHaskellSDKRequest StockSymbolChartDynamicGet MimeNoContent StockSymbolChartDynamicGetResponse MimeJSON
data StockSymbolChartDynamicGet

-- | <pre>
--   GET /stock/{symbol}/chart/{range}
--   </pre>
stockSymbolChartRangeGet :: Symbol -> Range2 -> IEXHaskellSDKRequest StockSymbolChartRangeGet MimeNoContent [ChartAll] MimeJSON
data StockSymbolChartRangeGet

-- | <pre>
--   GET /stock/{symbol}/company
--   </pre>
stockSymbolCompanyGet :: Symbol -> IEXHaskellSDKRequest StockSymbolCompanyGet MimeNoContent StockSymbolCompanyGetResponse MimeJSON
data StockSymbolCompanyGet

-- | <pre>
--   GET /stock/{symbol}/delayed-quote
--   </pre>
stockSymbolDelayedQuoteGet :: Symbol -> IEXHaskellSDKRequest StockSymbolDelayedQuoteGet MimeNoContent StockSymbolDelayedQuoteGetResponse MimeJSON
data StockSymbolDelayedQuoteGet

-- | <pre>
--   GET /stock/{symbol}/dividends/{range}
--   </pre>
stockSymbolDividendsRangeGet :: Symbol -> Range2 -> IEXHaskellSDKRequest StockSymbolDividendsRangeGet MimeNoContent [StockSymbolDividendsRangeGetResponse] MimeJSON
data StockSymbolDividendsRangeGet

-- | <pre>
--   GET /stock/{symbol}/earnings
--   </pre>
stockSymbolEarningsGet :: Symbol -> IEXHaskellSDKRequest StockSymbolEarningsGet MimeNoContent StockSymbolEarningsGetResponse MimeJSON
data StockSymbolEarningsGet

-- | <pre>
--   GET /stock/{symbol}/effective-spread
--   </pre>
stockSymbolEffectiveSpreadGet :: Symbol -> IEXHaskellSDKRequest StockSymbolEffectiveSpreadGet MimeNoContent [StockSymbolEffectiveSpreadGetResponse] MimeJSON
data StockSymbolEffectiveSpreadGet

-- | <pre>
--   GET /stock/{symbol}/financials
--   </pre>
stockSymbolFinancialsGet :: Symbol -> IEXHaskellSDKRequest StockSymbolFinancialsGet MimeNoContent StockSymbolFinancialsGetResponse MimeJSON
data StockSymbolFinancialsGet

-- | <pre>
--   GET /stock/{symbol}/largest-trades
--   </pre>
stockSymbolLargestTradesGet :: Symbol -> IEXHaskellSDKRequest StockSymbolLargestTradesGet MimeNoContent [StockSymbolLargestTradesGetResponse] MimeJSON
data StockSymbolLargestTradesGet

-- | <pre>
--   GET /stock/{symbol}/logo
--   </pre>
stockSymbolLogoGet :: Symbol -> IEXHaskellSDKRequest StockSymbolLogoGet MimeNoContent StockSymbolLogoGetResponse MimeJSON
data StockSymbolLogoGet

-- | <pre>
--   GET /stock/{symbol}/news
--   </pre>
stockSymbolNewsGet :: Symbol -> IEXHaskellSDKRequest StockSymbolNewsGet MimeNoContent [Article] MimeJSON
data StockSymbolNewsGet

-- | <pre>
--   GET /stock/{symbol}/news/last/{last}
--   </pre>
stockSymbolNewsLastLastGet :: Symbol -> Last -> IEXHaskellSDKRequest StockSymbolNewsLastLastGet MimeNoContent [Article] MimeJSON
data StockSymbolNewsLastLastGet

-- | <pre>
--   GET /stock/{symbol}/ohlc
--   </pre>
stockSymbolOhlcGet :: Symbol -> IEXHaskellSDKRequest StockSymbolOhlcGet MimeNoContent OhlcData MimeJSON
data StockSymbolOhlcGet

-- | <pre>
--   GET /stock/{symbol}/peers
--   </pre>
stockSymbolPeersGet :: Symbol -> IEXHaskellSDKRequest StockSymbolPeersGet MimeNoContent [Text] MimeJSON
data StockSymbolPeersGet

-- | <pre>
--   GET /stock/{symbol}/previous
--   </pre>
stockSymbolPreviousGet :: Symbol -> IEXHaskellSDKRequest StockSymbolPreviousGet MimeNoContent PriceData MimeJSON
data StockSymbolPreviousGet

-- | <pre>
--   GET /stock/{symbol}/price
--   </pre>
stockSymbolPriceGet :: Symbol -> IEXHaskellSDKRequest StockSymbolPriceGet MimeNoContent Double MimeJSON
data StockSymbolPriceGet

-- | <pre>
--   GET /stock/{symbol}/quote
--   </pre>
stockSymbolQuoteGet :: Symbol -> IEXHaskellSDKRequest StockSymbolQuoteGet MimeNoContent Quote MimeJSON
data StockSymbolQuoteGet

-- | <pre>
--   GET /stock/{symbol}/relevant
--   </pre>
stockSymbolRelevantGet :: Symbol -> IEXHaskellSDKRequest StockSymbolRelevantGet MimeNoContent StockSymbolRelevantGetResponse MimeJSON
data StockSymbolRelevantGet

-- | <pre>
--   GET /stock/{symbol}/short-interest/{date}
--   </pre>
stockSymbolShortInterestDateGet :: Symbol -> ParamDate -> IEXHaskellSDKRequest StockSymbolShortInterestDateGet MimeNoContent [ShortInterest] MimeJSON
data StockSymbolShortInterestDateGet

-- | <pre>
--   GET /stock/{symbol}/short-interest
--   </pre>
stockSymbolShortInterestGet :: Symbol -> IEXHaskellSDKRequest StockSymbolShortInterestGet MimeNoContent [ShortInterest] MimeJSON
data StockSymbolShortInterestGet

-- | <pre>
--   GET /stock/{symbol}/stats
--   </pre>
stockSymbolStatsGet :: Symbol -> IEXHaskellSDKRequest StockSymbolStatsGet MimeNoContent StockSymbolStatsGetResponse MimeJSON
data StockSymbolStatsGet

-- | <pre>
--   GET /stock/{symbol}/volume-by-venue
--   </pre>
stockSymbolVolumeByVenueGet :: Symbol -> IEXHaskellSDKRequest StockSymbolVolumeByVenueGet MimeNoContent [StockSymbolVolumeByVenueGetResponse] MimeJSON
data StockSymbolVolumeByVenueGet

-- | <pre>
--   GET /stocks/{symbol}/splits/{range}
--   </pre>
stocksSymbolSplitsRangeGet :: Symbol -> Range2 -> IEXHaskellSDKRequest StocksSymbolSplitsRangeGet MimeNoContent [StocksSymbolSplitsRangeGetResponse] MimeJSON
data StocksSymbolSplitsRangeGet

-- | <pre>
--   GET /tops
--   </pre>
topsGet :: IEXHaskellSDKRequest TopsGet MimeNoContent [TopsGetResponse] MimeJSON
data TopsGet

-- | <pre>
--   GET /tops/last
--   </pre>
topsLastGet :: IEXHaskellSDKRequest TopsLastGet MimeNoContent [TopsLastGetResponse] MimeJSON
data TopsLastGet
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.TopsLastGet IEXHaskellSDK.Model.Symbols
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.TopsLastGet IEXHaskellSDK.Model.Format
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.TopsLastGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.TopsGet IEXHaskellSDK.Model.Symbols
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.TopsGet IEXHaskellSDK.Model.Format
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.TopsGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StocksSymbolSplitsRangeGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockSymbolVolumeByVenueGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockSymbolStatsGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StockSymbolShortInterestGet IEXHaskellSDK.Model.Format2
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockSymbolShortInterestGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StockSymbolShortInterestDateGet IEXHaskellSDK.Model.Format2
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockSymbolShortInterestDateGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockSymbolRelevantGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StockSymbolQuoteGet IEXHaskellSDK.Model.DisplayPercent
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockSymbolQuoteGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockSymbolPriceGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockSymbolPreviousGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockSymbolPeersGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockSymbolOhlcGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockSymbolNewsLastLastGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockSymbolNewsGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockSymbolLogoGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockSymbolLargestTradesGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StockSymbolFinancialsGet IEXHaskellSDK.Model.Period
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockSymbolFinancialsGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockSymbolEffectiveSpreadGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockSymbolEarningsGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockSymbolDividendsRangeGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockSymbolDelayedQuoteGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockSymbolCompanyGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StockSymbolChartRangeGet IEXHaskellSDK.Model.ChartReset
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StockSymbolChartRangeGet IEXHaskellSDK.Model.ChartSimplify
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StockSymbolChartRangeGet IEXHaskellSDK.Model.ChartInterval
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StockSymbolChartRangeGet IEXHaskellSDK.Model.ChangeFromClose
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StockSymbolChartRangeGet IEXHaskellSDK.Model.ChartLast
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockSymbolChartRangeGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StockSymbolChartDynamicGet IEXHaskellSDK.Model.ChartReset
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StockSymbolChartDynamicGet IEXHaskellSDK.Model.ChartSimplify
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StockSymbolChartDynamicGet IEXHaskellSDK.Model.ChartInterval
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StockSymbolChartDynamicGet IEXHaskellSDK.Model.ChangeFromClose
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StockSymbolChartDynamicGet IEXHaskellSDK.Model.ChartLast
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockSymbolChartDynamicGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StockSymbolChartDateDateGet IEXHaskellSDK.Model.ChartReset
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StockSymbolChartDateDateGet IEXHaskellSDK.Model.ChartSimplify
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StockSymbolChartDateDateGet IEXHaskellSDK.Model.ChartInterval
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StockSymbolChartDateDateGet IEXHaskellSDK.Model.ChangeFromClose
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StockSymbolChartDateDateGet IEXHaskellSDK.Model.ChartLast
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockSymbolChartDateDateGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StockSymbolChart1dGet IEXHaskellSDK.Model.ChartReset
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StockSymbolChart1dGet IEXHaskellSDK.Model.ChartSimplify
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StockSymbolChart1dGet IEXHaskellSDK.Model.ChartInterval
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StockSymbolChart1dGet IEXHaskellSDK.Model.ChangeFromClose
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StockSymbolChart1dGet IEXHaskellSDK.Model.ChartLast
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockSymbolChart1dGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockSymbolBookGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StockSymbolBatchGet IEXHaskellSDK.Model.Range
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockSymbolBatchGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockMarketUpcomingIposGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockMarketTodayIposGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockMarketTodayEarningsGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StockMarketThresholdSecuritiesGet IEXHaskellSDK.Model.Format2
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StockMarketThresholdSecuritiesGet IEXHaskellSDK.Model.Token
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockMarketThresholdSecuritiesGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StockMarketThresholdSecuritiesDateGet IEXHaskellSDK.Model.Format2
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StockMarketThresholdSecuritiesDateGet IEXHaskellSDK.Model.Token
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockMarketThresholdSecuritiesDateGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StockMarketShortInterestGet IEXHaskellSDK.Model.Format2
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockMarketShortInterestGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StockMarketShortInterestDateGet IEXHaskellSDK.Model.Format2
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockMarketShortInterestDateGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockMarketSectorPerformanceGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockMarketPreviousGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockMarketOhlcGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockMarketNewsLastLastGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockMarketNewsGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StockMarketListListTypeGet IEXHaskellSDK.Model.DisplayPercent
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockMarketListListTypeGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockMarketCryptoGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockMarketCollectionTagGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockMarketCollectionSectorGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StockMarketCollectionListGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StatsRecordsGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StatsRecentGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StatsIntradayGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StatsHistoricalGet IEXHaskellSDK.Model.ParamDateInt
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StatsHistoricalGet IEXHaskellSDK.Model.Format
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StatsHistoricalGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StatsHistoricalDailyGet IEXHaskellSDK.Model.Format
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StatsHistoricalDailyGet IEXHaskellSDK.Model.Last
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.StatsHistoricalDailyGet IEXHaskellSDK.Model.ParamDateInt
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.StatsHistoricalDailyGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.RefDataSymbolsGet IEXHaskellSDK.Model.Format
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.RefDataSymbolsGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.RefDataDailyListSymbolDirectoryGet IEXHaskellSDK.Model.Format2
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.RefDataDailyListSymbolDirectoryGet IEXHaskellSDK.Model.Token
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.RefDataDailyListSymbolDirectoryGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.RefDataDailyListSymbolDirectoryDateGet IEXHaskellSDK.Model.Format2
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.RefDataDailyListSymbolDirectoryDateGet IEXHaskellSDK.Model.Token
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.RefDataDailyListSymbolDirectoryDateGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.RefDataDailyListNextDayExDateGet IEXHaskellSDK.Model.Format2
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.RefDataDailyListNextDayExDateGet IEXHaskellSDK.Model.Token
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.RefDataDailyListNextDayExDateGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.RefDataDailyListNextDayExDateDateGet IEXHaskellSDK.Model.Format2
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.RefDataDailyListNextDayExDateDateGet IEXHaskellSDK.Model.Token
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.RefDataDailyListNextDayExDateDateGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.RefDataDailyListDividendsGet IEXHaskellSDK.Model.Format2
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.RefDataDailyListDividendsGet IEXHaskellSDK.Model.Token
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.RefDataDailyListDividendsGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.RefDataDailyListDividendsDateGet IEXHaskellSDK.Model.Format2
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.RefDataDailyListDividendsDateGet IEXHaskellSDK.Model.Token
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.RefDataDailyListDividendsDateGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.RefDataDailyListCorporateActionsGet IEXHaskellSDK.Model.Format2
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.RefDataDailyListCorporateActionsGet IEXHaskellSDK.Model.Token
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.RefDataDailyListCorporateActionsGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.RefDataDailyListCorporateActionsDateGet IEXHaskellSDK.Model.Format2
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.RefDataDailyListCorporateActionsDateGet IEXHaskellSDK.Model.Token
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.RefDataDailyListCorporateActionsDateGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.MarketGet IEXHaskellSDK.Model.Format
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.MarketGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.HistGet IEXHaskellSDK.Model.ParamDate
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.HistGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.DeepTradingStatusGet IEXHaskellSDK.Model.Symbols
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.DeepTradingStatusGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.DeepTradesGet IEXHaskellSDK.Model.Symbols
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.DeepTradesGet IEXHaskellSDK.Model.Last
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.DeepTradesGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.DeepTradeBreaksGet IEXHaskellSDK.Model.Symbols
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.DeepTradeBreaksGet IEXHaskellSDK.Model.Last
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.DeepTradeBreaksGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.DeepSystemEventGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.DeepSsrStatusGet IEXHaskellSDK.Model.Symbols
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.DeepSsrStatusGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.DeepSecurityEventGet IEXHaskellSDK.Model.Symbols
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.DeepSecurityEventGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.DeepOpHaltStatusGet IEXHaskellSDK.Model.Symbols
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.DeepOpHaltStatusGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.DeepOfficialPriceGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.DeepGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.DeepBookGet IEXHaskellSDK.Model.Symbols
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.DeepBookGet IEXHaskellSDK.MimeTypes.MimeJSON
instance IEXHaskellSDK.Core.HasOptionalParam IEXHaskellSDK.API.ApiDefault.DeepAuctionGet IEXHaskellSDK.Model.Symbols
instance IEXHaskellSDK.MimeTypes.Produces IEXHaskellSDK.API.ApiDefault.DeepAuctionGet IEXHaskellSDK.MimeTypes.MimeJSON


module IEXHaskellSDK.API


module IEXHaskellSDK.ModelLens

-- | <a>articleDatetime</a> Lens
articleDatetimeL :: Lens_' Article (Maybe DateTime)

-- | <a>articleHeadline</a> Lens
articleHeadlineL :: Lens_' Article (Maybe Text)

-- | <a>articleSource</a> Lens
articleSourceL :: Lens_' Article (Maybe Text)

-- | <a>articleUrl</a> Lens
articleUrlL :: Lens_' Article (Maybe Text)

-- | <a>articleSummary</a> Lens
articleSummaryL :: Lens_' Article (Maybe Text)

-- | <a>articleRelated</a> Lens
articleRelatedL :: Lens_' Article (Maybe Text)

-- | <a>articleImage</a> Lens
articleImageL :: Lens_' Article (Maybe Text)

-- | <a>auctionAuctionType</a> Lens
auctionAuctionTypeL :: Lens_' Auction (Maybe E'AuctionType)

-- | <a>auctionPairedShares</a> Lens
auctionPairedSharesL :: Lens_' Auction (Maybe Double)

-- | <a>auctionImbalanceShares</a> Lens
auctionImbalanceSharesL :: Lens_' Auction (Maybe Double)

-- | <a>auctionReferencePrice</a> Lens
auctionReferencePriceL :: Lens_' Auction (Maybe Double)

-- | <a>auctionIndicativePrice</a> Lens
auctionIndicativePriceL :: Lens_' Auction (Maybe Double)

-- | <a>auctionAuctionBookPrice</a> Lens
auctionAuctionBookPriceL :: Lens_' Auction (Maybe Double)

-- | <a>auctionCollarReferencePrice</a> Lens
auctionCollarReferencePriceL :: Lens_' Auction (Maybe Double)

-- | <a>auctionLowerCollarPrice</a> Lens
auctionLowerCollarPriceL :: Lens_' Auction (Maybe Double)

-- | <a>auctionUpperCollarPrice</a> Lens
auctionUpperCollarPriceL :: Lens_' Auction (Maybe Double)

-- | <a>auctionExtensionNumber</a> Lens
auctionExtensionNumberL :: Lens_' Auction (Maybe Double)

-- | <a>auctionStartTime</a> Lens
auctionStartTimeL :: Lens_' Auction (Maybe Text)

-- | <a>auctionLastUpdate</a> Lens
auctionLastUpdateL :: Lens_' Auction (Maybe Double)

-- | <a>chart1dMinute</a> Lens
chart1dMinuteL :: Lens_' Chart1d (Maybe Text)

-- | <a>chart1dMarketAverage</a> Lens
chart1dMarketAverageL :: Lens_' Chart1d (Maybe Double)

-- | <a>chart1dMarketNotional</a> Lens
chart1dMarketNotionalL :: Lens_' Chart1d (Maybe Double)

-- | <a>chart1dMarketNumberOfTrades</a> Lens
chart1dMarketNumberOfTradesL :: Lens_' Chart1d (Maybe Double)

-- | <a>chart1dMarketOpen</a> Lens
chart1dMarketOpenL :: Lens_' Chart1d (Maybe Double)

-- | <a>chart1dMarketClose</a> Lens
chart1dMarketCloseL :: Lens_' Chart1d (Maybe Double)

-- | <a>chart1dMarketHigh</a> Lens
chart1dMarketHighL :: Lens_' Chart1d (Maybe Double)

-- | <a>chart1dMarketLow</a> Lens
chart1dMarketLowL :: Lens_' Chart1d (Maybe Double)

-- | <a>chart1dMarketVolume</a> Lens
chart1dMarketVolumeL :: Lens_' Chart1d (Maybe Double)

-- | <a>chart1dMarketChangeOverTime</a> Lens
chart1dMarketChangeOverTimeL :: Lens_' Chart1d (Maybe Double)

-- | <a>chart1dAverage</a> Lens
chart1dAverageL :: Lens_' Chart1d (Maybe Double)

-- | <a>chart1dNotional</a> Lens
chart1dNotionalL :: Lens_' Chart1d (Maybe Double)

-- | <a>chart1dNumberOfTrades</a> Lens
chart1dNumberOfTradesL :: Lens_' Chart1d (Maybe Double)

-- | <a>chart1dSimplifyFactor</a> Lens
chart1dSimplifyFactorL :: Lens_' Chart1d (Maybe [Double])

-- | <a>chartAllHigh</a> Lens
chartAllHighL :: Lens_' ChartAll (Maybe Double)

-- | <a>chartAllLow</a> Lens
chartAllLowL :: Lens_' ChartAll (Maybe Double)

-- | <a>chartAllVolume</a> Lens
chartAllVolumeL :: Lens_' ChartAll (Maybe Double)

-- | <a>chartAllLabel</a> Lens
chartAllLabelL :: Lens_' ChartAll (Maybe Text)

-- | <a>chartAllChangeOverTime</a> Lens
chartAllChangeOverTimeL :: Lens_' ChartAll (Maybe Double)

-- | <a>chartAllDate</a> Lens
chartAllDateL :: Lens_' ChartAll (Maybe Text)

-- | <a>chartAllOpen</a> Lens
chartAllOpenL :: Lens_' ChartAll (Maybe Double)

-- | <a>chartAllClose</a> Lens
chartAllCloseL :: Lens_' ChartAll (Maybe Double)

-- | <a>chartNot1dUnadjustedVolume</a> Lens
chartNot1dUnadjustedVolumeL :: Lens_' ChartNot1d (Maybe Double)

-- | <a>chartNot1dChange</a> Lens
chartNot1dChangeL :: Lens_' ChartNot1d (Maybe Double)

-- | <a>chartNot1dChangePercent</a> Lens
chartNot1dChangePercentL :: Lens_' ChartNot1d (Maybe Double)

-- | <a>chartNot1dVwap</a> Lens
chartNot1dVwapL :: Lens_' ChartNot1d (Maybe Double)

-- | <a>corporateActionRecordId</a> Lens
corporateActionRecordIdL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionDailyListTimestamp</a> Lens
corporateActionDailyListTimestampL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionEffectiveDate</a> Lens
corporateActionEffectiveDateL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionIssueEvent</a> Lens
corporateActionIssueEventL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionCurrentSymbolinInetSymbology</a> Lens
corporateActionCurrentSymbolinInetSymbologyL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionCurrentSymbolinCqsSymbology</a> Lens
corporateActionCurrentSymbolinCqsSymbologyL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionCurrentSymbolinCmsSymbology</a> Lens
corporateActionCurrentSymbolinCmsSymbologyL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionNewSymbolinInetSymbology</a> Lens
corporateActionNewSymbolinInetSymbologyL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionNewSymbolinCqsSymbology</a> Lens
corporateActionNewSymbolinCqsSymbologyL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionNewSymbolinCmsSymbology</a> Lens
corporateActionNewSymbolinCmsSymbologyL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionCurrentSecurityName</a> Lens
corporateActionCurrentSecurityNameL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionNewSecurityName</a> Lens
corporateActionNewSecurityNameL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionCurrentCompanyName</a> Lens
corporateActionCurrentCompanyNameL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionNewCompanyName</a> Lens
corporateActionNewCompanyNameL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionCurrentListingCenter</a> Lens
corporateActionCurrentListingCenterL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionNewListingCenter</a> Lens
corporateActionNewListingCenterL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionDelistingReason</a> Lens
corporateActionDelistingReasonL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionCurrentRoundLotSize</a> Lens
corporateActionCurrentRoundLotSizeL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionNewRoundLotSize</a> Lens
corporateActionNewRoundLotSizeL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionCurrentLuldTierIndicator</a> Lens
corporateActionCurrentLuldTierIndicatorL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionNewLuldTierIndicator</a> Lens
corporateActionNewLuldTierIndicatorL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionExpirationDate</a> Lens
corporateActionExpirationDateL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionSeparationDate</a> Lens
corporateActionSeparationDateL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionSettlementDate</a> Lens
corporateActionSettlementDateL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionMaturityDate</a> Lens
corporateActionMaturityDateL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionRedemptionDate</a> Lens
corporateActionRedemptionDateL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionCurrentFinancialStatus</a> Lens
corporateActionCurrentFinancialStatusL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionNewFinancialStatus</a> Lens
corporateActionNewFinancialStatusL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionWhenIssuedFlag</a> Lens
corporateActionWhenIssuedFlagL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionWhenDistributedFlag</a> Lens
corporateActionWhenDistributedFlagL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionIpoFlag</a> Lens
corporateActionIpoFlagL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionHistoryHold</a> Lens
corporateActionHistoryHoldL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionNotesforEachEntry</a> Lens
corporateActionNotesforEachEntryL :: Lens_' CorporateAction (Maybe Text)

-- | <a>corporateActionRecordUpdateTime</a> Lens
corporateActionRecordUpdateTimeL :: Lens_' CorporateAction (Maybe Text)

-- | <a>dividendCoreDataRecordId</a> Lens
dividendCoreDataRecordIdL :: Lens_' DividendCoreData (Maybe Text)

-- | <a>dividendCoreDataDailyListTimestamp</a> Lens
dividendCoreDataDailyListTimestampL :: Lens_' DividendCoreData (Maybe Text)

-- | <a>dividendCoreDataSymbolinInetSymbology</a> Lens
dividendCoreDataSymbolinInetSymbologyL :: Lens_' DividendCoreData (Maybe Text)

-- | <a>dividendCoreDataSymbolinCqsSymbology</a> Lens
dividendCoreDataSymbolinCqsSymbologyL :: Lens_' DividendCoreData (Maybe Text)

-- | <a>dividendCoreDataSymbolyinCmsSymbology</a> Lens
dividendCoreDataSymbolyinCmsSymbologyL :: Lens_' DividendCoreData (Maybe Text)

-- | <a>dividendCoreDataSecurityName</a> Lens
dividendCoreDataSecurityNameL :: Lens_' DividendCoreData (Maybe Text)

-- | <a>dividendCoreDataCompanyName</a> Lens
dividendCoreDataCompanyNameL :: Lens_' DividendCoreData (Maybe Text)

-- | <a>dividendCoreDataAmountDescription</a> Lens
dividendCoreDataAmountDescriptionL :: Lens_' DividendCoreData (Maybe Text)

-- | <a>dividendCoreDataPaymentFrequency</a> Lens
dividendCoreDataPaymentFrequencyL :: Lens_' DividendCoreData (Maybe Text)

-- | <a>dividendCoreDataExDate</a> Lens
dividendCoreDataExDateL :: Lens_' DividendCoreData (Maybe Text)

-- | <a>dividendCoreDataDividendTypeId</a> Lens
dividendCoreDataDividendTypeIdL :: Lens_' DividendCoreData (Maybe Text)

-- | <a>dividendCoreDataStockAdjustmentFactor</a> Lens
dividendCoreDataStockAdjustmentFactorL :: Lens_' DividendCoreData (Maybe Text)

-- | <a>dividendCoreDataStockAmount</a> Lens
dividendCoreDataStockAmountL :: Lens_' DividendCoreData (Maybe Text)

-- | <a>dividendCoreDataCashAmount</a> Lens
dividendCoreDataCashAmountL :: Lens_' DividendCoreData (Maybe Text)

-- | <a>dividendCoreDataPostSplitShares</a> Lens
dividendCoreDataPostSplitSharesL :: Lens_' DividendCoreData (Maybe Text)

-- | <a>dividendCoreDataPreSplitShares</a> Lens
dividendCoreDataPreSplitSharesL :: Lens_' DividendCoreData (Maybe Text)

-- | <a>dividendCoreDataQualifiedDividend</a> Lens
dividendCoreDataQualifiedDividendL :: Lens_' DividendCoreData (Maybe Text)

-- | <a>dividendCoreDataExercisePriceAmount</a> Lens
dividendCoreDataExercisePriceAmountL :: Lens_' DividendCoreData (Maybe Text)

-- | <a>dividendCoreDataElectionorExpirationDate</a> Lens
dividendCoreDataElectionorExpirationDateL :: Lens_' DividendCoreData (Maybe Text)

-- | <a>dividendCoreDataGrossAmount</a> Lens
dividendCoreDataGrossAmountL :: Lens_' DividendCoreData (Maybe Text)

-- | <a>dividendCoreDataNetAmount</a> Lens
dividendCoreDataNetAmountL :: Lens_' DividendCoreData (Maybe Text)

-- | <a>dividendCoreDataBasisNotes</a> Lens
dividendCoreDataBasisNotesL :: Lens_' DividendCoreData (Maybe Text)

-- | <a>dividendCoreDataNotesforEachEntry</a> Lens
dividendCoreDataNotesforEachEntryL :: Lens_' DividendCoreData (Maybe Text)

-- | <a>dividendCoreDataRecordUpdateTime</a> Lens
dividendCoreDataRecordUpdateTimeL :: Lens_' DividendCoreData (Maybe Text)

-- | <a>earningsActualEps</a> Lens
earningsActualEpsL :: Lens_' Earnings (Maybe Double)

-- | <a>earningsConsensusEps</a> Lens
earningsConsensusEpsL :: Lens_' Earnings (Maybe Double)

-- | <a>earningsEstimatedEps</a> Lens
earningsEstimatedEpsL :: Lens_' Earnings (Maybe Double)

-- | <a>earningsAnnounceTime</a> Lens
earningsAnnounceTimeL :: Lens_' Earnings (Maybe Text)

-- | <a>earningsNumberOfEstimates</a> Lens
earningsNumberOfEstimatesL :: Lens_' Earnings (Maybe Double)

-- | <a>earningsEpsSurpriseDollar</a> Lens
earningsEpsSurpriseDollarL :: Lens_' Earnings (Maybe Double)

-- | <a>earningsEpsReportDate</a> Lens
earningsEpsReportDateL :: Lens_' Earnings (Maybe Date)

-- | <a>earningsFiscalPeriod</a> Lens
earningsFiscalPeriodL :: Lens_' Earnings (Maybe Text)

-- | <a>earningsFiscalEndDate</a> Lens
earningsFiscalEndDateL :: Lens_' Earnings (Maybe Date)

-- | <a>earningsYearAgo</a> Lens
earningsYearAgoL :: Lens_' Earnings (Maybe Double)

-- | <a>earningsYearAgoChangePercent</a> Lens
earningsYearAgoChangePercentL :: Lens_' Earnings (Maybe Double)

-- | <a>earningsEstimatedChangePercent</a> Lens
earningsEstimatedChangePercentL :: Lens_' Earnings (Maybe Double)

-- | <a>earningsSymbolId</a> Lens
earningsSymbolIdL :: Lens_' Earnings (Maybe Double)

-- | <a>financialsReportDate</a> Lens
financialsReportDateL :: Lens_' Financials (Maybe Text)

-- | <a>financialsGrossProfit</a> Lens
financialsGrossProfitL :: Lens_' Financials (Maybe Double)

-- | <a>financialsCostOfRevenue</a> Lens
financialsCostOfRevenueL :: Lens_' Financials (Maybe Double)

-- | <a>financialsOperatingRevenue</a> Lens
financialsOperatingRevenueL :: Lens_' Financials (Maybe Double)

-- | <a>financialsTotalRevenue</a> Lens
financialsTotalRevenueL :: Lens_' Financials (Maybe Double)

-- | <a>financialsOperatingIncome</a> Lens
financialsOperatingIncomeL :: Lens_' Financials (Maybe Double)

-- | <a>financialsNetIncome</a> Lens
financialsNetIncomeL :: Lens_' Financials (Maybe Double)

-- | <a>financialsResearchAndDevelopment</a> Lens
financialsResearchAndDevelopmentL :: Lens_' Financials (Maybe Double)

-- | <a>financialsOperatingExpense</a> Lens
financialsOperatingExpenseL :: Lens_' Financials (Maybe Double)

-- | <a>financialsCurrentAssets</a> Lens
financialsCurrentAssetsL :: Lens_' Financials (Maybe Double)

-- | <a>financialsTotalAssets</a> Lens
financialsTotalAssetsL :: Lens_' Financials (Maybe Double)

-- | <a>financialsTotalLiabilities</a> Lens
financialsTotalLiabilitiesL :: Lens_' Financials (Maybe Double)

-- | <a>financialsCurrentCash</a> Lens
financialsCurrentCashL :: Lens_' Financials (Maybe Double)

-- | <a>financialsCurrentDebt</a> Lens
financialsCurrentDebtL :: Lens_' Financials (Maybe Double)

-- | <a>financialsTotalCash</a> Lens
financialsTotalCashL :: Lens_' Financials (Maybe Double)

-- | <a>financialsTotalDebt</a> Lens
financialsTotalDebtL :: Lens_' Financials (Maybe Double)

-- | <a>financialsShareholderEquity</a> Lens
financialsShareholderEquityL :: Lens_' Financials (Maybe Double)

-- | <a>financialsCashChange</a> Lens
financialsCashChangeL :: Lens_' Financials (Maybe Double)

-- | <a>financialsCashFlow</a> Lens
financialsCashFlowL :: Lens_' Financials (Maybe Double)

-- | <a>financialsOperatingGainsLosses</a> Lens
financialsOperatingGainsLossesL :: Lens_' Financials (Maybe Text)

-- | <a>deepBookGetResponseBids</a> Lens
deepBookGetResponseBidsL :: Lens_' DeepBookGetResponse (Maybe [Order])

-- | <a>deepBookGetResponseAsks</a> Lens
deepBookGetResponseAsksL :: Lens_' DeepBookGetResponse (Maybe [Order])

-- | <a>deepGetResponseSymbol</a> Lens
deepGetResponseSymbolL :: Lens_' DeepGetResponse (Maybe Text)

-- | <a>deepGetResponseMarketPercent</a> Lens
deepGetResponseMarketPercentL :: Lens_' DeepGetResponse (Maybe Double)

-- | <a>deepGetResponseVolume</a> Lens
deepGetResponseVolumeL :: Lens_' DeepGetResponse (Maybe Double)

-- | <a>deepGetResponseLastSalePrice</a> Lens
deepGetResponseLastSalePriceL :: Lens_' DeepGetResponse (Maybe Double)

-- | <a>deepGetResponseLastSaleSize</a> Lens
deepGetResponseLastSaleSizeL :: Lens_' DeepGetResponse (Maybe Double)

-- | <a>deepGetResponseLastSaleTime</a> Lens
deepGetResponseLastSaleTimeL :: Lens_' DeepGetResponse (Maybe Double)

-- | <a>deepGetResponseLastUpdated</a> Lens
deepGetResponseLastUpdatedL :: Lens_' DeepGetResponse (Maybe Double)

-- | <a>deepGetResponseBids</a> Lens
deepGetResponseBidsL :: Lens_' DeepGetResponse (Maybe [Order])

-- | <a>deepGetResponseAsks</a> Lens
deepGetResponseAsksL :: Lens_' DeepGetResponse (Maybe [Order])

-- | <a>deepGetResponseSystemEvent</a> Lens
deepGetResponseSystemEventL :: Lens_' DeepGetResponse (Maybe [SystemEvent])

-- | <a>deepGetResponseTradingStatus</a> Lens
deepGetResponseTradingStatusL :: Lens_' DeepGetResponse (Maybe DeepGetResponseTradingStatus)

-- | <a>deepGetResponseOpHaltStatus</a> Lens
deepGetResponseOpHaltStatusL :: Lens_' DeepGetResponse (Maybe DeepGetResponseOpHaltStatus)

-- | <a>deepGetResponseSsrStatus</a> Lens
deepGetResponseSsrStatusL :: Lens_' DeepGetResponse (Maybe DeepGetResponseSsrStatus)

-- | <a>deepGetResponseSecurityEvent</a> Lens
deepGetResponseSecurityEventL :: Lens_' DeepGetResponse (Maybe DeepGetResponseSecurityEvent)

-- | <a>deepGetResponseTrades</a> Lens
deepGetResponseTradesL :: Lens_' DeepGetResponse (Maybe [Trade])

-- | <a>deepGetResponseTradeBreaks</a> Lens
deepGetResponseTradeBreaksL :: Lens_' DeepGetResponse (Maybe [DeepGetResponseTradeBreaks])

-- | <a>deepGetResponseAuction</a> Lens
deepGetResponseAuctionL :: Lens_' DeepGetResponse (Maybe DeepGetResponseAuction)

-- | <a>statsHistoricalDailyGetResponseDate</a> Lens
statsHistoricalDailyGetResponseDateL :: Lens_' StatsHistoricalDailyGetResponse (Maybe Text)

-- | <a>statsHistoricalDailyGetResponseVolume</a> Lens
statsHistoricalDailyGetResponseVolumeL :: Lens_' StatsHistoricalDailyGetResponse (Maybe Double)

-- | <a>statsHistoricalDailyGetResponseRoutedVolume</a> Lens
statsHistoricalDailyGetResponseRoutedVolumeL :: Lens_' StatsHistoricalDailyGetResponse (Maybe Double)

-- | <a>statsHistoricalDailyGetResponseMarketShare</a> Lens
statsHistoricalDailyGetResponseMarketShareL :: Lens_' StatsHistoricalDailyGetResponse (Maybe Double)

-- | <a>statsHistoricalDailyGetResponseIsHalfday</a> Lens
statsHistoricalDailyGetResponseIsHalfdayL :: Lens_' StatsHistoricalDailyGetResponse (Maybe Double)

-- | <a>statsHistoricalDailyGetResponseLitVolume</a> Lens
statsHistoricalDailyGetResponseLitVolumeL :: Lens_' StatsHistoricalDailyGetResponse (Maybe Double)

-- | <a>statsIntradayGetResponseVolume</a> Lens
statsIntradayGetResponseVolumeL :: Lens_' StatsIntradayGetResponse (Maybe TimestampedValue)

-- | <a>statsIntradayGetResponseSymbolsTraded</a> Lens
statsIntradayGetResponseSymbolsTradedL :: Lens_' StatsIntradayGetResponse (Maybe TimestampedValue)

-- | <a>statsIntradayGetResponseRoutedVolume</a> Lens
statsIntradayGetResponseRoutedVolumeL :: Lens_' StatsIntradayGetResponse (Maybe TimestampedValue)

-- | <a>statsIntradayGetResponseNotional</a> Lens
statsIntradayGetResponseNotionalL :: Lens_' StatsIntradayGetResponse (Maybe TimestampedValue)

-- | <a>statsRecentGetResponseDate</a> Lens
statsRecentGetResponseDateL :: Lens_' StatsRecentGetResponse (Maybe Date)

-- | <a>statsRecentGetResponseVolume</a> Lens
statsRecentGetResponseVolumeL :: Lens_' StatsRecentGetResponse (Maybe Double)

-- | <a>statsRecentGetResponseRoutedVolume</a> Lens
statsRecentGetResponseRoutedVolumeL :: Lens_' StatsRecentGetResponse (Maybe Double)

-- | <a>statsRecentGetResponseMarketShare</a> Lens
statsRecentGetResponseMarketShareL :: Lens_' StatsRecentGetResponse (Maybe Double)

-- | <a>statsRecentGetResponseIsHalfday</a> Lens
statsRecentGetResponseIsHalfdayL :: Lens_' StatsRecentGetResponse (Maybe Bool)

-- | <a>statsRecentGetResponseLitVolume</a> Lens
statsRecentGetResponseLitVolumeL :: Lens_' StatsRecentGetResponse (Maybe Double)

-- | <a>statsRecordsGetResponseVolume</a> Lens
statsRecordsGetResponseVolumeL :: Lens_' StatsRecordsGetResponse (Maybe RecordedValue)

-- | <a>statsRecordsGetResponseSymbolsTraded</a> Lens
statsRecordsGetResponseSymbolsTradedL :: Lens_' StatsRecordsGetResponse (Maybe RecordedValue)

-- | <a>statsRecordsGetResponseRoutedVolume</a> Lens
statsRecordsGetResponseRoutedVolumeL :: Lens_' StatsRecordsGetResponse (Maybe RecordedValue)

-- | <a>statsRecordsGetResponseNotional</a> Lens
statsRecordsGetResponseNotionalL :: Lens_' StatsRecordsGetResponse (Maybe RecordedValue)

-- | <a>marketGetResponseMic</a> Lens
marketGetResponseMicL :: Lens_' MarketGetResponse (Maybe Text)

-- | <a>marketGetResponseTapeId</a> Lens
marketGetResponseTapeIdL :: Lens_' MarketGetResponse (Maybe Text)

-- | <a>marketGetResponseVenueName</a> Lens
marketGetResponseVenueNameL :: Lens_' MarketGetResponse (Maybe Text)

-- | <a>marketGetResponseVolume</a> Lens
marketGetResponseVolumeL :: Lens_' MarketGetResponse (Maybe Double)

-- | <a>marketGetResponseTapeA</a> Lens
marketGetResponseTapeAL :: Lens_' MarketGetResponse (Maybe Double)

-- | <a>marketGetResponseTapeB</a> Lens
marketGetResponseTapeBL :: Lens_' MarketGetResponse (Maybe Double)

-- | <a>marketGetResponseTapeC</a> Lens
marketGetResponseTapeCL :: Lens_' MarketGetResponse (Maybe Double)

-- | <a>marketGetResponseMarketPercent</a> Lens
marketGetResponseMarketPercentL :: Lens_' MarketGetResponse (Maybe Double)

-- | <a>marketGetResponseLastUpdated</a> Lens
marketGetResponseLastUpdatedL :: Lens_' MarketGetResponse (Maybe Double)

-- | <a>refDataSymbolsGetResponseSymbol</a> Lens
refDataSymbolsGetResponseSymbolL :: Lens_' RefDataSymbolsGetResponse (Maybe Text)

-- | <a>refDataSymbolsGetResponseName</a> Lens
refDataSymbolsGetResponseNameL :: Lens_' RefDataSymbolsGetResponse (Maybe Text)

-- | <a>refDataSymbolsGetResponseDate</a> Lens
refDataSymbolsGetResponseDateL :: Lens_' RefDataSymbolsGetResponse (Maybe Text)

-- | <a>refDataSymbolsGetResponseIsEnabled</a> Lens
refDataSymbolsGetResponseIsEnabledL :: Lens_' RefDataSymbolsGetResponse (Maybe Text)

-- | <a>refDataSymbolsGetResponseType</a> Lens
refDataSymbolsGetResponseTypeL :: Lens_' RefDataSymbolsGetResponse (Maybe E'Type)

-- | <a>refDataSymbolsGetResponseIexId</a> Lens
refDataSymbolsGetResponseIexIdL :: Lens_' RefDataSymbolsGetResponse (Maybe Double)

-- | <a>stockSymbolBookGetResponseQuote</a> Lens
stockSymbolBookGetResponseQuoteL :: Lens_' StockSymbolBookGetResponse (Maybe Quote)

-- | <a>stockSymbolBookGetResponseBids</a> Lens
stockSymbolBookGetResponseBidsL :: Lens_' StockSymbolBookGetResponse (Maybe [Order])

-- | <a>stockSymbolBookGetResponseAsks</a> Lens
stockSymbolBookGetResponseAsksL :: Lens_' StockSymbolBookGetResponse (Maybe [Order])

-- | <a>stockSymbolBookGetResponseTrades</a> Lens
stockSymbolBookGetResponseTradesL :: Lens_' StockSymbolBookGetResponse (Maybe [Trade])

-- | <a>stockSymbolBookGetResponseSystemEvent</a> Lens
stockSymbolBookGetResponseSystemEventL :: Lens_' StockSymbolBookGetResponse (Maybe SystemEvent)

-- | <a>stockSymbolChartDynamicGetResponseRange</a> Lens
stockSymbolChartDynamicGetResponseRangeL :: Lens_' StockSymbolChartDynamicGetResponse (Maybe E'Range)

-- | <a>stockSymbolChartDynamicGetResponseData</a> Lens
stockSymbolChartDynamicGetResponseDataL :: Lens_' StockSymbolChartDynamicGetResponse (Maybe [ChartAll])

-- | <a>stockSymbolCompanyGetResponseSymbol</a> Lens
stockSymbolCompanyGetResponseSymbolL :: Lens_' StockSymbolCompanyGetResponse (Maybe Text)

-- | <a>stockSymbolCompanyGetResponseCompanyName</a> Lens
stockSymbolCompanyGetResponseCompanyNameL :: Lens_' StockSymbolCompanyGetResponse (Maybe Text)

-- | <a>stockSymbolCompanyGetResponseExchange</a> Lens
stockSymbolCompanyGetResponseExchangeL :: Lens_' StockSymbolCompanyGetResponse (Maybe Text)

-- | <a>stockSymbolCompanyGetResponseIndustry</a> Lens
stockSymbolCompanyGetResponseIndustryL :: Lens_' StockSymbolCompanyGetResponse (Maybe Text)

-- | <a>stockSymbolCompanyGetResponseWebsite</a> Lens
stockSymbolCompanyGetResponseWebsiteL :: Lens_' StockSymbolCompanyGetResponse (Maybe Text)

-- | <a>stockSymbolCompanyGetResponseDescription</a> Lens
stockSymbolCompanyGetResponseDescriptionL :: Lens_' StockSymbolCompanyGetResponse (Maybe Text)

-- | <a>stockSymbolCompanyGetResponseCeo</a> Lens
stockSymbolCompanyGetResponseCeoL :: Lens_' StockSymbolCompanyGetResponse (Maybe Text)

-- | <a>stockSymbolCompanyGetResponseIssueType</a> Lens
stockSymbolCompanyGetResponseIssueTypeL :: Lens_' StockSymbolCompanyGetResponse (Maybe E'IssueType)

-- | <a>stockSymbolCompanyGetResponseSector</a> Lens
stockSymbolCompanyGetResponseSectorL :: Lens_' StockSymbolCompanyGetResponse (Maybe Text)

-- | <a>stockSymbolCompanyGetResponseTags</a> Lens
stockSymbolCompanyGetResponseTagsL :: Lens_' StockSymbolCompanyGetResponse (Maybe [Sector])

-- | <a>stockSymbolDelayedQuoteGetResponseSymbol</a> Lens
stockSymbolDelayedQuoteGetResponseSymbolL :: Lens_' StockSymbolDelayedQuoteGetResponse (Maybe Text)

-- | <a>stockSymbolDelayedQuoteGetResponseDelayedPrice</a> Lens
stockSymbolDelayedQuoteGetResponseDelayedPriceL :: Lens_' StockSymbolDelayedQuoteGetResponse (Maybe Double)

-- | <a>stockSymbolDelayedQuoteGetResponseDelayedSize</a> Lens
stockSymbolDelayedQuoteGetResponseDelayedSizeL :: Lens_' StockSymbolDelayedQuoteGetResponse (Maybe Double)

-- | <a>stockSymbolDelayedQuoteGetResponseDelayedPriceTime</a> Lens
stockSymbolDelayedQuoteGetResponseDelayedPriceTimeL :: Lens_' StockSymbolDelayedQuoteGetResponse (Maybe Double)

-- | <a>stockSymbolDelayedQuoteGetResponseProcessedTime</a> Lens
stockSymbolDelayedQuoteGetResponseProcessedTimeL :: Lens_' StockSymbolDelayedQuoteGetResponse (Maybe Double)

-- | <a>deepGetResponseAuctionAuctionType</a> Lens
deepGetResponseAuctionAuctionTypeL :: Lens_' DeepGetResponseAuction (Maybe Text)

-- | <a>deepGetResponseAuctionPairedShares</a> Lens
deepGetResponseAuctionPairedSharesL :: Lens_' DeepGetResponseAuction (Maybe Double)

-- | <a>deepGetResponseAuctionImbalanceShares</a> Lens
deepGetResponseAuctionImbalanceSharesL :: Lens_' DeepGetResponseAuction (Maybe Double)

-- | <a>deepGetResponseAuctionReferencePrice</a> Lens
deepGetResponseAuctionReferencePriceL :: Lens_' DeepGetResponseAuction (Maybe Double)

-- | <a>deepGetResponseAuctionIndicativePrice</a> Lens
deepGetResponseAuctionIndicativePriceL :: Lens_' DeepGetResponseAuction (Maybe Double)

-- | <a>deepGetResponseAuctionAuctionBookProce</a> Lens
deepGetResponseAuctionAuctionBookProceL :: Lens_' DeepGetResponseAuction (Maybe Double)

-- | <a>deepGetResponseAuctionCollarReferencePrice</a> Lens
deepGetResponseAuctionCollarReferencePriceL :: Lens_' DeepGetResponseAuction (Maybe Double)

-- | <a>deepGetResponseAuctionLowerCollarPrice</a> Lens
deepGetResponseAuctionLowerCollarPriceL :: Lens_' DeepGetResponseAuction (Maybe Double)

-- | <a>deepGetResponseAuctionUpperCollarPrice</a> Lens
deepGetResponseAuctionUpperCollarPriceL :: Lens_' DeepGetResponseAuction (Maybe Double)

-- | <a>deepGetResponseAuctionExtensionNumber</a> Lens
deepGetResponseAuctionExtensionNumberL :: Lens_' DeepGetResponseAuction (Maybe Double)

-- | <a>deepGetResponseAuctionStartTime</a> Lens
deepGetResponseAuctionStartTimeL :: Lens_' DeepGetResponseAuction (Maybe Text)

-- | <a>deepGetResponseAuctionLastUpdate</a> Lens
deepGetResponseAuctionLastUpdateL :: Lens_' DeepGetResponseAuction (Maybe Double)

-- | <a>deepGetResponseOpHaltStatusIsHalted</a> Lens
deepGetResponseOpHaltStatusIsHaltedL :: Lens_' DeepGetResponseOpHaltStatus (Maybe Bool)

-- | <a>deepGetResponseOpHaltStatusTimestamp</a> Lens
deepGetResponseOpHaltStatusTimestampL :: Lens_' DeepGetResponseOpHaltStatus (Maybe Double)

-- | <a>deepGetResponseSecurityEventSecurityEvent</a> Lens
deepGetResponseSecurityEventSecurityEventL :: Lens_' DeepGetResponseSecurityEvent (Maybe Text)

-- | <a>deepGetResponseSecurityEventTimestamp</a> Lens
deepGetResponseSecurityEventTimestampL :: Lens_' DeepGetResponseSecurityEvent (Maybe Double)

-- | <a>deepGetResponseSsrStatusIsSsr</a> Lens
deepGetResponseSsrStatusIsSsrL :: Lens_' DeepGetResponseSsrStatus (Maybe Bool)

-- | <a>deepGetResponseSsrStatusDetail</a> Lens
deepGetResponseSsrStatusDetailL :: Lens_' DeepGetResponseSsrStatus (Maybe Text)

-- | <a>deepGetResponseSsrStatusTimestamp</a> Lens
deepGetResponseSsrStatusTimestampL :: Lens_' DeepGetResponseSsrStatus (Maybe Double)

-- | <a>deepGetResponseTradeBreaksPrice</a> Lens
deepGetResponseTradeBreaksPriceL :: Lens_' DeepGetResponseTradeBreaks (Maybe Double)

-- | <a>deepGetResponseTradeBreaksSize</a> Lens
deepGetResponseTradeBreaksSizeL :: Lens_' DeepGetResponseTradeBreaks (Maybe Double)

-- | <a>deepGetResponseTradeBreaksTradeId</a> Lens
deepGetResponseTradeBreaksTradeIdL :: Lens_' DeepGetResponseTradeBreaks (Maybe Double)

-- | <a>deepGetResponseTradeBreaksIsIso</a> Lens
deepGetResponseTradeBreaksIsIsoL :: Lens_' DeepGetResponseTradeBreaks (Maybe Bool)

-- | <a>deepGetResponseTradeBreaksIsOddLot</a> Lens
deepGetResponseTradeBreaksIsOddLotL :: Lens_' DeepGetResponseTradeBreaks (Maybe Bool)

-- | <a>deepGetResponseTradeBreaksIsOutsideRegularHours</a> Lens
deepGetResponseTradeBreaksIsOutsideRegularHoursL :: Lens_' DeepGetResponseTradeBreaks (Maybe Bool)

-- | <a>deepGetResponseTradeBreaksIsSinglePriceCross</a> Lens
deepGetResponseTradeBreaksIsSinglePriceCrossL :: Lens_' DeepGetResponseTradeBreaks (Maybe Bool)

-- | <a>deepGetResponseTradeBreaksIsTradeThroughExempt</a> Lens
deepGetResponseTradeBreaksIsTradeThroughExemptL :: Lens_' DeepGetResponseTradeBreaks (Maybe Bool)

-- | <a>deepGetResponseTradeBreaksTimestamp</a> Lens
deepGetResponseTradeBreaksTimestampL :: Lens_' DeepGetResponseTradeBreaks (Maybe Double)

-- | <a>deepGetResponseTradingStatusStatus</a> Lens
deepGetResponseTradingStatusStatusL :: Lens_' DeepGetResponseTradingStatus (Maybe Text)

-- | <a>deepGetResponseTradingStatusReason</a> Lens
deepGetResponseTradingStatusReasonL :: Lens_' DeepGetResponseTradingStatus (Maybe Text)

-- | <a>deepGetResponseTradingStatusTimestamp</a> Lens
deepGetResponseTradingStatusTimestampL :: Lens_' DeepGetResponseTradingStatus (Maybe Double)

-- | <a>histGetResponseLink</a> Lens
histGetResponseLinkL :: Lens_' HistGetResponse (Maybe Text)

-- | <a>histGetResponseDate</a> Lens
histGetResponseDateL :: Lens_' HistGetResponse (Maybe Text)

-- | <a>histGetResponseFeed</a> Lens
histGetResponseFeedL :: Lens_' HistGetResponse (Maybe Text)

-- | <a>histGetResponseVersion</a> Lens
histGetResponseVersionL :: Lens_' HistGetResponse (Maybe Text)

-- | <a>histGetResponseProtocol</a> Lens
histGetResponseProtocolL :: Lens_' HistGetResponse (Maybe Text)

-- | <a>histGetResponseSize</a> Lens
histGetResponseSizeL :: Lens_' HistGetResponse (Maybe Text)

-- | <a>stockSymbolDividendsRangeGetResponseExDate</a> Lens
stockSymbolDividendsRangeGetResponseExDateL :: Lens_' StockSymbolDividendsRangeGetResponse (Maybe Text)

-- | <a>stockSymbolDividendsRangeGetResponsePaymentDate</a> Lens
stockSymbolDividendsRangeGetResponsePaymentDateL :: Lens_' StockSymbolDividendsRangeGetResponse (Maybe Text)

-- | <a>stockSymbolDividendsRangeGetResponseRecordDate</a> Lens
stockSymbolDividendsRangeGetResponseRecordDateL :: Lens_' StockSymbolDividendsRangeGetResponse (Maybe Text)

-- | <a>stockSymbolDividendsRangeGetResponseDeclaredDate</a> Lens
stockSymbolDividendsRangeGetResponseDeclaredDateL :: Lens_' StockSymbolDividendsRangeGetResponse (Maybe Text)

-- | <a>stockSymbolDividendsRangeGetResponseAmount</a> Lens
stockSymbolDividendsRangeGetResponseAmountL :: Lens_' StockSymbolDividendsRangeGetResponse (Maybe Double)

-- | <a>stockSymbolDividendsRangeGetResponseFlag</a> Lens
stockSymbolDividendsRangeGetResponseFlagL :: Lens_' StockSymbolDividendsRangeGetResponse (Maybe E'Flag)

-- | <a>stockSymbolDividendsRangeGetResponseType</a> Lens
stockSymbolDividendsRangeGetResponseTypeL :: Lens_' StockSymbolDividendsRangeGetResponse (Maybe E'Type2)

-- | <a>stockSymbolDividendsRangeGetResponseQualified</a> Lens
stockSymbolDividendsRangeGetResponseQualifiedL :: Lens_' StockSymbolDividendsRangeGetResponse (Maybe E'Qualified)

-- | <a>stockSymbolDividendsRangeGetResponseIndicated</a> Lens
stockSymbolDividendsRangeGetResponseIndicatedL :: Lens_' StockSymbolDividendsRangeGetResponse (Maybe Double)

-- | <a>stockSymbolEarningsGetResponseSymbol</a> Lens
stockSymbolEarningsGetResponseSymbolL :: Lens_' StockSymbolEarningsGetResponse (Maybe Text)

-- | <a>stockSymbolEarningsGetResponseEarnings</a> Lens
stockSymbolEarningsGetResponseEarningsL :: Lens_' StockSymbolEarningsGetResponse (Maybe [Earnings])

-- | <a>stockSymbolEffectiveSpreadGetResponseVolume</a> Lens
stockSymbolEffectiveSpreadGetResponseVolumeL :: Lens_' StockSymbolEffectiveSpreadGetResponse (Maybe Double)

-- | <a>stockSymbolEffectiveSpreadGetResponseVenue</a> Lens
stockSymbolEffectiveSpreadGetResponseVenueL :: Lens_' StockSymbolEffectiveSpreadGetResponse (Maybe Text)

-- | <a>stockSymbolEffectiveSpreadGetResponseVenueName</a> Lens
stockSymbolEffectiveSpreadGetResponseVenueNameL :: Lens_' StockSymbolEffectiveSpreadGetResponse (Maybe Text)

-- | <a>stockSymbolEffectiveSpreadGetResponseEffectiveSpread</a> Lens
stockSymbolEffectiveSpreadGetResponseEffectiveSpreadL :: Lens_' StockSymbolEffectiveSpreadGetResponse (Maybe Double)

-- | <a>stockSymbolEffectiveSpreadGetResponseEffectiveQuoted</a> Lens
stockSymbolEffectiveSpreadGetResponseEffectiveQuotedL :: Lens_' StockSymbolEffectiveSpreadGetResponse (Maybe Double)

-- | <a>stockSymbolEffectiveSpreadGetResponsePriceImprovement</a> Lens
stockSymbolEffectiveSpreadGetResponsePriceImprovementL :: Lens_' StockSymbolEffectiveSpreadGetResponse (Maybe Double)

-- | <a>stockSymbolFinancialsGetResponseSymbol</a> Lens
stockSymbolFinancialsGetResponseSymbolL :: Lens_' StockSymbolFinancialsGetResponse (Maybe Text)

-- | <a>stockSymbolFinancialsGetResponseFinancials</a> Lens
stockSymbolFinancialsGetResponseFinancialsL :: Lens_' StockSymbolFinancialsGetResponse (Maybe [Financials])

-- | <a>stockMarketThresholdSecuritiesGetResponseTradeDate</a> Lens
stockMarketThresholdSecuritiesGetResponseTradeDateL :: Lens_' StockMarketThresholdSecuritiesGetResponse (Maybe Double)

-- | <a>stockMarketThresholdSecuritiesGetResponseSymbolinInetSymbology</a>
--   Lens
stockMarketThresholdSecuritiesGetResponseSymbolinInetSymbologyL :: Lens_' StockMarketThresholdSecuritiesGetResponse (Maybe Text)

-- | <a>stockMarketThresholdSecuritiesGetResponseSymbolinCqsSymbology</a>
--   Lens
stockMarketThresholdSecuritiesGetResponseSymbolinCqsSymbologyL :: Lens_' StockMarketThresholdSecuritiesGetResponse (Maybe Text)

-- | <a>stockMarketThresholdSecuritiesGetResponseSymbolinCmsSymbology</a>
--   Lens
stockMarketThresholdSecuritiesGetResponseSymbolinCmsSymbologyL :: Lens_' StockMarketThresholdSecuritiesGetResponse (Maybe Text)

-- | <a>stockMarketThresholdSecuritiesGetResponseSecurityName</a> Lens
stockMarketThresholdSecuritiesGetResponseSecurityNameL :: Lens_' StockMarketThresholdSecuritiesGetResponse (Maybe Text)

-- | <a>stockMarketUpcomingIposGetResponseRawData</a> Lens
stockMarketUpcomingIposGetResponseRawDataL :: Lens_' StockMarketUpcomingIposGetResponse (Maybe [IpoRawData])

-- | <a>stockMarketUpcomingIposGetResponseViewData</a> Lens
stockMarketUpcomingIposGetResponseViewDataL :: Lens_' StockMarketUpcomingIposGetResponse (Maybe [IpoViewData])

-- | <a>stockSymbolStatsGetResponseCompanyName</a> Lens
stockSymbolStatsGetResponseCompanyNameL :: Lens_' StockSymbolStatsGetResponse (Maybe Text)

-- | <a>stockSymbolStatsGetResponseMarketcap</a> Lens
stockSymbolStatsGetResponseMarketcapL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>stockSymbolStatsGetResponseBeta</a> Lens
stockSymbolStatsGetResponseBetaL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>inlineResponse20026Week52high</a> Lens
inlineResponse20026Week52highL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>inlineResponse20026Week52low</a> Lens
inlineResponse20026Week52lowL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>inlineResponse20026Week52change</a> Lens
inlineResponse20026Week52changeL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>stockSymbolStatsGetResponseShortInterest</a> Lens
stockSymbolStatsGetResponseShortInterestL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>stockSymbolStatsGetResponseShortDate</a> Lens
stockSymbolStatsGetResponseShortDateL :: Lens_' StockSymbolStatsGetResponse (Maybe Text)

-- | <a>stockSymbolStatsGetResponseDividendRate</a> Lens
stockSymbolStatsGetResponseDividendRateL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>stockSymbolStatsGetResponseDividendYield</a> Lens
stockSymbolStatsGetResponseDividendYieldL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>stockSymbolStatsGetResponseExDividendDate</a> Lens
stockSymbolStatsGetResponseExDividendDateL :: Lens_' StockSymbolStatsGetResponse (Maybe Text)

-- | <a>stockSymbolStatsGetResponseLatestEps</a> Lens
stockSymbolStatsGetResponseLatestEpsL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>stockSymbolStatsGetResponseLatestEpsDate</a> Lens
stockSymbolStatsGetResponseLatestEpsDateL :: Lens_' StockSymbolStatsGetResponse (Maybe Text)

-- | <a>stockSymbolStatsGetResponseSharesOutstanding</a> Lens
stockSymbolStatsGetResponseSharesOutstandingL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>stockSymbolStatsGetResponseFloat</a> Lens
stockSymbolStatsGetResponseFloatL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>stockSymbolStatsGetResponseReturnOnEquity</a> Lens
stockSymbolStatsGetResponseReturnOnEquityL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>stockSymbolStatsGetResponseConsensusEps</a> Lens
stockSymbolStatsGetResponseConsensusEpsL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>stockSymbolStatsGetResponseNumberOfEstimates</a> Lens
stockSymbolStatsGetResponseNumberOfEstimatesL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>stockSymbolStatsGetResponseSymbol</a> Lens
stockSymbolStatsGetResponseSymbolL :: Lens_' StockSymbolStatsGetResponse (Maybe Text)

-- | <a>stockSymbolStatsGetResponseEbitda</a> Lens
stockSymbolStatsGetResponseEbitdaL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>stockSymbolStatsGetResponseRevenue</a> Lens
stockSymbolStatsGetResponseRevenueL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>stockSymbolStatsGetResponseGrossProfit</a> Lens
stockSymbolStatsGetResponseGrossProfitL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>stockSymbolStatsGetResponseCash</a> Lens
stockSymbolStatsGetResponseCashL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>stockSymbolStatsGetResponseDebt</a> Lens
stockSymbolStatsGetResponseDebtL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>stockSymbolStatsGetResponseTtmEps</a> Lens
stockSymbolStatsGetResponseTtmEpsL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>stockSymbolStatsGetResponseRevenuePerShare</a> Lens
stockSymbolStatsGetResponseRevenuePerShareL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>stockSymbolStatsGetResponseRevenuePerEmployee</a> Lens
stockSymbolStatsGetResponseRevenuePerEmployeeL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>stockSymbolStatsGetResponsePeRatioHigh</a> Lens
stockSymbolStatsGetResponsePeRatioHighL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>stockSymbolStatsGetResponsePeRatioLow</a> Lens
stockSymbolStatsGetResponsePeRatioLowL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>stockSymbolStatsGetResponseEpsSurpriseDollar</a> Lens
stockSymbolStatsGetResponseEpsSurpriseDollarL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>stockSymbolStatsGetResponseEpsSurprisePercent</a> Lens
stockSymbolStatsGetResponseEpsSurprisePercentL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>stockSymbolStatsGetResponseReturnOnAssets</a> Lens
stockSymbolStatsGetResponseReturnOnAssetsL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>stockSymbolStatsGetResponseReturnOnCapital</a> Lens
stockSymbolStatsGetResponseReturnOnCapitalL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>stockSymbolStatsGetResponseProfitMargin</a> Lens
stockSymbolStatsGetResponseProfitMarginL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>stockSymbolStatsGetResponsePriceToSales</a> Lens
stockSymbolStatsGetResponsePriceToSalesL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>stockSymbolStatsGetResponsePriceToBook</a> Lens
stockSymbolStatsGetResponsePriceToBookL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>inlineResponse20026Day200MovingAvg</a> Lens
inlineResponse20026Day200MovingAvgL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>inlineResponse20026Day50MovingAvg</a> Lens
inlineResponse20026Day50MovingAvgL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>stockSymbolStatsGetResponseInstitutionPercent</a> Lens
stockSymbolStatsGetResponseInstitutionPercentL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>stockSymbolStatsGetResponseInsiderPercent</a> Lens
stockSymbolStatsGetResponseInsiderPercentL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>stockSymbolStatsGetResponseShortRatio</a> Lens
stockSymbolStatsGetResponseShortRatioL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>inlineResponse20026Year5ChangePercent</a> Lens
inlineResponse20026Year5ChangePercentL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>inlineResponse20026Year2ChangePercent</a> Lens
inlineResponse20026Year2ChangePercentL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>inlineResponse20026Year1ChangePercent</a> Lens
inlineResponse20026Year1ChangePercentL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>stockSymbolStatsGetResponseYtdChangePercent</a> Lens
stockSymbolStatsGetResponseYtdChangePercentL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>inlineResponse20026Month6ChangePercent</a> Lens
inlineResponse20026Month6ChangePercentL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>inlineResponse20026Month3ChangePercent</a> Lens
inlineResponse20026Month3ChangePercentL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>inlineResponse20026Month1ChangePercent</a> Lens
inlineResponse20026Month1ChangePercentL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>inlineResponse20026Day5ChangePercent</a> Lens
inlineResponse20026Day5ChangePercentL :: Lens_' StockSymbolStatsGetResponse (Maybe Double)

-- | <a>stockSymbolLargestTradesGetResponsePrice</a> Lens
stockSymbolLargestTradesGetResponsePriceL :: Lens_' StockSymbolLargestTradesGetResponse (Maybe Double)

-- | <a>stockSymbolLargestTradesGetResponseSize</a> Lens
stockSymbolLargestTradesGetResponseSizeL :: Lens_' StockSymbolLargestTradesGetResponse (Maybe Double)

-- | <a>stockSymbolLargestTradesGetResponseTime</a> Lens
stockSymbolLargestTradesGetResponseTimeL :: Lens_' StockSymbolLargestTradesGetResponse (Maybe Double)

-- | <a>stockSymbolLargestTradesGetResponseTimeLabel</a> Lens
stockSymbolLargestTradesGetResponseTimeLabelL :: Lens_' StockSymbolLargestTradesGetResponse (Maybe Text)

-- | <a>stockSymbolLargestTradesGetResponseVenue</a> Lens
stockSymbolLargestTradesGetResponseVenueL :: Lens_' StockSymbolLargestTradesGetResponse (Maybe Text)

-- | <a>stockSymbolLargestTradesGetResponseVenueName</a> Lens
stockSymbolLargestTradesGetResponseVenueNameL :: Lens_' StockSymbolLargestTradesGetResponse (Maybe Text)

-- | <a>stockSymbolLogoGetResponseUrl</a> Lens
stockSymbolLogoGetResponseUrlL :: Lens_' StockSymbolLogoGetResponse (Maybe Text)

-- | <a>stockSymbolRelevantGetResponsePeers</a> Lens
stockSymbolRelevantGetResponsePeersL :: Lens_' StockSymbolRelevantGetResponse (Maybe Bool)

-- | <a>stockSymbolRelevantGetResponseSymbols</a> Lens
stockSymbolRelevantGetResponseSymbolsL :: Lens_' StockSymbolRelevantGetResponse (Maybe [Text])

-- | <a>topsLastGetResponseSymbol</a> Lens
topsLastGetResponseSymbolL :: Lens_' TopsLastGetResponse (Maybe Text)

-- | <a>topsLastGetResponsePrice</a> Lens
topsLastGetResponsePriceL :: Lens_' TopsLastGetResponse (Maybe Double)

-- | <a>topsLastGetResponseSize</a> Lens
topsLastGetResponseSizeL :: Lens_' TopsLastGetResponse (Maybe Double)

-- | <a>topsLastGetResponseTime</a> Lens
topsLastGetResponseTimeL :: Lens_' TopsLastGetResponse (Maybe Double)

-- | <a>stockMarketSectorPerformanceGetResponseType</a> Lens
stockMarketSectorPerformanceGetResponseTypeL :: Lens_' StockMarketSectorPerformanceGetResponse (Maybe Text)

-- | <a>stockMarketSectorPerformanceGetResponseName</a> Lens
stockMarketSectorPerformanceGetResponseNameL :: Lens_' StockMarketSectorPerformanceGetResponse (Maybe Sector)

-- | <a>stockMarketSectorPerformanceGetResponsePerformance</a> Lens
stockMarketSectorPerformanceGetResponsePerformanceL :: Lens_' StockMarketSectorPerformanceGetResponse (Maybe Double)

-- | <a>stockMarketSectorPerformanceGetResponseLastUpdated</a> Lens
stockMarketSectorPerformanceGetResponseLastUpdatedL :: Lens_' StockMarketSectorPerformanceGetResponse (Maybe Double)

-- | <a>stocksSymbolSplitsRangeGetResponseExDate</a> Lens
stocksSymbolSplitsRangeGetResponseExDateL :: Lens_' StocksSymbolSplitsRangeGetResponse (Maybe Text)

-- | <a>stocksSymbolSplitsRangeGetResponseDeclaredDate</a> Lens
stocksSymbolSplitsRangeGetResponseDeclaredDateL :: Lens_' StocksSymbolSplitsRangeGetResponse (Maybe Text)

-- | <a>stocksSymbolSplitsRangeGetResponseRecordDate</a> Lens
stocksSymbolSplitsRangeGetResponseRecordDateL :: Lens_' StocksSymbolSplitsRangeGetResponse (Maybe Text)

-- | <a>stocksSymbolSplitsRangeGetResponsePaymentDate</a> Lens
stocksSymbolSplitsRangeGetResponsePaymentDateL :: Lens_' StocksSymbolSplitsRangeGetResponse (Maybe Text)

-- | <a>stocksSymbolSplitsRangeGetResponseRatio</a> Lens
stocksSymbolSplitsRangeGetResponseRatioL :: Lens_' StocksSymbolSplitsRangeGetResponse (Maybe Double)

-- | <a>stocksSymbolSplitsRangeGetResponseToFactor</a> Lens
stocksSymbolSplitsRangeGetResponseToFactorL :: Lens_' StocksSymbolSplitsRangeGetResponse (Maybe Text)

-- | <a>stocksSymbolSplitsRangeGetResponseForFactor</a> Lens
stocksSymbolSplitsRangeGetResponseForFactorL :: Lens_' StocksSymbolSplitsRangeGetResponse (Maybe Text)

-- | <a>stockMarketTodayEarningsGetResponseBto</a> Lens
stockMarketTodayEarningsGetResponseBtoL :: Lens_' StockMarketTodayEarningsGetResponse (Maybe [TodayEarnings])

-- | <a>stockMarketTodayEarningsGetResponseAmc</a> Lens
stockMarketTodayEarningsGetResponseAmcL :: Lens_' StockMarketTodayEarningsGetResponse (Maybe [TodayEarnings])

-- | <a>stockSymbolVolumeByVenueGetResponseVolume</a> Lens
stockSymbolVolumeByVenueGetResponseVolumeL :: Lens_' StockSymbolVolumeByVenueGetResponse (Maybe Double)

-- | <a>stockSymbolVolumeByVenueGetResponseVenue</a> Lens
stockSymbolVolumeByVenueGetResponseVenueL :: Lens_' StockSymbolVolumeByVenueGetResponse (Maybe Text)

-- | <a>stockSymbolVolumeByVenueGetResponseVenueName</a> Lens
stockSymbolVolumeByVenueGetResponseVenueNameL :: Lens_' StockSymbolVolumeByVenueGetResponse (Maybe Text)

-- | <a>stockSymbolVolumeByVenueGetResponseDate</a> Lens
stockSymbolVolumeByVenueGetResponseDateL :: Lens_' StockSymbolVolumeByVenueGetResponse (Maybe Date)

-- | <a>stockSymbolVolumeByVenueGetResponseMarketPercent</a> Lens
stockSymbolVolumeByVenueGetResponseMarketPercentL :: Lens_' StockSymbolVolumeByVenueGetResponse (Maybe Double)

-- | <a>stockSymbolVolumeByVenueGetResponseAvgMarketPercent</a> Lens
stockSymbolVolumeByVenueGetResponseAvgMarketPercentL :: Lens_' StockSymbolVolumeByVenueGetResponse (Maybe Double)

-- | <a>deepOfficialPriceGetResponsePriceType</a> Lens
deepOfficialPriceGetResponsePriceTypeL :: Lens_' DeepOfficialPriceGetResponse (Maybe E'PriceType)

-- | <a>deepOfficialPriceGetResponsePrice</a> Lens
deepOfficialPriceGetResponsePriceL :: Lens_' DeepOfficialPriceGetResponse (Maybe Double)

-- | <a>deepOfficialPriceGetResponseTimestamp</a> Lens
deepOfficialPriceGetResponseTimestampL :: Lens_' DeepOfficialPriceGetResponse (Maybe Double)

-- | <a>deepOpHaltStatusGetResponseIsHalted</a> Lens
deepOpHaltStatusGetResponseIsHaltedL :: Lens_' DeepOpHaltStatusGetResponse (Maybe Bool)

-- | <a>deepOpHaltStatusGetResponseTimeStamp</a> Lens
deepOpHaltStatusGetResponseTimeStampL :: Lens_' DeepOpHaltStatusGetResponse (Maybe Double)

-- | <a>deepSecurityEventGetResponseSecurityEvent</a> Lens
deepSecurityEventGetResponseSecurityEventL :: Lens_' DeepSecurityEventGetResponse (Maybe E'SecurityEvent)

-- | <a>deepSecurityEventGetResponseTimestamp</a> Lens
deepSecurityEventGetResponseTimestampL :: Lens_' DeepSecurityEventGetResponse (Maybe Double)

-- | <a>deepSystemEventGetResponseSystemEvent</a> Lens
deepSystemEventGetResponseSystemEventL :: Lens_' DeepSystemEventGetResponse (Maybe SystemEvent)

-- | <a>deepSystemEventGetResponseTimestamp</a> Lens
deepSystemEventGetResponseTimestampL :: Lens_' DeepSystemEventGetResponse (Maybe Double)

-- | <a>topsGetResponseSymbol</a> Lens
topsGetResponseSymbolL :: Lens_' TopsGetResponse (Maybe Text)

-- | <a>topsGetResponseMarketPercent</a> Lens
topsGetResponseMarketPercentL :: Lens_' TopsGetResponse (Maybe Double)

-- | <a>topsGetResponseBidSize</a> Lens
topsGetResponseBidSizeL :: Lens_' TopsGetResponse (Maybe Double)

-- | <a>topsGetResponseBidPrice</a> Lens
topsGetResponseBidPriceL :: Lens_' TopsGetResponse (Maybe Double)

-- | <a>topsGetResponseAskSize</a> Lens
topsGetResponseAskSizeL :: Lens_' TopsGetResponse (Maybe Double)

-- | <a>topsGetResponseAskPrice</a> Lens
topsGetResponseAskPriceL :: Lens_' TopsGetResponse (Maybe Double)

-- | <a>topsGetResponseVolume</a> Lens
topsGetResponseVolumeL :: Lens_' TopsGetResponse (Maybe Double)

-- | <a>topsGetResponseLastSalePrice</a> Lens
topsGetResponseLastSalePriceL :: Lens_' TopsGetResponse (Maybe Double)

-- | <a>topsGetResponseLastSaleSize</a> Lens
topsGetResponseLastSaleSizeL :: Lens_' TopsGetResponse (Maybe Double)

-- | <a>topsGetResponseLastSaleTime</a> Lens
topsGetResponseLastSaleTimeL :: Lens_' TopsGetResponse (Maybe Double)

-- | <a>topsGetResponseLastUpdated</a> Lens
topsGetResponseLastUpdatedL :: Lens_' TopsGetResponse (Maybe Double)

-- | <a>topsGetResponseSector</a> Lens
topsGetResponseSectorL :: Lens_' TopsGetResponse (Maybe Sector)

-- | <a>topsGetResponseSecurityType</a> Lens
topsGetResponseSecurityTypeL :: Lens_' TopsGetResponse (Maybe Text)

-- | <a>deepTradingStatusGetResponseStatus</a> Lens
deepTradingStatusGetResponseStatusL :: Lens_' DeepTradingStatusGetResponse (Maybe E'Status)

-- | <a>deepTradingStatusGetResponseReason</a> Lens
deepTradingStatusGetResponseReasonL :: Lens_' DeepTradingStatusGetResponse (Maybe E'Reason)

-- | <a>deepTradingStatusGetResponseTimestamp</a> Lens
deepTradingStatusGetResponseTimestampL :: Lens_' DeepTradingStatusGetResponse (Maybe Double)

-- | <a>ipoRawDataSymbol</a> Lens
ipoRawDataSymbolL :: Lens_' IpoRawData (Maybe Text)

-- | <a>ipoRawDataCompanyName</a> Lens
ipoRawDataCompanyNameL :: Lens_' IpoRawData (Maybe Text)

-- | <a>ipoRawDataExpectedDate</a> Lens
ipoRawDataExpectedDateL :: Lens_' IpoRawData (Maybe Text)

-- | <a>ipoRawDataLeadUnderwriters</a> Lens
ipoRawDataLeadUnderwritersL :: Lens_' IpoRawData (Maybe [Text])

-- | <a>ipoRawDataUnderwriters</a> Lens
ipoRawDataUnderwritersL :: Lens_' IpoRawData (Maybe [Text])

-- | <a>ipoRawDataCompanyCounsel</a> Lens
ipoRawDataCompanyCounselL :: Lens_' IpoRawData (Maybe [Text])

-- | <a>ipoRawDataUnderWriterCounsel</a> Lens
ipoRawDataUnderWriterCounselL :: Lens_' IpoRawData (Maybe [Text])

-- | <a>ipoRawDataAuditor</a> Lens
ipoRawDataAuditorL :: Lens_' IpoRawData (Maybe Text)

-- | <a>ipoRawDataMarket</a> Lens
ipoRawDataMarketL :: Lens_' IpoRawData (Maybe Text)

-- | <a>ipoRawDataCik</a> Lens
ipoRawDataCikL :: Lens_' IpoRawData (Maybe Text)

-- | <a>ipoRawDataAddress</a> Lens
ipoRawDataAddressL :: Lens_' IpoRawData (Maybe Text)

-- | <a>ipoRawDataCity</a> Lens
ipoRawDataCityL :: Lens_' IpoRawData (Maybe Text)

-- | <a>ipoRawDataState</a> Lens
ipoRawDataStateL :: Lens_' IpoRawData (Maybe Text)

-- | <a>ipoRawDataZip</a> Lens
ipoRawDataZipL :: Lens_' IpoRawData (Maybe Text)

-- | <a>ipoRawDataPhone</a> Lens
ipoRawDataPhoneL :: Lens_' IpoRawData (Maybe Text)

-- | <a>ipoRawDataCeo</a> Lens
ipoRawDataCeoL :: Lens_' IpoRawData (Maybe Text)

-- | <a>ipoRawDataEmployees</a> Lens
ipoRawDataEmployeesL :: Lens_' IpoRawData (Maybe Double)

-- | <a>ipoRawDataUrl</a> Lens
ipoRawDataUrlL :: Lens_' IpoRawData (Maybe Text)

-- | <a>ipoRawDataStatus</a> Lens
ipoRawDataStatusL :: Lens_' IpoRawData (Maybe Text)

-- | <a>ipoRawDataSharesOffered</a> Lens
ipoRawDataSharesOfferedL :: Lens_' IpoRawData (Maybe Double)

-- | <a>ipoRawDataPriceLow</a> Lens
ipoRawDataPriceLowL :: Lens_' IpoRawData (Maybe Double)

-- | <a>ipoRawDataPriceHigh</a> Lens
ipoRawDataPriceHighL :: Lens_' IpoRawData (Maybe Double)

-- | <a>ipoRawDataOfferAmount</a> Lens
ipoRawDataOfferAmountL :: Lens_' IpoRawData (Maybe Double)

-- | <a>ipoRawDataTotalExpenses</a> Lens
ipoRawDataTotalExpensesL :: Lens_' IpoRawData (Maybe Double)

-- | <a>ipoRawDataSharesOverAlloted</a> Lens
ipoRawDataSharesOverAllotedL :: Lens_' IpoRawData (Maybe Double)

-- | <a>ipoRawDataShareholderShares</a> Lens
ipoRawDataShareholderSharesL :: Lens_' IpoRawData (Maybe Double)

-- | <a>ipoRawDataSharesOutstanding</a> Lens
ipoRawDataSharesOutstandingL :: Lens_' IpoRawData (Maybe Double)

-- | <a>ipoRawDataLockupPeriodExpiration</a> Lens
ipoRawDataLockupPeriodExpirationL :: Lens_' IpoRawData (Maybe Text)

-- | <a>ipoRawDataQuietPeriodExpiration</a> Lens
ipoRawDataQuietPeriodExpirationL :: Lens_' IpoRawData (Maybe Text)

-- | <a>ipoRawDataRevenue</a> Lens
ipoRawDataRevenueL :: Lens_' IpoRawData (Maybe Double)

-- | <a>ipoRawDataNetIncome</a> Lens
ipoRawDataNetIncomeL :: Lens_' IpoRawData (Maybe Double)

-- | <a>ipoRawDataTotalAssets</a> Lens
ipoRawDataTotalAssetsL :: Lens_' IpoRawData (Maybe Double)

-- | <a>ipoRawDataTotalLiabilities</a> Lens
ipoRawDataTotalLiabilitiesL :: Lens_' IpoRawData (Maybe Double)

-- | <a>ipoRawDataStockholderEquity</a> Lens
ipoRawDataStockholderEquityL :: Lens_' IpoRawData (Maybe Double)

-- | <a>ipoRawDataCompanyDescription</a> Lens
ipoRawDataCompanyDescriptionL :: Lens_' IpoRawData (Maybe Text)

-- | <a>ipoRawDataBusinessDescription</a> Lens
ipoRawDataBusinessDescriptionL :: Lens_' IpoRawData (Maybe Text)

-- | <a>ipoRawDataUseOfProceeds</a> Lens
ipoRawDataUseOfProceedsL :: Lens_' IpoRawData (Maybe Text)

-- | <a>ipoRawDataCompetition</a> Lens
ipoRawDataCompetitionL :: Lens_' IpoRawData (Maybe Text)

-- | <a>ipoRawDataAmount</a> Lens
ipoRawDataAmountL :: Lens_' IpoRawData (Maybe Double)

-- | <a>ipoRawDataPercentOffered</a> Lens
ipoRawDataPercentOfferedL :: Lens_' IpoRawData (Maybe Double)

-- | <a>ipoViewDataCompany</a> Lens
ipoViewDataCompanyL :: Lens_' IpoViewData (Maybe Text)

-- | <a>ipoViewDataSymbol</a> Lens
ipoViewDataSymbolL :: Lens_' IpoViewData (Maybe Text)

-- | <a>ipoViewDataPrice</a> Lens
ipoViewDataPriceL :: Lens_' IpoViewData (Maybe Text)

-- | <a>ipoViewDataShares</a> Lens
ipoViewDataSharesL :: Lens_' IpoViewData (Maybe Text)

-- | <a>ipoViewDataAmount</a> Lens
ipoViewDataAmountL :: Lens_' IpoViewData (Maybe Text)

-- | <a>ipoViewDataFloat</a> Lens
ipoViewDataFloatL :: Lens_' IpoViewData (Maybe Text)

-- | <a>ipoViewDataPercent</a> Lens
ipoViewDataPercentL :: Lens_' IpoViewData (Maybe Text)

-- | <a>ipoViewDataMarket</a> Lens
ipoViewDataMarketL :: Lens_' IpoViewData (Maybe Text)

-- | <a>ipoViewDataExpected</a> Lens
ipoViewDataExpectedL :: Lens_' IpoViewData (Maybe Text)

-- | <a>listedSymbolDataRecordId</a> Lens
listedSymbolDataRecordIdL :: Lens_' ListedSymbolData (Maybe Text)

-- | <a>listedSymbolDataDailyListTimestamp</a> Lens
listedSymbolDataDailyListTimestampL :: Lens_' ListedSymbolData (Maybe Text)

-- | <a>listedSymbolDataSymbolinInetSymbology</a> Lens
listedSymbolDataSymbolinInetSymbologyL :: Lens_' ListedSymbolData (Maybe Text)

-- | <a>listedSymbolDataSymbolinCqsSymbology</a> Lens
listedSymbolDataSymbolinCqsSymbologyL :: Lens_' ListedSymbolData (Maybe Text)

-- | <a>listedSymbolDataSymbolinCmsSymbology</a> Lens
listedSymbolDataSymbolinCmsSymbologyL :: Lens_' ListedSymbolData (Maybe Text)

-- | <a>listedSymbolDataSecurityName</a> Lens
listedSymbolDataSecurityNameL :: Lens_' ListedSymbolData (Maybe Text)

-- | <a>listedSymbolDataCompanyName</a> Lens
listedSymbolDataCompanyNameL :: Lens_' ListedSymbolData (Maybe Text)

-- | <a>listedSymbolDataTestIssue</a> Lens
listedSymbolDataTestIssueL :: Lens_' ListedSymbolData (Maybe Text)

-- | <a>listedSymbolDataIssueDescription</a> Lens
listedSymbolDataIssueDescriptionL :: Lens_' ListedSymbolData (Maybe Text)

-- | <a>listedSymbolDataIssueType</a> Lens
listedSymbolDataIssueTypeL :: Lens_' ListedSymbolData (Maybe Text)

-- | <a>listedSymbolDataIssueSubType</a> Lens
listedSymbolDataIssueSubTypeL :: Lens_' ListedSymbolData (Maybe Text)

-- | <a>listedSymbolDataSicCode</a> Lens
listedSymbolDataSicCodeL :: Lens_' ListedSymbolData (Maybe Text)

-- | <a>listedSymbolDataTransferAgent</a> Lens
listedSymbolDataTransferAgentL :: Lens_' ListedSymbolData (Maybe Text)

-- | <a>listedSymbolDataFinancialStatus</a> Lens
listedSymbolDataFinancialStatusL :: Lens_' ListedSymbolData (Maybe Text)

-- | <a>listedSymbolDataRoundLotSize</a> Lens
listedSymbolDataRoundLotSizeL :: Lens_' ListedSymbolData (Maybe Text)

-- | <a>listedSymbolDataPreviousOfficialClosingPrice</a> Lens
listedSymbolDataPreviousOfficialClosingPriceL :: Lens_' ListedSymbolData (Maybe Text)

-- | <a>listedSymbolDataAdjustedPreviousOfficialClosingPrice</a> Lens
listedSymbolDataAdjustedPreviousOfficialClosingPriceL :: Lens_' ListedSymbolData (Maybe Text)

-- | <a>listedSymbolDataWhenIssuedFlag</a> Lens
listedSymbolDataWhenIssuedFlagL :: Lens_' ListedSymbolData (Maybe Text)

-- | <a>listedSymbolDataWhenDistributedFlag</a> Lens
listedSymbolDataWhenDistributedFlagL :: Lens_' ListedSymbolData (Maybe Text)

-- | <a>listedSymbolDataIpoFlag</a> Lens
listedSymbolDataIpoFlagL :: Lens_' ListedSymbolData (Maybe Text)

-- | <a>listedSymbolDataFirstDateListed</a> Lens
listedSymbolDataFirstDateListedL :: Lens_' ListedSymbolData (Maybe Text)

-- | <a>listedSymbolDataLuldTierIndicator</a> Lens
listedSymbolDataLuldTierIndicatorL :: Lens_' ListedSymbolData (Maybe Text)

-- | <a>listedSymbolDataCountryofIncorporation</a> Lens
listedSymbolDataCountryofIncorporationL :: Lens_' ListedSymbolData (Maybe Text)

-- | <a>listedSymbolDataLeveragedEtpFlag</a> Lens
listedSymbolDataLeveragedEtpFlagL :: Lens_' ListedSymbolData (Maybe Text)

-- | <a>listedSymbolDataLeveragedEtpRatio</a> Lens
listedSymbolDataLeveragedEtpRatioL :: Lens_' ListedSymbolData (Maybe Text)

-- | <a>listedSymbolDataInverseEtpFlag</a> Lens
listedSymbolDataInverseEtpFlagL :: Lens_' ListedSymbolData (Maybe Text)

-- | <a>listedSymbolDataRecordUpdateTime</a> Lens
listedSymbolDataRecordUpdateTimeL :: Lens_' ListedSymbolData (Maybe Text)

-- | <a>ohlcDataOpen</a> Lens
ohlcDataOpenL :: Lens_' OhlcData (Maybe OhlcDataOpen)

-- | <a>ohlcDataClose</a> Lens
ohlcDataCloseL :: Lens_' OhlcData (Maybe OhlcDataClose)

-- | <a>ohlcDataHigh</a> Lens
ohlcDataHighL :: Lens_' OhlcData (Maybe Double)

-- | <a>ohlcDataLow</a> Lens
ohlcDataLowL :: Lens_' OhlcData (Maybe Double)

-- | <a>ohlcDataClosePrice</a> Lens
ohlcDataClosePriceL :: Lens_' OhlcDataClose (Maybe Double)

-- | <a>ohlcDataCloseTime</a> Lens
ohlcDataCloseTimeL :: Lens_' OhlcDataClose (Maybe Double)

-- | <a>ohlcDataOpenPrice</a> Lens
ohlcDataOpenPriceL :: Lens_' OhlcDataOpen (Maybe Double)

-- | <a>ohlcDataOpenTime</a> Lens
ohlcDataOpenTimeL :: Lens_' OhlcDataOpen (Maybe Double)

-- | <a>orderPrice</a> Lens
orderPriceL :: Lens_' Order (Maybe Double)

-- | <a>orderSize</a> Lens
orderSizeL :: Lens_' Order (Maybe Double)

-- | <a>orderTimestamp</a> Lens
orderTimestampL :: Lens_' Order (Maybe Double)

-- | <a>priceDataSymbol</a> Lens
priceDataSymbolL :: Lens_' PriceData (Maybe Text)

-- | <a>priceDataDate</a> Lens
priceDataDateL :: Lens_' PriceData (Maybe Date)

-- | <a>priceDataOpen</a> Lens
priceDataOpenL :: Lens_' PriceData (Maybe Double)

-- | <a>priceDataHigh</a> Lens
priceDataHighL :: Lens_' PriceData (Maybe Double)

-- | <a>priceDataLow</a> Lens
priceDataLowL :: Lens_' PriceData (Maybe Double)

-- | <a>priceDataClose</a> Lens
priceDataCloseL :: Lens_' PriceData (Maybe Double)

-- | <a>priceDataVolume</a> Lens
priceDataVolumeL :: Lens_' PriceData (Maybe Double)

-- | <a>priceDataUnadjustedVolume</a> Lens
priceDataUnadjustedVolumeL :: Lens_' PriceData (Maybe Double)

-- | <a>priceDataChange</a> Lens
priceDataChangeL :: Lens_' PriceData (Maybe Double)

-- | <a>priceDataChangePercent</a> Lens
priceDataChangePercentL :: Lens_' PriceData (Maybe Double)

-- | <a>priceDataVwap</a> Lens
priceDataVwapL :: Lens_' PriceData (Maybe Double)

-- | <a>quoteSymbol</a> Lens
quoteSymbolL :: Lens_' Quote (Maybe Text)

-- | <a>quoteCompanyName</a> Lens
quoteCompanyNameL :: Lens_' Quote (Maybe Text)

-- | <a>quotePrimaryExchange</a> Lens
quotePrimaryExchangeL :: Lens_' Quote (Maybe Text)

-- | <a>quoteSector</a> Lens
quoteSectorL :: Lens_' Quote (Maybe Text)

-- | <a>quoteCalculationPrice</a> Lens
quoteCalculationPriceL :: Lens_' Quote (Maybe E'CalculationPrice)

-- | <a>quoteOpen</a> Lens
quoteOpenL :: Lens_' Quote (Maybe Double)

-- | <a>quoteOpenTime</a> Lens
quoteOpenTimeL :: Lens_' Quote (Maybe Double)

-- | <a>quoteClose</a> Lens
quoteCloseL :: Lens_' Quote (Maybe Double)

-- | <a>quoteCloseTime</a> Lens
quoteCloseTimeL :: Lens_' Quote (Maybe Double)

-- | <a>quoteHigh</a> Lens
quoteHighL :: Lens_' Quote (Maybe Double)

-- | <a>quoteLow</a> Lens
quoteLowL :: Lens_' Quote (Maybe Double)

-- | <a>quoteLatestPrice</a> Lens
quoteLatestPriceL :: Lens_' Quote (Maybe Double)

-- | <a>quoteLatestSource</a> Lens
quoteLatestSourceL :: Lens_' Quote (Maybe E'LatestSource)

-- | <a>quoteLatestTime</a> Lens
quoteLatestTimeL :: Lens_' Quote (Maybe Text)

-- | <a>quoteLatestUpdate</a> Lens
quoteLatestUpdateL :: Lens_' Quote (Maybe Double)

-- | <a>quoteLatestVolume</a> Lens
quoteLatestVolumeL :: Lens_' Quote (Maybe Double)

-- | <a>quoteIexRealtimePrice</a> Lens
quoteIexRealtimePriceL :: Lens_' Quote (Maybe Double)

-- | <a>quoteIexRealtimeSize</a> Lens
quoteIexRealtimeSizeL :: Lens_' Quote (Maybe Double)

-- | <a>quoteIexLastUpdated</a> Lens
quoteIexLastUpdatedL :: Lens_' Quote (Maybe Double)

-- | <a>quoteDelayedPrice</a> Lens
quoteDelayedPriceL :: Lens_' Quote (Maybe Double)

-- | <a>quoteDelayedPriceTime</a> Lens
quoteDelayedPriceTimeL :: Lens_' Quote (Maybe Double)

-- | <a>quoteExtendedPrice</a> Lens
quoteExtendedPriceL :: Lens_' Quote (Maybe Double)

-- | <a>quoteExtendedChange</a> Lens
quoteExtendedChangeL :: Lens_' Quote (Maybe Double)

-- | <a>quoteExtendedChangePercent</a> Lens
quoteExtendedChangePercentL :: Lens_' Quote (Maybe Double)

-- | <a>quoteExtendedPriceTime</a> Lens
quoteExtendedPriceTimeL :: Lens_' Quote (Maybe Double)

-- | <a>quotePreviousClose</a> Lens
quotePreviousCloseL :: Lens_' Quote (Maybe Double)

-- | <a>quoteChange</a> Lens
quoteChangeL :: Lens_' Quote (Maybe Double)

-- | <a>quoteChangePercent</a> Lens
quoteChangePercentL :: Lens_' Quote (Maybe Double)

-- | <a>quoteIexMarketPercent</a> Lens
quoteIexMarketPercentL :: Lens_' Quote (Maybe Double)

-- | <a>quoteIexVolume</a> Lens
quoteIexVolumeL :: Lens_' Quote (Maybe Double)

-- | <a>quoteAvgTotalVolume</a> Lens
quoteAvgTotalVolumeL :: Lens_' Quote (Maybe Double)

-- | <a>quoteIexBidPrice</a> Lens
quoteIexBidPriceL :: Lens_' Quote (Maybe Double)

-- | <a>quoteIexBidSize</a> Lens
quoteIexBidSizeL :: Lens_' Quote (Maybe Double)

-- | <a>quoteIexAskPrice</a> Lens
quoteIexAskPriceL :: Lens_' Quote (Maybe Double)

-- | <a>quoteIexAskSize</a> Lens
quoteIexAskSizeL :: Lens_' Quote (Maybe Double)

-- | <a>quoteMarketCap</a> Lens
quoteMarketCapL :: Lens_' Quote (Maybe Double)

-- | <a>quotePeRatio</a> Lens
quotePeRatioL :: Lens_' Quote (Maybe Double)

-- | <a>quoteWeek52High</a> Lens
quoteWeek52HighL :: Lens_' Quote (Maybe Double)

-- | <a>quoteWeek52Low</a> Lens
quoteWeek52LowL :: Lens_' Quote (Maybe Double)

-- | <a>quoteYtdChange</a> Lens
quoteYtdChangeL :: Lens_' Quote (Maybe Double)

-- | <a>recordedValueRecordValue</a> Lens
recordedValueRecordValueL :: Lens_' RecordedValue (Maybe Double)

-- | <a>recordedValueRecordDate</a> Lens
recordedValueRecordDateL :: Lens_' RecordedValue (Maybe Text)

-- | <a>recordedValuePreviousDayValue</a> Lens
recordedValuePreviousDayValueL :: Lens_' RecordedValue (Maybe Double)

-- | <a>recordedValueAvg30Value</a> Lens
recordedValueAvg30ValueL :: Lens_' RecordedValue (Maybe Double)

-- | <a>shortInterestSettlementDate</a> Lens
shortInterestSettlementDateL :: Lens_' ShortInterest (Maybe Text)

-- | <a>shortInterestSecurityName</a> Lens
shortInterestSecurityNameL :: Lens_' ShortInterest (Maybe Text)

-- | <a>shortInterestCurrentShortIntereste</a> Lens
shortInterestCurrentShortInteresteL :: Lens_' ShortInterest (Maybe Double)

-- | <a>shortInterestPreviousShortInterest</a> Lens
shortInterestPreviousShortInterestL :: Lens_' ShortInterest (Maybe Double)

-- | <a>shortInterestPercentChange</a> Lens
shortInterestPercentChangeL :: Lens_' ShortInterest (Maybe Double)

-- | <a>shortInterestAverageDailyVolume</a> Lens
shortInterestAverageDailyVolumeL :: Lens_' ShortInterest (Maybe Double)

-- | <a>shortInterestDaystoCover</a> Lens
shortInterestDaystoCoverL :: Lens_' ShortInterest (Maybe Double)

-- | <a>shortInterestStockAdjustmentFlag</a> Lens
shortInterestStockAdjustmentFlagL :: Lens_' ShortInterest (Maybe Text)

-- | <a>shortInterestRevisionFlag</a> Lens
shortInterestRevisionFlagL :: Lens_' ShortInterest (Maybe Text)

-- | <a>shortInterestSymbolinInetSymbology</a> Lens
shortInterestSymbolinInetSymbologyL :: Lens_' ShortInterest (Maybe Text)

-- | <a>shortInterestSymbolinCqsSymbology</a> Lens
shortInterestSymbolinCqsSymbologyL :: Lens_' ShortInterest (Maybe Text)

-- | <a>shortInterestSymbolinCmsSymbology</a> Lens
shortInterestSymbolinCmsSymbologyL :: Lens_' ShortInterest (Maybe Text)

-- | <a>shortInterestNewIssueFlag</a> Lens
shortInterestNewIssueFlagL :: Lens_' ShortInterest (Maybe Text)

-- | <a>shortInterestCompanyName</a> Lens
shortInterestCompanyNameL :: Lens_' ShortInterest (Maybe Text)

-- | <a>statsAverageDailyVolume</a> Lens
statsAverageDailyVolumeL :: Lens_' Stats (Maybe Double)

-- | <a>statsAverageDailyRoutedVolume</a> Lens
statsAverageDailyRoutedVolumeL :: Lens_' Stats (Maybe Double)

-- | <a>statsAverageMarketShare</a> Lens
statsAverageMarketShareL :: Lens_' Stats (Maybe Double)

-- | <a>statsAverageOrderSize</a> Lens
statsAverageOrderSizeL :: Lens_' Stats (Maybe Double)

-- | <a>statsAverageFillSize</a> Lens
statsAverageFillSizeL :: Lens_' Stats (Maybe Double)

-- | <a>statsBin100Percent</a> Lens
statsBin100PercentL :: Lens_' Stats (Maybe Double)

-- | <a>statsBin101Percent</a> Lens
statsBin101PercentL :: Lens_' Stats (Maybe Double)

-- | <a>statsBin200Percent</a> Lens
statsBin200PercentL :: Lens_' Stats (Maybe Double)

-- | <a>statsBin300Percent</a> Lens
statsBin300PercentL :: Lens_' Stats (Maybe Double)

-- | <a>statsBin400Percent</a> Lens
statsBin400PercentL :: Lens_' Stats (Maybe Double)

-- | <a>statsBin500Percent</a> Lens
statsBin500PercentL :: Lens_' Stats (Maybe Double)

-- | <a>statsBin1000Percent</a> Lens
statsBin1000PercentL :: Lens_' Stats (Maybe Double)

-- | <a>statsBin5000Percent</a> Lens
statsBin5000PercentL :: Lens_' Stats (Maybe Double)

-- | <a>statsBin10000Percent</a> Lens
statsBin10000PercentL :: Lens_' Stats (Maybe Double)

-- | <a>statsBin10000Trades</a> Lens
statsBin10000TradesL :: Lens_' Stats (Maybe Double)

-- | <a>statsBin20000Trades</a> Lens
statsBin20000TradesL :: Lens_' Stats (Maybe Double)

-- | <a>statsBin50000Trades</a> Lens
statsBin50000TradesL :: Lens_' Stats (Maybe Double)

-- | <a>statsUniqueSymbolsTraded</a> Lens
statsUniqueSymbolsTradedL :: Lens_' Stats (Maybe Double)

-- | <a>statsBlockPercent</a> Lens
statsBlockPercentL :: Lens_' Stats (Maybe Double)

-- | <a>statsSelfCrossPercent</a> Lens
statsSelfCrossPercentL :: Lens_' Stats (Maybe Double)

-- | <a>statsEtfPercent</a> Lens
statsEtfPercentL :: Lens_' Stats (Maybe Double)

-- | <a>statsLargeCapPercent</a> Lens
statsLargeCapPercentL :: Lens_' Stats (Maybe Double)

-- | <a>statsMidCapPercent</a> Lens
statsMidCapPercentL :: Lens_' Stats (Maybe Double)

-- | <a>statsSmallCapPercent</a> Lens
statsSmallCapPercentL :: Lens_' Stats (Maybe Double)

-- | <a>statsVenueArcxFirstWaveWeight</a> Lens
statsVenueArcxFirstWaveWeightL :: Lens_' Stats (Maybe Double)

-- | <a>statsVenueBatsFirstWaveWeight</a> Lens
statsVenueBatsFirstWaveWeightL :: Lens_' Stats (Maybe Double)

-- | <a>statsVenueBatyFirstWaveWeight</a> Lens
statsVenueBatyFirstWaveWeightL :: Lens_' Stats (Maybe Double)

-- | <a>statsVenueEdgaFirstWaveWeight</a> Lens
statsVenueEdgaFirstWaveWeightL :: Lens_' Stats (Maybe Double)

-- | <a>statsVenueEdgxFirstWaveWeight</a> Lens
statsVenueEdgxFirstWaveWeightL :: Lens_' Stats (Maybe Double)

-- | <a>statsVenueOverallFirstWaveWeight</a> Lens
statsVenueOverallFirstWaveWeightL :: Lens_' Stats (Maybe Double)

-- | <a>statsVenueXaseFirstWaveWeight</a> Lens
statsVenueXaseFirstWaveWeightL :: Lens_' Stats (Maybe Double)

-- | <a>statsVenueXbosFirstWaveWeight</a> Lens
statsVenueXbosFirstWaveWeightL :: Lens_' Stats (Maybe Double)

-- | <a>statsVenueXchiFirstWaveWeight</a> Lens
statsVenueXchiFirstWaveWeightL :: Lens_' Stats (Maybe Double)

-- | <a>statsVenueXcisFirstWaveWeight</a> Lens
statsVenueXcisFirstWaveWeightL :: Lens_' Stats (Maybe Double)

-- | <a>statsVenueXngsFirstWaveWeight</a> Lens
statsVenueXngsFirstWaveWeightL :: Lens_' Stats (Maybe Double)

-- | <a>statsVenueXnysFirstWaveWeight</a> Lens
statsVenueXnysFirstWaveWeightL :: Lens_' Stats (Maybe Double)

-- | <a>statsVenueXphlFirstWaveWeight</a> Lens
statsVenueXphlFirstWaveWeightL :: Lens_' Stats (Maybe Double)

-- | <a>statsVenueArcxFirstWaveRate</a> Lens
statsVenueArcxFirstWaveRateL :: Lens_' Stats (Maybe Double)

-- | <a>statsVenueBatsFirstWaveRate</a> Lens
statsVenueBatsFirstWaveRateL :: Lens_' Stats (Maybe Double)

-- | <a>statsVenueBatyFirstWaveRate</a> Lens
statsVenueBatyFirstWaveRateL :: Lens_' Stats (Maybe Double)

-- | <a>statsVenueEdgaFirstWaveRate</a> Lens
statsVenueEdgaFirstWaveRateL :: Lens_' Stats (Maybe Double)

-- | <a>statsVenueEdgxFirstWaveRate</a> Lens
statsVenueEdgxFirstWaveRateL :: Lens_' Stats (Maybe Double)

-- | <a>statsVenueOverallFirstWaveRate</a> Lens
statsVenueOverallFirstWaveRateL :: Lens_' Stats (Maybe Double)

-- | <a>statsVenueXaseFirstWaveRate</a> Lens
statsVenueXaseFirstWaveRateL :: Lens_' Stats (Maybe Double)

-- | <a>statsVenueXbosFirstWaveRate</a> Lens
statsVenueXbosFirstWaveRateL :: Lens_' Stats (Maybe Double)

-- | <a>statsVenueXchiFirstWaveRate</a> Lens
statsVenueXchiFirstWaveRateL :: Lens_' Stats (Maybe Double)

-- | <a>statsVenueXcisFirstWaveRate</a> Lens
statsVenueXcisFirstWaveRateL :: Lens_' Stats (Maybe Double)

-- | <a>statsVenueXngsFirstWaveRate</a> Lens
statsVenueXngsFirstWaveRateL :: Lens_' Stats (Maybe Double)

-- | <a>statsVenueXnysFirstWaveRate</a> Lens
statsVenueXnysFirstWaveRateL :: Lens_' Stats (Maybe Double)

-- | <a>statsVenueXphlFirstWaveRate</a> Lens
statsVenueXphlFirstWaveRateL :: Lens_' Stats (Maybe Double)

-- | <a>systemEventSystemEvent</a> Lens
systemEventSystemEventL :: Lens_' SystemEvent (Maybe E'SystemEvent)

-- | <a>systemEventTimestamp</a> Lens
systemEventTimestampL :: Lens_' SystemEvent (Maybe Double)

-- | <a>timestampedValueValue</a> Lens
timestampedValueValueL :: Lens_' TimestampedValue (Maybe Double)

-- | <a>timestampedValueLastUpdated</a> Lens
timestampedValueLastUpdatedL :: Lens_' TimestampedValue (Maybe Double)

-- | <a>todayEarningsActualEps</a> Lens
todayEarningsActualEpsL :: Lens_' TodayEarnings (Maybe Double)

-- | <a>todayEarningsConsensusEps</a> Lens
todayEarningsConsensusEpsL :: Lens_' TodayEarnings (Maybe Double)

-- | <a>todayEarningsEstimatedEps</a> Lens
todayEarningsEstimatedEpsL :: Lens_' TodayEarnings (Maybe Double)

-- | <a>todayEarningsAnnounceTime</a> Lens
todayEarningsAnnounceTimeL :: Lens_' TodayEarnings (Maybe Text)

-- | <a>todayEarningsNumberOfEstimates</a> Lens
todayEarningsNumberOfEstimatesL :: Lens_' TodayEarnings (Maybe Double)

-- | <a>todayEarningsEpsSurpriseDollar</a> Lens
todayEarningsEpsSurpriseDollarL :: Lens_' TodayEarnings (Maybe Double)

-- | <a>todayEarningsEpsReportDate</a> Lens
todayEarningsEpsReportDateL :: Lens_' TodayEarnings (Maybe Date)

-- | <a>todayEarningsFiscalPeriod</a> Lens
todayEarningsFiscalPeriodL :: Lens_' TodayEarnings (Maybe Text)

-- | <a>todayEarningsFiscalEndDate</a> Lens
todayEarningsFiscalEndDateL :: Lens_' TodayEarnings (Maybe Date)

-- | <a>todayEarningsYearAgo</a> Lens
todayEarningsYearAgoL :: Lens_' TodayEarnings (Maybe Double)

-- | <a>todayEarningsYearAgoChangePercent</a> Lens
todayEarningsYearAgoChangePercentL :: Lens_' TodayEarnings (Maybe Double)

-- | <a>todayEarningsEstimatedChangePercent</a> Lens
todayEarningsEstimatedChangePercentL :: Lens_' TodayEarnings (Maybe Double)

-- | <a>todayEarningsSymbolId</a> Lens
todayEarningsSymbolIdL :: Lens_' TodayEarnings (Maybe Double)

-- | <a>todayEarningsSymbol</a> Lens
todayEarningsSymbolL :: Lens_' TodayEarnings (Maybe Text)

-- | <a>todayEarningsQuote</a> Lens
todayEarningsQuoteL :: Lens_' TodayEarnings (Maybe Quote)

-- | <a>todayEarningsHeadline</a> Lens
todayEarningsHeadlineL :: Lens_' TodayEarnings (Maybe Text)

-- | <a>todayEarningsAllOfSymbol</a> Lens
todayEarningsAllOfSymbolL :: Lens_' TodayEarningsAllOf (Maybe Text)

-- | <a>todayEarningsAllOfQuote</a> Lens
todayEarningsAllOfQuoteL :: Lens_' TodayEarningsAllOf (Maybe Quote)

-- | <a>todayEarningsAllOfHeadline</a> Lens
todayEarningsAllOfHeadlineL :: Lens_' TodayEarningsAllOf (Maybe Text)

-- | <a>tradePrice</a> Lens
tradePriceL :: Lens_' Trade (Maybe Double)

-- | <a>tradeSize</a> Lens
tradeSizeL :: Lens_' Trade (Maybe Double)

-- | <a>tradeTradeId</a> Lens
tradeTradeIdL :: Lens_' Trade (Maybe Double)

-- | <a>tradeIsIso</a> Lens
tradeIsIsoL :: Lens_' Trade (Maybe Bool)

-- | <a>tradeIsOddLot</a> Lens
tradeIsOddLotL :: Lens_' Trade (Maybe Bool)

-- | <a>tradeIsOutsideRegularHours</a> Lens
tradeIsOutsideRegularHoursL :: Lens_' Trade (Maybe Bool)

-- | <a>tradeIsSinglePriceCross</a> Lens
tradeIsSinglePriceCrossL :: Lens_' Trade (Maybe Bool)

-- | <a>tradeIsTradeThroughExempt</a> Lens
tradeIsTradeThroughExemptL :: Lens_' Trade (Maybe Bool)

-- | <a>tradeTimestamp</a> Lens
tradeTimestampL :: Lens_' Trade (Maybe Double)


module IEXHaskellSDK
